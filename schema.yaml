openapi: 3.1.0
info:
  title: LocalRankAI API
  version: 1.0.0
  description: 'API documentation for LocalRankAI - The #1 Local SEO Platform'
paths:
  /api/archived-scans/:
    get:
      operationId: apiArchivedScansList
      description: ViewSet dedicated to archived scans. Allows listing archived scans
        and toggling the archived flag via PATCH/PUT.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedScanListList'
          description: ''
  /api/archived-scans/{uuid}/:
    put:
      operationId: apiArchivedScansUpdate
      description: ViewSet dedicated to archived scans. Allows listing archived scans
        and toggling the archived flag via PATCH/PUT.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanArchiveRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScanArchiveRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScanArchiveRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanArchive'
          description: ''
    patch:
      operationId: apiArchivedScansPartialUpdate
      description: ViewSet dedicated to archived scans. Allows listing archived scans
        and toggling the archived flag via PATCH/PUT.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedScanArchiveRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedScanArchiveRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedScanArchiveRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanArchive'
          description: ''
  /api/articles/api/credit/balance/:
    get:
      operationId: apiArticlesApiCreditBalanceRetrieve
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/articles/api/credit/deduct/:
    post:
      operationId: apiArticlesApiCreditDeductCreate
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/articles/credit/redirect/:
    get:
      operationId: apiArticlesCreditRedirectRetrieve
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/bulk-credit-deduction/:
    post:
      operationId: apiBulkCreditDeductionCreate
      description: |-
        API View to deduct credits manually for a list of provided scan UUIDs.
        Expects a POST request with a JSON body like: {"scan_uuids": ["uuid1", "uuid2", ...]}
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/business/:
    get:
      operationId: apiBusinessList
      description: |-
        List businesses for the user, grouped by place_id.
        Each group includes a representative business and all associated scans.
        If place_id is not available, businesses may be grouped by name similarity.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBusinessList'
          description: ''
    post:
      operationId: apiBusinessCreate
      description: ViewSet for business operations
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BusinessRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
          description: ''
  /api/business/{uuid}/:
    get:
      operationId: apiBusinessRetrieve
      description: ViewSet for business operations
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
          description: ''
    put:
      operationId: apiBusinessUpdate
      description: ViewSet for business operations
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BusinessRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
          description: ''
    patch:
      operationId: apiBusinessPartialUpdate
      description: ViewSet for business operations
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBusinessRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBusinessRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBusinessRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
          description: ''
    delete:
      operationId: apiBusinessDestroy
      description: ViewSet for business operations
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/business/{uuid}/activity_logs/:
    get:
      operationId: apiBusinessActivityLogsRetrieve
      description: Return activity logs for the specified Business.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
          description: ''
  /api/business/validate/:
    post:
      operationId: apiBusinessValidateCreate
      description: |-
        Validate a Google Maps URL and extract or use provided business information.

        Input Parameters:
        - url: Required. A valid Google Maps URL for the business
        - place_id: Optional. The Google Place ID if already known
        - business_details: Optional. JSON object with business details to use instead of scraping.
          Example format:
          {
            "name": "Business Name",
            "place_id": "ChIJ...",
            "cid": "12345",
            "address": "123 Main St, City, State",
            "latitude": 37.7749,
            "longitude": -122.4194,
            "variations": ["Alt Name 1", "Alt Name 2"],
            "business_id": "id123"
          }

        Returns business information and validation status.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessValidationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessValidationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BusinessValidationRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessValidation'
          description: ''
  /api/businesses/:
    get:
      operationId: apiBusinessesList
      description: |-
        List businesses for the user, grouped by place_id.
        Each group includes a representative business and all associated scans.
        If place_id is not available, businesses may be grouped by name similarity.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBusinessList'
          description: ''
    post:
      operationId: apiBusinessesCreate
      description: ViewSet for business operations
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BusinessRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
          description: ''
  /api/businesses/{uuid}/:
    get:
      operationId: apiBusinessesRetrieve
      description: ViewSet for business operations
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
          description: ''
    put:
      operationId: apiBusinessesUpdate
      description: ViewSet for business operations
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BusinessRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
          description: ''
    patch:
      operationId: apiBusinessesPartialUpdate
      description: ViewSet for business operations
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBusinessRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBusinessRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBusinessRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
          description: ''
    delete:
      operationId: apiBusinessesDestroy
      description: ViewSet for business operations
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/businesses/{uuid}/activity_logs/:
    get:
      operationId: apiBusinessesActivityLogsRetrieve
      description: Return activity logs for the specified Business.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
          description: ''
  /api/businesses/validate/:
    post:
      operationId: apiBusinessesValidateCreate
      description: |-
        Validate a Google Maps URL and extract or use provided business information.

        Input Parameters:
        - url: Required. A valid Google Maps URL for the business
        - place_id: Optional. The Google Place ID if already known
        - business_details: Optional. JSON object with business details to use instead of scraping.
          Example format:
          {
            "name": "Business Name",
            "place_id": "ChIJ...",
            "cid": "12345",
            "address": "123 Main St, City, State",
            "latitude": 37.7749,
            "longitude": -122.4194,
            "variations": ["Alt Name 1", "Alt Name 2"],
            "business_id": "id123"
          }

        Returns business information and validation status.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessValidationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessValidationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BusinessValidationRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessValidation'
          description: ''
  /api/checkout/:
    post:
      operationId: createCreditCheckoutSession
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CheckoutRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CheckoutRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Checkout'
          description: ''
  /api/code-explorer/{appName}/:
    get:
      operationId: apiCodeExplorerRetrieve
      description: |-
        Display all code files in the specified app in a single HTML page or JSON.
        Access restricted by API key.
        Format options:
        - HTML (default): /api/code-explorer/{app_name}/?api_key=xxx
        - JSON: /api/code-explorer/{app_name}.json/?api_key=xxx or /api/code-explorer/{app_name}/?api_key=xxx&format=json

        Parameters:
        - app_name: The name of the app to explore (e.g., 'ranktracker', 'video')
        - prompt_text: Optional text to display in the prompt textarea (only used by some apps)
      parameters:
      - in: path
        name: appName
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/credit-logs/:
    get:
      operationId: apiCreditLogsList
      description: ViewSet for viewing Credit Logs.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCreditLogList'
          description: ''
  /api/credit-logs/{id}/:
    get:
      operationId: apiCreditLogsRetrieve
      description: ViewSet for viewing Credit Logs.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditLog'
          description: ''
  /api/credits:
    post:
      operationId: apiCreditsCreate
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/credits/:
    post:
      operationId: apiCreditsCreate2
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/gmb/audit/{auditId}/:
    get:
      operationId: apiGmbAuditRetrieve
      parameters:
      - in: path
        name: auditId
        schema:
          type: string
        required: true
      tags:
      - GMB Audit
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditResult'
          description: ''
  /api/gmb/audit/business/{businessIdentifier}/:
    get:
      operationId: apiGmbAuditBusinessList
      description: Get all audits for a specific business by UUID or business_id
      parameters:
      - in: path
        name: businessIdentifier
        schema:
          type: string
        required: true
      tags:
      - GMB Audit
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GMBAudit'
          description: ''
  /api/gmb/audit/list/:
    get:
      operationId: apiGmbAuditListList
      description: Get all audits, optionally filtered by gmb_url.
      parameters:
      - in: query
        name: gmb_url
        schema:
          type: string
        description: Filter audits by GMB URL
      tags:
      - GMB Audit
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GMBAudit'
          description: ''
  /api/gmb/audit/run/:
    post:
      operationId: apiGmbAuditRunCreate
      tags:
      - GMB Audit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunAuditRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RunAuditRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RunAuditRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditResponse'
          description: ''
  /api/gmb/audit/share/{shareToken}/:
    get:
      operationId: apiGmbAuditShareRetrieve
      description: Get audit results by public share token (no authentication required)
      parameters:
      - in: path
        name: shareToken
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - GMB Audit
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditResult'
          description: ''
  /api/gmb/businesses/:
    get:
      operationId: apiGmbBusinessesRetrieve
      description: |-
        API view for business operations.
        GET: List all businesses for the current user
        POST: Create a new business
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: apiGmbBusinessesCreate
      description: |-
        API view for business operations.
        GET: List all businesses for the current user
        POST: Create a new business
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: apiGmbBusinessesUpdate
      description: |-
        API view for business operations.
        GET: List all businesses for the current user
        POST: Create a new business
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/gmb/businesses/{businessId}/:
    get:
      operationId: apiGmbBusinessesRetrieve2
      description: |-
        API view for business operations.
        GET: List all businesses for the current user
        POST: Create a new business
      parameters:
      - in: path
        name: businessId
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: apiGmbBusinessesCreate2
      description: |-
        API view for business operations.
        GET: List all businesses for the current user
        POST: Create a new business
      parameters:
      - in: path
        name: businessId
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: apiGmbBusinessesUpdate2
      description: |-
        API view for business operations.
        GET: List all businesses for the current user
        POST: Create a new business
      parameters:
      - in: path
        name: businessId
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/gmb/credentials/:
    get:
      operationId: apiGmbCredentialsList
      description: |-
        ViewSet for managing merchant credentials.

        Endpoints:
        - GET /api/gmb/credentials/ - List all credentials
        - POST /api/gmb/credentials/ - Create new credential
        - GET /api/gmb/credentials/{id}/ - Get single credential
        - DELETE /api/gmb/credentials/{id}/ - Delete credential
        - DELETE /api/gmb/credentials/ - Delete all credentials
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMerchantCredentialList'
          description: ''
    post:
      operationId: apiGmbCredentialsCreate
      description: |-
        ViewSet for managing merchant credentials.

        Endpoints:
        - GET /api/gmb/credentials/ - List all credentials
        - POST /api/gmb/credentials/ - Create new credential
        - GET /api/gmb/credentials/{id}/ - Get single credential
        - DELETE /api/gmb/credentials/{id}/ - Delete credential
        - DELETE /api/gmb/credentials/ - Delete all credentials
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantCredentialRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MerchantCredentialRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MerchantCredentialRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantCredential'
          description: ''
  /api/gmb/credentials/{credentialId}/accounts/:
    get:
      operationId: apiGmbCredentialsAccountsRetrieve
      description: |-
        List GMB accounts for the specified merchant credential.
        Demonstrates usage of the GMBService class.

        Note the rate limits:
        - Read operations: 300 queries per minute (QPM)
        - Write operations: 10 edits per minute per location
      parameters:
      - in: path
        name: credentialId
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/gmb/credentials/{credentialId}/token/:
    get:
      operationId: apiGmbCredentialsTokenRetrieve
      description: |-
        Get a valid access token for the specified merchant credential.
        Automatically refreshes if the token is about to expire.
      parameters:
      - in: path
        name: credentialId
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/gmb/credentials/{id}/:
    get:
      operationId: apiGmbCredentialsRetrieve
      description: |-
        ViewSet for managing merchant credentials.

        Endpoints:
        - GET /api/gmb/credentials/ - List all credentials
        - POST /api/gmb/credentials/ - Create new credential
        - GET /api/gmb/credentials/{id}/ - Get single credential
        - DELETE /api/gmb/credentials/{id}/ - Delete credential
        - DELETE /api/gmb/credentials/ - Delete all credentials
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantCredential'
          description: ''
    put:
      operationId: apiGmbCredentialsUpdate
      description: |-
        ViewSet for managing merchant credentials.

        Endpoints:
        - GET /api/gmb/credentials/ - List all credentials
        - POST /api/gmb/credentials/ - Create new credential
        - GET /api/gmb/credentials/{id}/ - Get single credential
        - DELETE /api/gmb/credentials/{id}/ - Delete credential
        - DELETE /api/gmb/credentials/ - Delete all credentials
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantCredentialRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MerchantCredentialRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MerchantCredentialRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantCredential'
          description: ''
    patch:
      operationId: apiGmbCredentialsPartialUpdate
      description: |-
        ViewSet for managing merchant credentials.

        Endpoints:
        - GET /api/gmb/credentials/ - List all credentials
        - POST /api/gmb/credentials/ - Create new credential
        - GET /api/gmb/credentials/{id}/ - Get single credential
        - DELETE /api/gmb/credentials/{id}/ - Delete credential
        - DELETE /api/gmb/credentials/ - Delete all credentials
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMerchantCredentialRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMerchantCredentialRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMerchantCredentialRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantCredential'
          description: ''
    delete:
      operationId: apiGmbCredentialsDestroy
      description: |-
        ViewSet for managing merchant credentials.

        Endpoints:
        - GET /api/gmb/credentials/ - List all credentials
        - POST /api/gmb/credentials/ - Create new credential
        - GET /api/gmb/credentials/{id}/ - Get single credential
        - DELETE /api/gmb/credentials/{id}/ - Delete credential
        - DELETE /api/gmb/credentials/ - Delete all credentials
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/gmb/google-accounts/:
    get:
      operationId: apiGmbGoogleAccountsList
      description: ViewSet for managing Google My Business accounts.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMerchantCredentialList'
          description: ''
  /api/gmb/google-accounts/{id}/:
    get:
      operationId: apiGmbGoogleAccountsRetrieve
      description: ViewSet for managing Google My Business accounts.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantCredential'
          description: ''
  /api/gmb/google-accounts/{id}/enable_location/:
    post:
      operationId: apiGmbGoogleAccountsEnableLocationCreate
      description: |-
        Simple toggle to enable/disable a location.

        POST with:
        {
            "location_id": "123456",
            "enabled": true/false
        }

        Or legacy format:
        {
            "location_resource_name": "accounts/123/locations/456",
            "is_enabled": true/false
        }
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantCredentialRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MerchantCredentialRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MerchantCredentialRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantCredential'
          description: ''
  /api/gmb/google-accounts/{id}/locations/:
    get:
      operationId: apiGmbGoogleAccountsLocationsRetrieve
      description: List all locations for a specific Google account.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantCredential'
          description: ''
  /api/gmb/google-accounts/accounts_with_locations/:
    get:
      operationId: apiGmbGoogleAccountsAccountsWithLocationsRetrieve
      description: |-
        Get all Google accounts with their associated locations in a single call.

        Returns:
            Response with schema:
            {
                "accounts": [
                    {
                        "account_name": "string",
                        "account_id": "string",
                        "credential_id": "integer",
                        "locations": [
                            {
                                "resource_name": "string",
                                "location_id": "string",
                                "title": "string",
                                "address": "string",
                                "phone": "string",
                                "is_enabled": "boolean"
                            }
                        ]
                    }
                ]
            }
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GMBAccountsListResponse'
          description: ''
  /api/gmb/locations/:
    get:
      operationId: apiGmbLocationsList
      description: List all enabled locations across all credentials.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLocationList'
          description: ''
  /api/gmb/locations/{id}/toggle-weekly-posts/:
    post:
      operationId: apiGmbLocationsToggleWeeklyPostsCreate
      description: Toggle weekly post generation for a location
      summary: Toggle weekly posts
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToggleWeeklyPostsRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ToggleWeeklyPostsRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ToggleWeeklyPostsRequestRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToggleWeeklyPostsResponse'
          description: ''
  /api/gmb/locations/{id}/update_details/:
    patch:
      operationId: apiGmbLocationsUpdateDetailsPartialUpdate
      description: |-
        Update location details like title, business description, and keywords in our local database.
        Only updates fields that are explicitly provided and have non-blank values.

        PATCH /api/gmb/locations/{id}/update_details/

        Request body:
        {
            "title": "New Location Name",
            "business_description": "Updated business description",
            "keywords": "keyword1, keyword2, keyword3"
        }
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLocationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLocationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLocationRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: ''
  /api/gmb/posts/:
    get:
      operationId: apiGmbPostsList
      description: |-
        ViewSet for managing GMB posts (drafts, queued, and published).

        Endpoints:
        - POST /api/gmb/posts/ - Create a new draft post
        - GET /api/gmb/posts/ - List all posts (filter by ?status=DRAFT)
        - POST /api/gmb/posts/{id}/publish/ - Publish a draft post
        - POST /api/gmb/posts/{id}/queue/ - Queue a draft post for later
        - POST /api/gmb/posts/{id}/autosave/ - Autosave draft post changes
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGMBPostList'
          description: ''
    post:
      operationId: apiGmbPostsCreate
      description: Enhanced create method with better error logging
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GMBPost'
          description: ''
  /api/gmb/posts/{id}/:
    get:
      operationId: apiGmbPostsRetrieve
      description: |-
        ViewSet for managing GMB posts (drafts, queued, and published).

        Endpoints:
        - POST /api/gmb/posts/ - Create a new draft post
        - GET /api/gmb/posts/ - List all posts (filter by ?status=DRAFT)
        - POST /api/gmb/posts/{id}/publish/ - Publish a draft post
        - POST /api/gmb/posts/{id}/queue/ - Queue a draft post for later
        - POST /api/gmb/posts/{id}/autosave/ - Autosave draft post changes
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GMBPost'
          description: ''
    put:
      operationId: apiGmbPostsUpdate
      description: |-
        ViewSet for managing GMB posts (drafts, queued, and published).

        Endpoints:
        - POST /api/gmb/posts/ - Create a new draft post
        - GET /api/gmb/posts/ - List all posts (filter by ?status=DRAFT)
        - POST /api/gmb/posts/{id}/publish/ - Publish a draft post
        - POST /api/gmb/posts/{id}/queue/ - Queue a draft post for later
        - POST /api/gmb/posts/{id}/autosave/ - Autosave draft post changes
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GMBPost'
          description: ''
    patch:
      operationId: apiGmbPostsPartialUpdate
      description: |-
        ViewSet for managing GMB posts (drafts, queued, and published).

        Endpoints:
        - POST /api/gmb/posts/ - Create a new draft post
        - GET /api/gmb/posts/ - List all posts (filter by ?status=DRAFT)
        - POST /api/gmb/posts/{id}/publish/ - Publish a draft post
        - POST /api/gmb/posts/{id}/queue/ - Queue a draft post for later
        - POST /api/gmb/posts/{id}/autosave/ - Autosave draft post changes
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGMBPostRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGMBPostRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGMBPostRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GMBPost'
          description: ''
    delete:
      operationId: apiGmbPostsDestroy
      description: |-
        ViewSet for managing GMB posts (drafts, queued, and published).

        Endpoints:
        - POST /api/gmb/posts/ - Create a new draft post
        - GET /api/gmb/posts/ - List all posts (filter by ?status=DRAFT)
        - POST /api/gmb/posts/{id}/publish/ - Publish a draft post
        - POST /api/gmb/posts/{id}/queue/ - Queue a draft post for later
        - POST /api/gmb/posts/{id}/autosave/ - Autosave draft post changes
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/gmb/posts/{id}/autosave/:
    post:
      operationId: apiGmbPostsAutosaveCreate
      description: |-
        Autosave a draft post. This endpoint is designed to be called frequently
        (e.g., every 5 seconds) to save the user's current progress.

        Only updates the content (summary, image_url, cta fields) without changing status.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GMBPost'
          description: ''
  /api/gmb/posts/{id}/generate_content_for_post/:
    post:
      operationId: apiGmbPostsGenerateContentForPostCreate
      description: |-
        Generate AI content for a specific Google My Business post.

        This endpoint uses AI to generate engaging content for an existing post.
        The generated content will update the post's summary.

        Request body:
        ```json
        {
            "business_type": "Restaurant",  // Type of business
            "post_type": "UPDATE",          // Type of post (UPDATE, OFFER, EVENT)
            "keywords": "weekend special, brunch", // Optional keywords to include
            "tone": "friendly",              // Optional tone (friendly, professional, casual, formal)
            "location_id": "123456"         // Optional location ID to use its metadata
        }
        ```

        Returns:
        ```json
        {
            "content": "The generated post content text",
            "post": { post data with updated summary },
            "success": true
        }
        ```

        Note: Rate limited to {MAX_AI_DRAFTS_PER_MONTH} requests per month per user.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GMBPost'
          description: ''
  /api/gmb/posts/{id}/publish/:
    post:
      operationId: apiGmbPostsPublishCreate
      description: Immediately publish a post.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GMBPost'
          description: ''
  /api/gmb/posts/{id}/queue/:
    post:
      operationId: apiGmbPostsQueueCreate
      description: Queue a draft post for publishing.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GMBPost'
          description: ''
  /api/gmb/posts/sync/:
    post:
      operationId: apiGmbPostsSyncCreate
      description: |-
        Trigger asynchronous sync of published posts for the current user.

        Fires the ``sync_posts`` Celery task and returns 202 Accepted immediately.
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/gmb/refresh_token/:
    post:
      operationId: apiGmbRefreshTokenCreate
      description: Refresh access tokens for merchant credentials.
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/gmb/reviews/:
    get:
      operationId: apiGmbReviewsList
      description: Override list to support both paginated and non-paginated responses
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewList'
          description: ''
    post:
      operationId: apiGmbReviewsCreate
      description: |-
        ViewSet for managing Google My Business reviews.

        Endpoints:
        - GET /api/gmb/reviews/ - List paginated reviews (with ?all=true for non-paginated)
        - GET /api/gmb/reviews/{id}/ - Get a single review
        - POST /api/gmb/reviews/{id}/reply/ - Reply to a review
        - DELETE /api/gmb/reviews/{id}/reply/ - Delete a reply
        - POST /api/gmb/reviews/ai_generate/ - Generate AI responses for single/multiple reviews
        - POST /api/gmb/reviews/{id}/save_draft/ - Save a draft reply
        - POST /api/gmb/reviews/bulk_publish_drafts/ - Publish multiple draft replies
        - GET /api/gmb/reviews/bulk_status/ - Get bulk operation status and usage info
        - POST /api/gmb/reviews/sync/ - Trigger manual sync of reviews
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
  /api/gmb/reviews/{id}/:
    get:
      operationId: apiGmbReviewsRetrieve
      description: Override retrieve to include draft data if it exists
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    put:
      operationId: apiGmbReviewsUpdate
      description: |-
        ViewSet for managing Google My Business reviews.

        Endpoints:
        - GET /api/gmb/reviews/ - List paginated reviews (with ?all=true for non-paginated)
        - GET /api/gmb/reviews/{id}/ - Get a single review
        - POST /api/gmb/reviews/{id}/reply/ - Reply to a review
        - DELETE /api/gmb/reviews/{id}/reply/ - Delete a reply
        - POST /api/gmb/reviews/ai_generate/ - Generate AI responses for single/multiple reviews
        - POST /api/gmb/reviews/{id}/save_draft/ - Save a draft reply
        - POST /api/gmb/reviews/bulk_publish_drafts/ - Publish multiple draft replies
        - GET /api/gmb/reviews/bulk_status/ - Get bulk operation status and usage info
        - POST /api/gmb/reviews/sync/ - Trigger manual sync of reviews
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    patch:
      operationId: apiGmbReviewsPartialUpdate
      description: |-
        ViewSet for managing Google My Business reviews.

        Endpoints:
        - GET /api/gmb/reviews/ - List paginated reviews (with ?all=true for non-paginated)
        - GET /api/gmb/reviews/{id}/ - Get a single review
        - POST /api/gmb/reviews/{id}/reply/ - Reply to a review
        - DELETE /api/gmb/reviews/{id}/reply/ - Delete a reply
        - POST /api/gmb/reviews/ai_generate/ - Generate AI responses for single/multiple reviews
        - POST /api/gmb/reviews/{id}/save_draft/ - Save a draft reply
        - POST /api/gmb/reviews/bulk_publish_drafts/ - Publish multiple draft replies
        - GET /api/gmb/reviews/bulk_status/ - Get bulk operation status and usage info
        - POST /api/gmb/reviews/sync/ - Trigger manual sync of reviews
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReviewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReviewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReviewRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    delete:
      operationId: apiGmbReviewsDestroy
      description: |-
        ViewSet for managing Google My Business reviews.

        Endpoints:
        - GET /api/gmb/reviews/ - List paginated reviews (with ?all=true for non-paginated)
        - GET /api/gmb/reviews/{id}/ - Get a single review
        - POST /api/gmb/reviews/{id}/reply/ - Reply to a review
        - DELETE /api/gmb/reviews/{id}/reply/ - Delete a reply
        - POST /api/gmb/reviews/ai_generate/ - Generate AI responses for single/multiple reviews
        - POST /api/gmb/reviews/{id}/save_draft/ - Save a draft reply
        - POST /api/gmb/reviews/bulk_publish_drafts/ - Publish multiple draft replies
        - GET /api/gmb/reviews/bulk_status/ - Get bulk operation status and usage info
        - POST /api/gmb/reviews/sync/ - Trigger manual sync of reviews
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/gmb/reviews/{id}/delete_reply/:
    delete:
      operationId: apiGmbReviewsDeleteReplyDestroy
      description: Queue a reply deletion for a Google My Business review
      summary: Delete a review reply
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteReplyResponse'
          description: ''
  /api/gmb/reviews/{id}/reply/:
    post:
      operationId: apiGmbReviewsReplyCreate
      description: Queue a reply to a Google My Business review for publication
      summary: Reply to a review
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplyRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReplyRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReplyRequestRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplyResponse'
          description: ''
  /api/gmb/reviews/{id}/save_draft/:
    post:
      operationId: apiGmbReviewsSaveDraftCreate
      description: |-
        Save a draft reply for a review without publishing it to Google.

        POST /api/gmb/reviews/{review_id}/save_draft/

        Request body:
        {
            "comment": "Draft reply text"
        }

        Returns:
        {
            "success": true,
            "draft": {
                "comment": "Draft reply text",
                "updated_at": "2024-03-21T10:00:00Z"
            }
        }
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
  /api/gmb/reviews/ai_generate/:
    post:
      operationId: apiGmbReviewsAiGenerateCreate
      description: Generate AI replies for one or multiple reviews
      summary: Generate AI review replies
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIGenerationRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AIGenerationRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AIGenerationRequestRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIGenerationResponse'
          description: ''
  /api/gmb/reviews/bulk_publish_drafts/:
    post:
      operationId: apiGmbReviewsBulkPublishDraftsCreate
      description: Publish multiple draft replies to Google My Business
      summary: Bulk publish draft replies
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkPublishRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BulkPublishRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BulkPublishRequestRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkPublishResponse'
          description: ''
  /api/gmb/reviews/bulk_status/:
    get:
      operationId: apiGmbReviewsBulkStatusRetrieve
      description: Get bulk operation status and monthly usage information
      summary: Get bulk operation status
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkStatusResponse'
          description: ''
  /api/gmb/reviews/sync/:
    post:
      operationId: apiGmbReviewsSyncCreate
      description: |-
        Trigger an asynchronous sync of reviews for the current user.

        The task will still iterate over *all* enabled locations, but the caller
        might only be interested in their own. The backend therefore starts the
        global sync task and immediately returns 202 Accepted. Front-end can poll
        ``/reviews`` for fresh data.

        Returns:
            Response with schema:
            {
                "success": true
            }
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncResponse'
          description: ''
  /api/gmb/reviews/task_status/{taskId}/:
    get:
      operationId: apiGmbReviewsTaskStatusRetrieve
      description: Check the status of a background AI generation task
      summary: Check AI generation task status
      parameters:
      - in: path
        name: taskId
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
  /api/gmb/status/:
    get:
      operationId: apiGmbStatusRetrieve
      description: Get status of merchant credentials for the current user.
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/palette/brand-kits/:
    get:
      operationId: apiPaletteBrandKitsList
      description: |-
        Mixin to filter querysets and set user on save for objects owned by a user.
        Assumes the model has a 'user' ForeignKey field.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBrandKitList'
          description: ''
    post:
      operationId: apiPaletteBrandKitsCreate
      description: |-
        Mixin to filter querysets and set user on save for objects owned by a user.
        Assumes the model has a 'user' ForeignKey field.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandKitRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BrandKitRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BrandKitRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandKit'
          description: ''
  /api/palette/brand-kits/{id}/:
    get:
      operationId: apiPaletteBrandKitsRetrieve
      description: |-
        Mixin to filter querysets and set user on save for objects owned by a user.
        Assumes the model has a 'user' ForeignKey field.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this brand kit.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandKit'
          description: ''
    put:
      operationId: apiPaletteBrandKitsUpdate
      description: |-
        Mixin to filter querysets and set user on save for objects owned by a user.
        Assumes the model has a 'user' ForeignKey field.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this brand kit.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandKitRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BrandKitRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BrandKitRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandKit'
          description: ''
    patch:
      operationId: apiPaletteBrandKitsPartialUpdate
      description: |-
        Mixin to filter querysets and set user on save for objects owned by a user.
        Assumes the model has a 'user' ForeignKey field.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this brand kit.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBrandKitRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBrandKitRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBrandKitRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandKit'
          description: ''
    delete:
      operationId: apiPaletteBrandKitsDestroy
      description: |-
        Mixin to filter querysets and set user on save for objects owned by a user.
        Assumes the model has a 'user' ForeignKey field.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this brand kit.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/palette/brand-kits/{id}/copy/:
    post:
      operationId: apiPaletteBrandKitsCopyCreate
      description: |-
        Create a copy of a brand kit for the current user.
        Works with both their own brand kits and public ones from other users.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this brand kit.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandKitRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BrandKitRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BrandKitRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandKit'
          description: ''
  /api/palette/brand-kits/public/:
    get:
      operationId: apiPaletteBrandKitsPublicRetrieve
      description: |-
        Return only public brand kits from all users, for discovery/marketplace.
        Can be filtered by name using query parameter ?search=query_string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandKit'
          description: ''
  /api/palette/image-generations/:
    get:
      operationId: apiPaletteImageGenerationsList
      description: |-
        Mixin to filter querysets and set user on save for objects owned by a user.
        Assumes the model has a 'user' ForeignKey field.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedImageGenerationList'
          description: ''
    post:
      operationId: apiPaletteImageGenerationsCreate
      description: |-
        Mixin to filter querysets and set user on save for objects owned by a user.
        Assumes the model has a 'user' ForeignKey field.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageGenerationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImageGenerationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImageGenerationRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageGeneration'
          description: ''
  /api/palette/image-generations/{id}/:
    get:
      operationId: apiPaletteImageGenerationsRetrieve
      description: |-
        Mixin to filter querysets and set user on save for objects owned by a user.
        Assumes the model has a 'user' ForeignKey field.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this image generation.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageGeneration'
          description: ''
    put:
      operationId: apiPaletteImageGenerationsUpdate
      description: |-
        Mixin to filter querysets and set user on save for objects owned by a user.
        Assumes the model has a 'user' ForeignKey field.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this image generation.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageGenerationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImageGenerationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImageGenerationRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageGeneration'
          description: ''
    patch:
      operationId: apiPaletteImageGenerationsPartialUpdate
      description: |-
        Mixin to filter querysets and set user on save for objects owned by a user.
        Assumes the model has a 'user' ForeignKey field.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this image generation.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedImageGenerationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedImageGenerationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedImageGenerationRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageGeneration'
          description: ''
    delete:
      operationId: apiPaletteImageGenerationsDestroy
      description: |-
        Mixin to filter querysets and set user on save for objects owned by a user.
        Assumes the model has a 'user' ForeignKey field.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this image generation.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/palette/projects/:
    get:
      operationId: apiPaletteProjectsList
      description: |-
        Mixin to filter querysets and set user on save for objects owned by a user.
        Assumes the model has a 'user' ForeignKey field.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectList'
          description: ''
    post:
      operationId: apiPaletteProjectsCreate
      description: |-
        Mixin to filter querysets and set user on save for objects owned by a user.
        Assumes the model has a 'user' ForeignKey field.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/palette/projects/{id}/:
    get:
      operationId: apiPaletteProjectsRetrieve
      description: |-
        Mixin to filter querysets and set user on save for objects owned by a user.
        Assumes the model has a 'user' ForeignKey field.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this project.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    put:
      operationId: apiPaletteProjectsUpdate
      description: |-
        Mixin to filter querysets and set user on save for objects owned by a user.
        Assumes the model has a 'user' ForeignKey field.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this project.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    patch:
      operationId: apiPaletteProjectsPartialUpdate
      description: |-
        Mixin to filter querysets and set user on save for objects owned by a user.
        Assumes the model has a 'user' ForeignKey field.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this project.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    delete:
      operationId: apiPaletteProjectsDestroy
      description: |-
        Mixin to filter querysets and set user on save for objects owned by a user.
        Assumes the model has a 'user' ForeignKey field.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this project.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/palette/source-assets/:
    get:
      operationId: apiPaletteSourceAssetsList
      description: |-
        Mixin to filter querysets and set user on save for objects owned by a user.
        Assumes the model has a 'user' ForeignKey field.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSourceAssetList'
          description: ''
    post:
      operationId: apiPaletteSourceAssetsCreate
      description: |-
        Mixin to filter querysets and set user on save for objects owned by a user.
        Assumes the model has a 'user' ForeignKey field.
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SourceAssetRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceAsset'
          description: ''
  /api/palette/source-assets/{id}/:
    get:
      operationId: apiPaletteSourceAssetsRetrieve
      description: |-
        Mixin to filter querysets and set user on save for objects owned by a user.
        Assumes the model has a 'user' ForeignKey field.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this source asset.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceAsset'
          description: ''
    put:
      operationId: apiPaletteSourceAssetsUpdate
      description: |-
        Mixin to filter querysets and set user on save for objects owned by a user.
        Assumes the model has a 'user' ForeignKey field.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this source asset.
        required: true
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SourceAssetRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceAsset'
          description: ''
    patch:
      operationId: apiPaletteSourceAssetsPartialUpdate
      description: |-
        Mixin to filter querysets and set user on save for objects owned by a user.
        Assumes the model has a 'user' ForeignKey field.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this source asset.
        required: true
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSourceAssetRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceAsset'
          description: ''
    delete:
      operationId: apiPaletteSourceAssetsDestroy
      description: |-
        Mixin to filter querysets and set user on save for objects owned by a user.
        Assumes the model has a 'user' ForeignKey field.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this source asset.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/palette/tabs/:
    get:
      operationId: apiPaletteTabsList
      description: Tabs are owned via the Project, so filtering needs to be based
        on project.user
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTabList'
          description: ''
    post:
      operationId: apiPaletteTabsCreate
      description: Tabs are owned via the Project, so filtering needs to be based
        on project.user
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TabRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TabRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TabRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tab'
          description: ''
  /api/palette/tabs/{id}/:
    get:
      operationId: apiPaletteTabsRetrieve
      description: Tabs are owned via the Project, so filtering needs to be based
        on project.user
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tab.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tab'
          description: ''
    put:
      operationId: apiPaletteTabsUpdate
      description: Tabs are owned via the Project, so filtering needs to be based
        on project.user
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tab.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TabRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TabRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TabRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tab'
          description: ''
    patch:
      operationId: apiPaletteTabsPartialUpdate
      description: Tabs are owned via the Project, so filtering needs to be based
        on project.user
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tab.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTabRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTabRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTabRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tab'
          description: ''
    delete:
      operationId: apiPaletteTabsDestroy
      description: Tabs are owned via the Project, so filtering needs to be based
        on project.user
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tab.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/palette/tags/:
    get:
      operationId: apiPaletteTagsList
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagList'
          description: ''
    post:
      operationId: apiPaletteTagsCreate
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
  /api/palette/tags/{id}/:
    get:
      operationId: apiPaletteTagsRetrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    put:
      operationId: apiPaletteTagsUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    patch:
      operationId: apiPaletteTagsPartialUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    delete:
      operationId: apiPaletteTagsDestroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tag.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/review-booster/analytics-events/:
    get:
      operationId: apiReviewBoosterAnalyticsEventsList
      description: ViewSet for detailed analytics events
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewBoosterAnalyticsList'
          description: ''
  /api/review-booster/analytics-events/{id}/:
    get:
      operationId: apiReviewBoosterAnalyticsEventsRetrieve
      description: ViewSet for detailed analytics events
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewBoosterAnalytics'
          description: ''
  /api/review-booster/campaigns/:
    get:
      operationId: apiReviewBoosterCampaignsList
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewCampaignList'
          description: ''
    post:
      operationId: apiReviewBoosterCampaignsCreate
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewCampaignRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewCampaignRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewCampaignRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewCampaign'
          description: ''
  /api/review-booster/campaigns/{campaignId}/analytics/:
    get:
      operationId: apiReviewBoosterCampaignsAnalyticsRetrieve
      description: Get analytics data for a specific campaign
      parameters:
      - in: path
        name: campaignId
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/review-booster/campaigns/{id}/:
    get:
      operationId: apiReviewBoosterCampaignsRetrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewCampaign'
          description: ''
    put:
      operationId: apiReviewBoosterCampaignsUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewCampaignRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewCampaignRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewCampaignRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewCampaign'
          description: ''
    patch:
      operationId: apiReviewBoosterCampaignsPartialUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReviewCampaignRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReviewCampaignRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReviewCampaignRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewCampaign'
          description: ''
    delete:
      operationId: apiReviewBoosterCampaignsDestroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/review-booster/campaigns/{id}/activate/:
    post:
      operationId: apiReviewBoosterCampaignsActivateCreate
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewCampaignRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewCampaignRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewCampaignRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewCampaign'
          description: ''
  /api/review-booster/campaigns/{id}/pause/:
    post:
      operationId: apiReviewBoosterCampaignsPauseCreate
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewCampaignRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewCampaignRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewCampaignRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewCampaign'
          description: ''
  /api/review-booster/campaigns/{id}/stats/:
    get:
      operationId: apiReviewBoosterCampaignsStatsRetrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewCampaign'
          description: ''
  /api/review-booster/collect/{campaignId}/:
    post:
      operationId: apiReviewBoosterCollectCreate
      description: Collect customer opt-in information
      parameters:
      - in: path
        name: campaignId
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerOptinCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerOptinCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerOptinCreateRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/review-booster/contacts/:
    get:
      operationId: apiReviewBoosterContactsList
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomerOptinList'
          description: ''
    post:
      operationId: apiReviewBoosterContactsCreate
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerOptinRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerOptinRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerOptinRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerOptin'
          description: ''
  /api/review-booster/contacts/{id}/:
    get:
      operationId: apiReviewBoosterContactsRetrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerOptin'
          description: ''
    put:
      operationId: apiReviewBoosterContactsUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerOptinRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerOptinRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerOptinRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerOptin'
          description: ''
    patch:
      operationId: apiReviewBoosterContactsPartialUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomerOptinRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomerOptinRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomerOptinRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerOptin'
          description: ''
    delete:
      operationId: apiReviewBoosterContactsDestroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/review-booster/contacts/{id}/send_reminder/:
    post:
      operationId: apiReviewBoosterContactsSendReminderCreate
      description: Send email/SMS reminder to a specific contact
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerOptinRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerOptinRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerOptinRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerOptin'
          description: ''
  /api/review-booster/contacts/bulk_send_reminders/:
    post:
      operationId: apiReviewBoosterContactsBulkSendRemindersCreate
      description: Send email/SMS reminders to multiple contacts
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerOptinRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerOptinRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerOptinRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerOptin'
          description: ''
  /api/review-booster/daily-analytics/:
    get:
      operationId: apiReviewBoosterDailyAnalyticsList
      description: ViewSet for daily aggregated analytics
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDailyAnalyticsSummaryList'
          description: ''
  /api/review-booster/daily-analytics/{id}/:
    get:
      operationId: apiReviewBoosterDailyAnalyticsRetrieve
      description: ViewSet for daily aggregated analytics
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyAnalyticsSummary'
          description: ''
  /api/review-booster/email-queue/:
    get:
      operationId: apiReviewBoosterEmailQueueList
      description: ViewSet for monitoring email queue status
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewEmailQueueList'
          description: ''
  /api/review-booster/email-queue/{id}/:
    get:
      operationId: apiReviewBoosterEmailQueueRetrieve
      description: ViewSet for monitoring email queue status
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewEmailQueue'
          description: ''
  /api/review-booster/email-queue/{id}/retry/:
    post:
      operationId: apiReviewBoosterEmailQueueRetryCreate
      description: Retry a failed email
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/review-booster/r/{uniqueToken}/:
    post:
      operationId: apiReviewBoosterRCreate
      parameters:
      - in: path
        name: uniqueToken
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewSubmissionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewSubmissionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewSubmissionRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/review-booster/requests/:
    get:
      operationId: apiReviewBoosterRequestsList
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewRequestList'
          description: ''
  /api/review-booster/requests/{id}/:
    get:
      operationId: apiReviewBoosterRequestsRetrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewRequest'
          description: ''
  /api/scans/:
    get:
      operationId: apiScansList
      description: List all scans for the current user
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedScanListList'
          description: ''
    post:
      operationId: apiScansCreate
      description: |-
        Create a new scan with keywords.

        Input Parameters:
        - url: URL for the business to scan (required if business_uuid not provided)
        - business_uuid: UUID of an existing business (required if url not provided)
        - scanType: Type of scan, either 'one-time' or 'repeating'
        - frequency: Required for repeating scans, schedule frequency
        - keywords: List of keywords to scan for (max 10)
        - pinCount: Number of pins to generate (default: 35)
        - radius: Radius in degrees to distribute pins (must be > 0)
        - test_mode: Boolean to enable test mode without deducting credits
        - tags: Optional list of tags to assign to the scan
        - place_id: Optional Google Place ID to use for the business
        - business_details: Optional JSON object with business details:
          {
            "name": "Business Name",
            "place_id": "ChIJ...",
            "cid": "12345",
            "address": "123 Main St, City, State",
            "latitude": 37.7749,
            "longitude": -122.4194,
            "variations": ["Alt Name 1", "Alt Name 2"],
            "business_id": "id123"
          }

        Returns the created scan data with status 201.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScanCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScanCreateRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanCreate'
          description: ''
  /api/scans/{uuid}/:
    get:
      operationId: apiScansRetrieve
      description: Retrieve a specific scan
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanDetail'
          description: ''
    put:
      operationId: apiScansUpdate
      description: Update a scan
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScanDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScanDetailRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanDetail'
          description: ''
    patch:
      operationId: apiScansPartialUpdate
      description: Partially update a scan
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedScanDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedScanDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedScanDetailRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanDetail'
          description: ''
    delete:
      operationId: apiScansDestroy
      description: Delete a scan
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/scans/{uuid}/business/:
    get:
      operationId: apiScansBusinessRetrieve
      description: Get the business details for a scan
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanDetail'
          description: ''
  /api/scans/{uuid}/enable_public_share/:
    post:
      operationId: apiScansEnablePublicShareCreate
      description: |-
        Enable or disable public sharing of this scan.
        POST body can contain {"enable": true/false}.
        The share token is auto-generated when the scan is created.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScanDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScanDetailRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanDetail'
          description: ''
  /api/scans/{uuid}/execution_history/:
    get:
      operationId: apiScansExecutionHistoryRetrieve
      description: |-
        Get historical executions for a scan from ScanExecution records.
        Only available for recurring scans.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanDetail'
          description: ''
  /api/scans/{uuid}/export/:
    get:
      operationId: apiScansExportRetrieve
      description: |-
        Export scan results as a CSV file.

        This endpoint allows users to download their scan results in CSV format.
        It includes business information, keyword details, and ranking results for each pin.

        Returns:
            HTTP response with CSV content (attachment)
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanDetail'
          description: ''
  /api/scans/{uuid}/history/:
    get:
      operationId: apiScansHistoryRetrieve
      description: |-
        Get historical executions of a scan from ScanLog entries.
        Returns data in the same format as standard scan list endpoint.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanDetail'
          description: ''
  /api/scans/{uuid}/history/{executionDate}/:
    get:
      operationId: apiScansHistoryRetrieve2
      description: |-
        Get detailed view of a specific historical execution.
        Returns data in the same format as standard scan detail endpoint.
      parameters:
      - in: path
        name: executionDate
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanDetail'
          description: ''
  /api/scans/{uuid}/logs/:
    get:
      operationId: apiScansLogsRetrieve2
      description: |-
        Return scan logs in a simple text format for easy grepping.
        This endpoint returns plain text instead of JSON for easier command-line processing.

        Query parameters:
        - level: Filter logs by level (DEBUG, INFO, WARNING, ERROR)
        - include_metadata: Set to 'true' to include metadata in the output
        - start_date: Filter logs after this date (format: YYYY-MM-DD)
        - end_date: Filter logs before this date (format: YYYY-MM-DD)
        - search: Filter logs containing this text in the message
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanDetail'
          description: ''
  /api/scans/{uuid}/pause/:
    post:
      operationId: apiScansPauseCreate
      description: Pause a repeating scan
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScanDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScanDetailRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanDetail'
          description: ''
  /api/scans/{uuid}/pins/:
    get:
      operationId: apiScansPinsRetrieve
      description: |-
        Return all pin locations for this scan in a lightweight JSON payload.

        The response structure is optimised for the frontend timeline/map feature:
        {
          "scan_uuid": "<uuid>",
          "pin_count": <int>,
          "pins": [
            {
              "id": <int>,
              "latitude": <float>,
              "longitude": <float>,
              "is_center": <bool>,
              "maps_link": <str|null>
            },
            ...
          ]
        }
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanDetail'
          description: ''
  /api/scans/{uuid}/resume/:
    post:
      operationId: apiScansResumeCreate
      description: Resume a paused scan
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScanDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScanDetailRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanDetail'
          description: ''
  /api/scans/{uuid}/retry/:
    post:
      operationId: apiScansRetryCreate
      description: Retry a failed scan
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScanDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScanDetailRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanDetail'
          description: ''
  /api/scans/{uuid}/search_results/:
    get:
      operationId: apiScansSearchResultsRetrieve
      description: |-
        Get all search results (serpapi responses) for this scan.

        Query parameters:
        - keyword: Filter by specific keyword
        - found: Filter by found status (true/false)
        - pin: Filter by specific pin ID
        - format: 'raw' for individual results, 'grouped' for keyword grouping (default: raw)
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanDetail'
          description: ''
  /api/scans/{uuid}/timeline/:
    get:
      operationId: apiScansTimelineRetrieve
      description: |-
        Get the timeline of rankings for a specific scan.

        This endpoint retrieves historical ranking data for the business and keywords
        associated with the current scan, showing how rankings have changed over time.

        Query parameters:
        - date: ISO format date (YYYY-MM-DD) to get detailed results for a specific scan date
        When date is provided, returns all search results/pins for that specific date instead of aggregated timeline data.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanDetail'
          description: ''
  /api/scans/{uuid}/toggle_archive/:
    post:
      operationId: apiScansToggleArchiveCreate
      description: |-
        Toggle the archived status of a scan.
        If the scan is archived, it will be unarchived, and vice versa.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScanDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScanDetailRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanDetail'
          description: ''
  /api/scans/check_auth/:
    get:
      operationId: apiScansCheckAuthRetrieve
      description: |-
        Simple endpoint to confirm that a user is authenticated.

        Since the viewset uses IsAuthenticated permission, this endpoint
        will only be accessible if the user is logged in. Returns basic
        user information upon successful authentication.
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanDetail'
          description: ''
  /api/scans/code_explorer/:
    get:
      operationId: apiScansCodeExplorerRetrieve
      description: |-
        Display all code files in the ranktracker app in a single HTML page or JSON.
        Access restricted by API key.
        Format options:
        - HTML (default): /api/scans/code_explorer/?api_key=xxx
        - JSON: /api/scans/code_explorer.json/?api_key=xxx or /api/scans/code_explorer/?api_key=xxx&format=json
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanDetail'
          description: ''
  /api/scans/executions/{executionId}/:
    get:
      operationId: apiScansExecutionsRetrieve
      description: Get detailed results from specific execution
      parameters:
      - in: path
        name: executionId
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanDetail'
          description: ''
  /api/scans/export-all/:
    get:
      operationId: apiScansExportAllRetrieve
      description: |-
        Export all scans for the current user as a CSV file.

        This endpoint allows users to download all their scan results in CSV format.
        It includes business information, keyword details, and aggregated ranking results.

        Query parameters:
            status (str, optional): Filter scans by status
            keyword (str, optional): Filter scans by keyword
            days (int, optional): Only include scans from the last X days

        Returns:
            HTTP response with CSV content (attachment)
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanDetail'
          description: ''
  /api/scans/list-scans/:
    get:
      operationId: apiScansListScansRetrieve
      description: |-
        List all available scan UUIDs using an API key without requiring authentication.

        Query parameters:
        - api_key: Required API key for access
        - status: Filter by scan status (optional)
        - days: Only show scans from the last X days (optional)
        - has_logs: Set to 'true' to only show scans that have logs (optional)
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanDetail'
          description: ''
  /api/scans/logs/{scanUuid}/:
    get:
      operationId: apiScansLogsRetrieve
      description: |-
        Return logs for any scan by UUID using an API key without requiring authentication.

        Query parameters:
        - api_key: Required API key for access
        - level: Filter logs by level (DEBUG, INFO, WARNING, ERROR)
        - include_metadata: Set to 'true' to include metadata in the output
        - start_date: Filter logs after this date (format: YYYY-MM-DD)
        - end_date: Filter logs before this date (format: YYYY-MM-DD)
        - search: Filter logs containing this text in the message
      parameters:
      - in: path
        name: scanUuid
        schema:
          type: string
          pattern: ^[0-9a-f-]{36}$
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanDetail'
          description: ''
  /api/scans/preview_pins/:
    post:
      operationId: apiScansPreviewPinsCreate
      description: |-
        Preview pin locations without creating them in the database.
        Requires latitude, longitude, and pin_count in the request data.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScanDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScanDetailRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanDetail'
          description: ''
  /api/scans/public/{token}/:
    get:
      operationId: apiScansPublicRetrieve
      description: |-
        Return a scan's detail data by its public_share_token,
        if 'public_share_enabled' is True.
        No login required.

        Optional query parameters:
        - date: Filter results to specific execution date (format: YYYY-MM-DD)
      parameters:
      - in: path
        name: token
        schema:
          type: string
          pattern: ^[0-9a-f-]{36}$
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanDetail'
          description: ''
  /api/scans/public/{token}/scan-history/:
    get:
      operationId: apiScansPublicScanHistoryRetrieve
      description: |-
        Get timeline/history data for ONLY the specific scan UUID.
        Unlike the timeline endpoint, this does NOT include data from other scans
        by the same business/user.

        This endpoint EXCLUSIVELY uses ScanLog data to ensure consistency and
        reliability. It does NOT use SearchResult data which can be overwritten
        in recurring scans.

        Returns execution dates from ScanLog with parsed position data for each
        keyword, extracted from log messages and metadata.
      parameters:
      - in: path
        name: token
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanDetail'
          description: ''
  /api/scans/public/{token}/timeline/:
    get:
      operationId: apiScansPublicTimelineRetrieve
      description: |-
        Return a scan's timeline data by its public_share_token,
        if 'public_share_enabled' is True.
        No login required.
      parameters:
      - in: path
        name: token
        schema:
          type: string
          pattern: ^[0-9a-f-]+$
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanDetail'
          description: ''
  /api/scans/smart_groups/:
    get:
      operationId: apiScansSmartGroupsRetrieve
      description: |-
        Get smart groups of scans based on business name similarity.
        Groups scans where business names are at least 40% similar.

        Returns:
        {
            "groups": [
                {
                    "group_id": "uuid",
                    "primary_business_name": "Main Business Name",
                    "scan_count": 5,
                    "latest_scan_date": "2024-01-01T12:00:00Z",
                    "business_names": ["Business Name 1", "Business Name 2"],
                    "keywords": ["keyword1", "keyword2"],
                    "avg_rank": 3.5
                }
            ]
        }
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanDetail'
          description: ''
  /api/schema/:
    get:
      operationId: apiSchemaRetrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/search-results/:
    get:
      operationId: apiSearchResultsList
      description: ViewSet for viewing Search Results.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSearchResultList'
          description: ''
  /api/search-results/{id}/:
    get:
      operationId: apiSearchResultsRetrieve
      description: ViewSet for viewing Search Results.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
          description: ''
  /api/subscriptions/create-coupon/:
    post:
      operationId: apiSubscriptionsCreateCouponCreate
      description: |-
        Create a Stripe coupon that expires in 30 minutes.

        Request parameters:
        - amount_off: Amount in cents to discount (mutually exclusive with percent_off)
        - percent_off: Percentage to discount (mutually exclusive with amount_off)
        - currency: Currency code (required if amount_off is used)
        - duration: 'once', 'repeating', or 'forever' (default: 'once')
        - name: Optional display name for the coupon

        Returns:
        - id: The coupon ID to be used with Stripe
        - expires_at: When the coupon will expire (in 30 minutes)
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/subscriptions/metrics/:
    get:
      operationId: apiSubscriptionsMetricsRetrieve
      description: |-
        Get subscription metrics including:
        - Total active subscriptions
        - Monthly Recurring Revenue (MRR)
        - Daily breakdown of revenue and subscriptions
        Supports pagination with 'page' and 'page_size' query parameters
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/tags/:
    get:
      operationId: apiTagsList
      description: ViewSet for managing tags
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagList'
          description: ''
    post:
      operationId: apiTagsCreate
      description: ViewSet for managing tags
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
  /api/tags/{name}/:
    get:
      operationId: apiTagsRetrieve
      description: ViewSet for managing tags
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    put:
      operationId: apiTagsUpdate
      description: ViewSet for managing tags
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    patch:
      operationId: apiTagsPartialUpdate
      description: ViewSet for managing tags
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    delete:
      operationId: apiTagsDestroy
      description: ViewSet for managing tags
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/credits/:
    get:
      operationId: apiUsersCreditsRetrieve
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBalance'
          description: ''
  /api/v1/subscriptions/current/:
    get:
      operationId: currentSubscription
      description: Return the authenticated user's current subscription plan for RankTracker,
        Citations, and LocalLeads products as well as checkout URLs for every other
        active price in the same Stripe products.
      tags:
      - subscriptions
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentSubscriptionResponse'
          description: ''
  /api/video/avatars/:
    get:
      operationId: apiVideoAvatarsRetrieve
      description: Return paginated list of avatar videos without using a model
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/video/code-explorer/:
    get:
      operationId: apiVideoCodeExplorerRetrieve
      description: |-
        Display all code files in the video app in a single HTML page or JSON.
        Access restricted by API key.
        Format options:
        - HTML (default): /api/scans/code_explorer/?api_key=xxx
        - JSON: /api/scans/code_explorer.json/?api_key=xxx or /api/scans/code_explorer/?api_key=xxx&format=json
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/video/demo-vids/:
    get:
      operationId: apiVideoDemoVidsList
      description: |-
        Lets authenticated users upload a video to Cloudflare R2 via `upload_video_to_r2`,
        then saves a DemoVid record with the final URL.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDemoVidList'
          description: ''
    post:
      operationId: apiVideoDemoVidsCreate
      description: |-
        Lets authenticated users upload a video to Cloudflare R2 via `upload_video_to_r2`,
        then saves a DemoVid record with the final URL.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemoVidRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DemoVidRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DemoVidRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemoVid'
          description: ''
  /api/video/demo-vids/{id}/:
    get:
      operationId: apiVideoDemoVidsRetrieve
      description: |-
        Lets authenticated users upload a video to Cloudflare R2 via `upload_video_to_r2`,
        then saves a DemoVid record with the final URL.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemoVid'
          description: ''
    put:
      operationId: apiVideoDemoVidsUpdate
      description: |-
        Lets authenticated users upload a video to Cloudflare R2 via `upload_video_to_r2`,
        then saves a DemoVid record with the final URL.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemoVidRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DemoVidRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DemoVidRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemoVid'
          description: ''
    patch:
      operationId: apiVideoDemoVidsPartialUpdate
      description: |-
        Lets authenticated users upload a video to Cloudflare R2 via `upload_video_to_r2`,
        then saves a DemoVid record with the final URL.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDemoVidRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDemoVidRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDemoVidRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemoVid'
          description: ''
    delete:
      operationId: apiVideoDemoVidsDestroy
      description: |-
        Lets authenticated users upload a video to Cloudflare R2 via `upload_video_to_r2`,
        then saves a DemoVid record with the final URL.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/video/remotion-webhook/{videoUuid}/:
    post:
      operationId: apiVideoRemotionWebhookCreate
      description: |-
        Webhook endpoint for Remotion render completions
        This handler is deprecated since Generated_Video model has been removed.
      parameters:
      - in: path
        name: videoUuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/video/test-ugc/:
    post:
      operationId: apiVideoTestUgcCreate
      description: |-
        Public endpoint (no auth) to test UGC creation.
        JSON body example:
        {
          "first_url": "https://pub-abee3963fe854bbfa4f617b2b7c816fc.r2.dev/1.mp4",
          "second_url": "https://pub-abee3963fe854bbfa4f617b2b7c816fc.r2.dev/2.mp4",
          "overlay_text": "some text"
        }
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/video/upload-to-r2/:
    post:
      operationId: apiVideoUploadToR2Create
      description: |-
        API endpoint to upload a file directly to R2.

        Expects a multipart/form-data request with:
        - file: The file to upload
        - user_id: (optional) User ID to organize files (defaults to UUID if not provided)
        - folder: (optional) Folder name to organize files (defaults to 'uploads')

        Returns the public URL of the uploaded file.
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/video/videos/:
    get:
      operationId: apiVideoVideosList
      description: ViewSet for video creation and management
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVideoList'
          description: ''
    post:
      operationId: apiVideoVideosCreate
      description: Override create method to return immediately for frontend development
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VideoCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VideoCreateRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoCreate'
          description: ''
  /api/video/videos/{id}/:
    get:
      operationId: apiVideoVideosRetrieve
      description: ViewSet for video creation and management
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
    put:
      operationId: apiVideoVideosUpdate
      description: ViewSet for video creation and management
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VideoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VideoRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
    patch:
      operationId: apiVideoVideosPartialUpdate
      description: ViewSet for video creation and management
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVideoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVideoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVideoRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
    delete:
      operationId: apiVideoVideosDestroy
      description: ViewSet for video creation and management
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/video/videos/{id}/cancel/:
    post:
      operationId: apiVideoVideosCancelCreate
      description: Cancel a pending video
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VideoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VideoRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
  /api/video/videos/{id}/download/:
    get:
      operationId: apiVideoVideosDownloadRetrieve
      description: Increment download count and return download URL
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
  /api/video/videos/avatars/:
    get:
      operationId: apiVideoVideosAvatarsRetrieve
      description: Return paginated list of avatar videos without using a model
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
  /api/video/webhook/:
    post:
      operationId: apiVideoWebhookCreate
      description: Webhook endpoint for external video service callbacks
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/webhooks/stripe/:
    post:
      operationId: apiWebhooksStripeCreate
      description: |-
        Consolidated webhook handler for Stripe events.
        Routes to the appropriate handler based on the product being subscribed to.
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/wordpress/:
    get:
      operationId: apiWordpressList
      description: View for listing and creating WordPress connections.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWordPressConnectionList'
          description: ''
    post:
      operationId: apiWordpressCreate
      description: View for listing and creating WordPress connections.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WordPressConnectionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WordPressConnectionRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WordPressConnection'
          description: ''
  /api/wordpress/{id}/:
    get:
      operationId: apiWordpressRetrieve
      description: View for retrieving, updating, and deleting a WordPress connection.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WordPressConnection'
          description: ''
    patch:
      operationId: apiWordpressPartialUpdate
      description: View for retrieving, updating, and deleting a WordPress connection.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWordPressConnectionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWordPressConnectionRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WordPressConnection'
          description: ''
    delete:
      operationId: apiWordpressDestroy
      description: View for retrieving, updating, and deleting a WordPress connection.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /articles/api/credit/balance/:
    get:
      operationId: articlesApiCreditBalanceRetrieve
      tags:
      - articles
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /articles/api/credit/deduct/:
    post:
      operationId: articlesApiCreditDeductCreate
      tags:
      - articles
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /articles/credit/redirect/:
    get:
      operationId: articlesCreditRedirectRetrieve
      tags:
      - articles
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /business/api/businesses/:
    get:
      operationId: businessApiBusinessesList
      description: Mixin that limits queryset to the authenticated user and sets user
        on create.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - business
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUnifiedBusinessList'
          description: ''
    post:
      operationId: businessApiBusinessesCreate
      description: Mixin that limits queryset to the authenticated user and sets user
        on create.
      tags:
      - business
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedBusinessRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UnifiedBusinessRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UnifiedBusinessRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedBusiness'
          description: ''
  /business/api/businesses/{uuid}/:
    get:
      operationId: businessApiBusinessesRetrieve
      description: Mixin that limits queryset to the authenticated user and sets user
        on create.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - business
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedBusiness'
          description: ''
    put:
      operationId: businessApiBusinessesUpdate
      description: Mixin that limits queryset to the authenticated user and sets user
        on create.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - business
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedBusinessRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UnifiedBusinessRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UnifiedBusinessRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedBusiness'
          description: ''
    patch:
      operationId: businessApiBusinessesPartialUpdate
      description: Mixin that limits queryset to the authenticated user and sets user
        on create.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - business
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUnifiedBusinessRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUnifiedBusinessRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUnifiedBusinessRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedBusiness'
          description: ''
    delete:
      operationId: businessApiBusinessesDestroy
      description: Mixin that limits queryset to the authenticated user and sets user
        on create.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - business
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /business/api/businesses/find_business_data_by_cid/:
    get:
      operationId: businessApiBusinessesFindBusinessDataByCidRetrieve
      description: Find all business data (both scans and citations) using a Google
        Maps CID URL
      summary: Find all business data by Google Maps CID
      parameters:
      - in: query
        name: maps_url
        schema:
          type: string
          format: uri
        description: Google Maps URL containing CID (e.g., https://maps.google.com/maps?cid=12345678901234567890)
        required: true
      tags:
      - Business CID APIs
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindBusinessDataByCIDResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ''
  /business/api/businesses/find_citations_by_cid/:
    get:
      operationId: businessApiBusinessesFindCitationsByCidRetrieve
      description: Find all citations for a business using a Google Maps CID URL
      summary: Find citations by Google Maps CID
      parameters:
      - in: query
        name: maps_url
        schema:
          type: string
          format: uri
        description: Google Maps URL containing CID (e.g., https://maps.google.com/maps?cid=12345678901234567890)
        required: true
      tags:
      - Business CID APIs
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindCitationsByCIDResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ''
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ''
  /business/api/businesses/find_scans_by_cid/:
    get:
      operationId: businessApiBusinessesFindScansByCidRetrieve
      description: Find all ranktracker scans for a business using a Google Maps CID
        URL
      summary: Find scans by Google Maps CID
      parameters:
      - in: query
        name: maps_url
        schema:
          type: string
          format: uri
        description: Google Maps URL containing CID (e.g., https://maps.google.com/maps?cid=12345678901234567890)
        required: true
      tags:
      - Business CID APIs
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindScansByCIDResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ''
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ''
  /business/api/businesses/get_by_maps_url/:
    get:
      operationId: businessApiBusinessesGetByMapsUrlRetrieve
      description: Retrieve business information using a Google Maps URL containing
        CID
      summary: Get business by Google Maps URL
      parameters:
      - in: query
        name: maps_url
        schema:
          type: string
          format: uri
        description: Google Maps URL containing CID (e.g., https://maps.google.com/maps?cid=12345678901234567890)
        required: true
      tags:
      - Business CID APIs
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedBusiness'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ''
  /business/api/businesses/stats/:
    get:
      operationId: businessApiBusinessesStatsRetrieve
      description: Get business statistics for the user.
      tags:
      - business
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedBusiness'
          description: ''
  /business/api/locations/:
    get:
      operationId: businessApiLocationsList
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - business
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBusinessLocationList'
          description: ''
    post:
      operationId: businessApiLocationsCreate
      tags:
      - business
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessLocationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessLocationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BusinessLocationRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessLocation'
          description: ''
  /business/api/locations/{uuid}/:
    get:
      operationId: businessApiLocationsRetrieve
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - business
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessLocation'
          description: ''
    put:
      operationId: businessApiLocationsUpdate
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - business
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessLocationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessLocationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BusinessLocationRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessLocation'
          description: ''
    patch:
      operationId: businessApiLocationsPartialUpdate
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - business
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBusinessLocationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBusinessLocationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBusinessLocationRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessLocation'
          description: ''
    delete:
      operationId: businessApiLocationsDestroy
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - business
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /citations/activate-free-localboost/:
    post:
      operationId: citationsActivateFreeLocalboostCreate
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /citations/activity-logs/:
    get:
      operationId: citationsActivityLogsList
      parameters:
      - in: query
        name: business__uuid
        schema:
          type: string
          format: uuid
      - in: query
        name: citation__id
        schema:
          type: integer
      - in: query
        name: created_at__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: created_at__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: event_type
        schema:
          type: string
      - in: query
        name: event_type__contains
        schema:
          type: string
      - in: query
        name: location__id
        schema:
          type: integer
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActivityLogList'
          description: ''
  /citations/activity-logs/{id}/:
    get:
      operationId: citationsActivityLogsRetrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityLog'
          description: ''
  /citations/admin/retry-citations/:
    post:
      operationId: citationsAdminRetryCitationsCreate
      description: |-
        Admin-only endpoint to manually trigger the retry_failed_citation_tasks job.
        This allows administrators to run the retry job on-demand without waiting for the scheduled run.
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /citations/api/business-data-by-path/:
    get:
      operationId: citationsApiBusinessDataByPathRetrieve
      description: |-
        API endpoint to retrieve business data needed for generating
        a citation page, based on domain and URL path.
        Requires 'domain' and 'path' query parameters.
      tags:
      - citations
      responses:
        '200':
          description: No response body
  /citations/api/create-checkout-session/:
    post:
      operationId: citationsApiCreateCheckoutSessionCreate
      description: |-
        Creates a Stripe Checkout Session for a one-time purchase.
        We do NOT create a DB record yet. Instead, we store needed info in session metadata.

        The product is automatically determined based on the user's current CitationPlan.

        Request data:
        - business_uuid: UUID of the business to associate with this purchase
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /citations/api/sync-github:
    post:
      operationId: citationsApiSyncGithubCreate
      description: |-
        API View to trigger a sync task for a business's citations with GitHub,
        subject to GitHub API rate limiting.
        Supports POST request via Browsable API form with 'uuid' field.
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /citations/bonus-citations/:
    get:
      operationId: citationsBonusCitationsList
      parameters:
      - in: query
        name: business__uuid
        schema:
          type: string
          format: uuid
      - in: query
        name: created_at__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: created_at__lte
        schema:
          type: string
          format: date-time
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBonusCitationList'
          description: ''
    post:
      operationId: citationsBonusCitationsCreate
      description: Custom create to handle business_id parameter
      tags:
      - citations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BonusCitationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BonusCitationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BonusCitationRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BonusCitation'
          description: ''
  /citations/bonus-citations/{id}/:
    get:
      operationId: citationsBonusCitationsRetrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Bonus Citation.
        required: true
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BonusCitation'
          description: ''
    put:
      operationId: citationsBonusCitationsUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Bonus Citation.
        required: true
      tags:
      - citations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BonusCitationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BonusCitationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BonusCitationRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BonusCitation'
          description: ''
    patch:
      operationId: citationsBonusCitationsPartialUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Bonus Citation.
        required: true
      tags:
      - citations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBonusCitationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBonusCitationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBonusCitationRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BonusCitation'
          description: ''
    delete:
      operationId: citationsBonusCitationsDestroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Bonus Citation.
        required: true
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /citations/business/:
    get:
      operationId: citationsBusinessList
      parameters:
      - in: query
        name: created_at__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: created_at__lte
        schema:
          type: string
          format: date-time
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - ACTIVE
          - DELETED
          - PAUSED
        description: |-
          * `ACTIVE` - ACTIVE
          * `PAUSED` - PAUSED
          * `DELETED` - DELETED
      - in: query
        name: tags__name
        schema:
          type: string
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBusinessList'
          description: ''
    post:
      operationId: citationsBusinessCreate
      tags:
      - citations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BusinessRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
          description: ''
  /citations/business/{uuid}/:
    get:
      operationId: citationsBusinessRetrieve
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
          description: ''
    put:
      operationId: citationsBusinessUpdate
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - citations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BusinessRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
          description: ''
    patch:
      operationId: citationsBusinessPartialUpdate
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - citations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBusinessRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBusinessRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBusinessRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
          description: ''
    delete:
      operationId: citationsBusinessDestroy
      description: Mark business as deleted instead of removing from database
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /citations/business/{uuid}/activity_logs/:
    get:
      operationId: citationsBusinessActivityLogsRetrieve
      description: Get activity logs for this business.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
          description: ''
  /citations/business/{uuid}/build_links/:
    post:
      operationId: citationsBusinessBuildLinksCreate
      description: |-
        Trigger link building for this business.
        This will create citations across various domains.

        Optional parameters:
        - test_mode: Boolean - if True, only creates a citation for localrank.pages.dev
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - citations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BusinessRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
          description: ''
  /citations/business/{uuid}/get_citations/:
    get:
      operationId: citationsBusinessGetCitationsRetrieve
      description: List all citations for this business.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
          description: ''
  /citations/businesses/:
    get:
      operationId: citationsBusinessesList
      parameters:
      - in: query
        name: created_at__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: created_at__lte
        schema:
          type: string
          format: date-time
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - ACTIVE
          - DELETED
          - PAUSED
        description: |-
          * `ACTIVE` - ACTIVE
          * `PAUSED` - PAUSED
          * `DELETED` - DELETED
      - in: query
        name: tags__name
        schema:
          type: string
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBusinessList'
          description: ''
    post:
      operationId: citationsBusinessesCreate
      tags:
      - citations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BusinessRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
          description: ''
  /citations/businesses/{uuid}/:
    get:
      operationId: citationsBusinessesRetrieve
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
          description: ''
    put:
      operationId: citationsBusinessesUpdate
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - citations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BusinessRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
          description: ''
    patch:
      operationId: citationsBusinessesPartialUpdate
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - citations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBusinessRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBusinessRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBusinessRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
          description: ''
    delete:
      operationId: citationsBusinessesDestroy
      description: Mark business as deleted instead of removing from database
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /citations/businesses/{uuid}/activity_logs/:
    get:
      operationId: citationsBusinessesActivityLogsRetrieve
      description: Get activity logs for this business.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
          description: ''
  /citations/businesses/{uuid}/build_links/:
    post:
      operationId: citationsBusinessesBuildLinksCreate
      description: |-
        Trigger link building for this business.
        This will create citations across various domains.

        Optional parameters:
        - test_mode: Boolean - if True, only creates a citation for localrank.pages.dev
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - citations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BusinessRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
          description: ''
  /citations/businesses/{uuid}/get_citations/:
    get:
      operationId: citationsBusinessesGetCitationsRetrieve
      description: List all citations for this business.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
          description: ''
  /citations/check-auth/:
    get:
      operationId: citationsCheckAuthRetrieve
      description: Check if authentication is working correctly.
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /citations/create/:
    get:
      operationId: citationsCreateList
      parameters:
      - in: query
        name: created_at__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: created_at__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: domain_name
        schema:
          type: string
      - in: query
        name: domain_name__contains
        schema:
          type: string
      - in: query
        name: location__business__uuid
        schema:
          type: string
          format: uuid
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - DEPLOYED
          - FAILED
          - NEW_DOMAIN_PENDING
          - WAITING
        description: |-
          * `WAITING` - WAITING
          * `DEPLOYED` - DEPLOYED
          * `FAILED` - FAILED
          * `NEW_DOMAIN_PENDING` - NEW_DOMAIN_PENDING
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCitationList'
          description: ''
    post:
      operationId: citationsCreateCreate
      description: Custom create to handle business_id parameter instead of location
      tags:
      - citations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CitationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CitationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CitationRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Citation'
          description: ''
  /citations/create-missing-domains/:
    post:
      operationId: citationsCreateMissingDomainsCreate
      description: |-
        API to create missing domains for businesses with PRO and UNLIMITED plans.
        Only processes businesses with more than 50 existing citations.
        Creates citations with status NEW_DOMAIN_PENDING instead of triggering tasks.

        Expects a JSON payload with:
        {
            "preview_first": true  # Optional, if true will just return preview data without executing
        }
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /citations/create/{id}/:
    get:
      operationId: citationsCreateRetrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this citation.
        required: true
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Citation'
          description: ''
    put:
      operationId: citationsCreateUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this citation.
        required: true
      tags:
      - citations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CitationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CitationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CitationRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Citation'
          description: ''
    patch:
      operationId: citationsCreatePartialUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this citation.
        required: true
      tags:
      - citations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCitationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCitationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCitationRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Citation'
          description: ''
    delete:
      operationId: citationsCreateDestroy
      description: Custom delete to log the activity and trigger deletion tasks
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this citation.
        required: true
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /citations/create/{id}/activity_logs/:
    get:
      operationId: citationsCreateActivityLogsRetrieve
      description: Get activity logs for this citation.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this citation.
        required: true
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Citation'
          description: ''
  /citations/create/{id}/create_subpage/:
    post:
      operationId: citationsCreateCreateSubpageCreate
      description: Create a subpage for this citation.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this citation.
        required: true
      tags:
      - citations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CitationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CitationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CitationRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Citation'
          description: ''
  /citations/delete-all-citations/:
    post:
      operationId: citationsDeleteAllCitationsCreate
      description: |-
        Delete all citations for a business.
        Limited to 3 business deletions per day per user.

        Query parameters:
        - business_uuid: The UUID of the business
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /citations/deployment-status/:
    get:
      operationId: citationsDeploymentStatusRetrieve
      description: Get the deployment status for a citation.
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /citations/directory-urls/:
    get:
      operationId: citationsDirectoryUrlsRetrieve
      description: |-
        Get all directory URLs for a domain with pagination support.
        This API endpoint is used for:
        1. Creating sitemaps
        2. Populating the directory grid on the index page

        Query parameters:
        - domain: The domain name to filter by (e.g. bizlocator.com)
        - page: Page number for pagination
        - page_size: Number of items per page (default 20, max 100)
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /citations/domains/:
    get:
      operationId: citationsDomainsRetrieve
      description: List all domains from the JSON config file.
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: citationsDomainsCreate
      description: Not implemented - use management command instead.
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          description: No response body
  /citations/domains/{id}/:
    get:
      operationId: citationsDomainsRetrieve2
      description: Get a domain by name from the JSON config file.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: citationsDomainsUpdate
      description: Not implemented - use management command instead.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: citationsDomainsDestroy
      description: Not implemented - use management command instead.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /citations/free-localboost-status/:
    get:
      operationId: citationsFreeLocalboostStatusRetrieve
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /citations/list/:
    get:
      operationId: citationsListList
      parameters:
      - in: query
        name: created_at__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: created_at__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: domain_name
        schema:
          type: string
      - in: query
        name: domain_name__contains
        schema:
          type: string
      - in: query
        name: location__business__uuid
        schema:
          type: string
          format: uuid
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - DEPLOYED
          - FAILED
          - NEW_DOMAIN_PENDING
          - WAITING
        description: |-
          * `WAITING` - WAITING
          * `DEPLOYED` - DEPLOYED
          * `FAILED` - FAILED
          * `NEW_DOMAIN_PENDING` - NEW_DOMAIN_PENDING
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCitationList'
          description: ''
    post:
      operationId: citationsListCreate
      description: Custom create to handle business_id parameter instead of location
      tags:
      - citations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CitationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CitationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CitationRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Citation'
          description: ''
  /citations/list/{id}/:
    get:
      operationId: citationsListRetrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this citation.
        required: true
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Citation'
          description: ''
    put:
      operationId: citationsListUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this citation.
        required: true
      tags:
      - citations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CitationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CitationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CitationRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Citation'
          description: ''
    patch:
      operationId: citationsListPartialUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this citation.
        required: true
      tags:
      - citations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCitationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCitationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCitationRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Citation'
          description: ''
    delete:
      operationId: citationsListDestroy
      description: Custom delete to log the activity and trigger deletion tasks
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this citation.
        required: true
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /citations/list/{id}/activity_logs/:
    get:
      operationId: citationsListActivityLogsRetrieve
      description: Get activity logs for this citation.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this citation.
        required: true
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Citation'
          description: ''
  /citations/list/{id}/create_subpage/:
    post:
      operationId: citationsListCreateSubpageCreate
      description: Create a subpage for this citation.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this citation.
        required: true
      tags:
      - citations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CitationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CitationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CitationRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Citation'
          description: ''
  /citations/one-time-purchases/:
    get:
      operationId: citationsOneTimePurchasesRetrieve
      description: List all one-time purchases for the current user.
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /citations/ping/:
    get:
      operationId: citationsPingRetrieve
      description: Simple ping endpoint to check if API is accessible.
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /citations/preview-missing-domains/:
    get:
      operationId: citationsPreviewMissingDomainsRetrieve
      description: |-
        Preview API that shows all businesses for PRO and UNLIMITED users and what domains would be added.
        Returns a structured response with businesses and their missing domains.
        Only includes businesses with more than 50 existing citations.
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /citations/subscription-status/:
    get:
      operationId: citationsSubscriptionStatusRetrieve
      description: Return the user's current subscription status and limits for citations.
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /citations/tags/:
    get:
      operationId: citationsTagsList
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagList'
          description: ''
    post:
      operationId: citationsTagsCreate
      tags:
      - citations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
  /citations/tags/{id}/:
    get:
      operationId: citationsTagsRetrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    put:
      operationId: citationsTagsUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - citations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    patch:
      operationId: citationsTagsPartialUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - citations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    delete:
      operationId: citationsTagsDestroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /citations/total-citations/:
    get:
      operationId: citationsTotalCitationsRetrieve
      description: |-
        Get the total number of citations across all businesses.
        Returns a simple response with just the total count.
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /citations/webhook/:
    post:
      operationId: citationsWebhookCreate
      description: Webhook endpoint for Stripe citation subscription events.
      tags:
      - citations
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /email-agent/accounts/:
    get:
      operationId: emailAgentAccountsList
      description: |-
        Base ModelViewSet with smart serializer discovery and user ownership filtering.
        Use this for ViewSets where objects belong to users.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmailAccountList'
          description: ''
    post:
      operationId: emailAgentAccountsCreate
      description: |-
        Base ModelViewSet with smart serializer discovery and user ownership filtering.
        Use this for ViewSets where objects belong to users.
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailAccountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailAccountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailAccountRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailAccount'
          description: ''
  /email-agent/accounts/{id}/:
    get:
      operationId: emailAgentAccountsRetrieve
      description: |-
        Base ModelViewSet with smart serializer discovery and user ownership filtering.
        Use this for ViewSets where objects belong to users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Email account.
        required: true
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailAccount'
          description: ''
    put:
      operationId: emailAgentAccountsUpdate
      description: |-
        Base ModelViewSet with smart serializer discovery and user ownership filtering.
        Use this for ViewSets where objects belong to users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Email account.
        required: true
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailAccountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailAccountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailAccountRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailAccount'
          description: ''
    patch:
      operationId: emailAgentAccountsPartialUpdate
      description: |-
        Base ModelViewSet with smart serializer discovery and user ownership filtering.
        Use this for ViewSets where objects belong to users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Email account.
        required: true
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEmailAccountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEmailAccountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEmailAccountRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailAccount'
          description: ''
    delete:
      operationId: emailAgentAccountsDestroy
      description: |-
        Base ModelViewSet with smart serializer discovery and user ownership filtering.
        Use this for ViewSets where objects belong to users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Email account.
        required: true
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /email-agent/accounts/connect/:
    post:
      operationId: emailAgentAccountsConnectCreate
      description: Save or update credentials for the chosen provider - validates
        API key by checking unread emails count.
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailAccountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailAccountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailAccountRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailAccount'
          description: ''
  /email-agent/accounts/test-connection/:
    post:
      operationId: emailAgentAccountsTestConnectionCreate
      description: Test connection to external provider without saving credentials
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailAccountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailAccountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailAccountRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailAccount'
          description: ''
  /email-agent/auto-reply-config/:
    get:
      operationId: emailAgentAutoReplyConfigList
      description: |-
        Base ModelViewSet with smart serializer discovery and user ownership filtering.
        Use this for ViewSets where objects belong to users.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAutoReplyConfigList'
          description: ''
    post:
      operationId: emailAgentAutoReplyConfigCreate
      description: |-
        Base ModelViewSet with smart serializer discovery and user ownership filtering.
        Use this for ViewSets where objects belong to users.
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoReplyConfigRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AutoReplyConfigRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AutoReplyConfigRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoReplyConfig'
          description: ''
  /email-agent/auto-reply-config/{id}/:
    get:
      operationId: emailAgentAutoReplyConfigRetrieve
      description: |-
        Base ModelViewSet with smart serializer discovery and user ownership filtering.
        Use this for ViewSets where objects belong to users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this auto reply config.
        required: true
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoReplyConfig'
          description: ''
    put:
      operationId: emailAgentAutoReplyConfigUpdate
      description: |-
        Base ModelViewSet with smart serializer discovery and user ownership filtering.
        Use this for ViewSets where objects belong to users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this auto reply config.
        required: true
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoReplyConfigRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AutoReplyConfigRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AutoReplyConfigRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoReplyConfig'
          description: ''
    patch:
      operationId: emailAgentAutoReplyConfigPartialUpdate
      description: |-
        Base ModelViewSet with smart serializer discovery and user ownership filtering.
        Use this for ViewSets where objects belong to users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this auto reply config.
        required: true
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAutoReplyConfigRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAutoReplyConfigRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAutoReplyConfigRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoReplyConfig'
          description: ''
    delete:
      operationId: emailAgentAutoReplyConfigDestroy
      description: |-
        Base ModelViewSet with smart serializer discovery and user ownership filtering.
        Use this for ViewSets where objects belong to users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this auto reply config.
        required: true
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /email-agent/automated-schedules/:
    get:
      operationId: emailAgentAutomatedSchedulesList
      description: ViewSet for managing automated reply schedules.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAutomatedReplyScheduleList'
          description: ''
    post:
      operationId: emailAgentAutomatedSchedulesCreate
      description: ViewSet for managing automated reply schedules.
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutomatedReplyScheduleCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AutomatedReplyScheduleCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AutomatedReplyScheduleCreateRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomatedReplyScheduleCreate'
          description: ''
  /email-agent/automated-schedules/{id}/:
    get:
      operationId: emailAgentAutomatedSchedulesRetrieve
      description: ViewSet for managing automated reply schedules.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Automated Reply Schedule.
        required: true
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomatedReplySchedule'
          description: ''
    put:
      operationId: emailAgentAutomatedSchedulesUpdate
      description: ViewSet for managing automated reply schedules.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Automated Reply Schedule.
        required: true
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutomatedReplyScheduleUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AutomatedReplyScheduleUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AutomatedReplyScheduleUpdateRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomatedReplyScheduleUpdate'
          description: ''
    patch:
      operationId: emailAgentAutomatedSchedulesPartialUpdate
      description: ViewSet for managing automated reply schedules.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Automated Reply Schedule.
        required: true
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAutomatedReplyScheduleUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAutomatedReplyScheduleUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAutomatedReplyScheduleUpdateRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomatedReplyScheduleUpdate'
          description: ''
    delete:
      operationId: emailAgentAutomatedSchedulesDestroy
      description: ViewSet for managing automated reply schedules.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Automated Reply Schedule.
        required: true
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /email-agent/automated-schedules/{id}/pause/:
    post:
      operationId: emailAgentAutomatedSchedulesPauseCreate
      description: Pause a specific schedule.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Automated Reply Schedule.
        required: true
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutomatedReplyScheduleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AutomatedReplyScheduleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AutomatedReplyScheduleRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomatedReplySchedule'
          description: ''
  /email-agent/automated-schedules/{id}/resume/:
    post:
      operationId: emailAgentAutomatedSchedulesResumeCreate
      description: Resume a specific schedule.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Automated Reply Schedule.
        required: true
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutomatedReplyScheduleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AutomatedReplyScheduleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AutomatedReplyScheduleRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomatedReplySchedule'
          description: ''
  /email-agent/automated-schedules/due-soon/:
    get:
      operationId: emailAgentAutomatedSchedulesDueSoonRetrieve
      description: Get schedules that are due soon.
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomatedReplySchedule'
          description: ''
  /email-agent/automated-schedules/stats/:
    get:
      operationId: emailAgentAutomatedSchedulesStatsRetrieve
      description: Get automated reply schedule statistics.
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomatedReplySchedule'
          description: ''
  /email-agent/campaigns/:
    get:
      operationId: emailAgentCampaignsList
      description: List campaigns, triggering background sync for better performance
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmailCampaignList'
          description: ''
    post:
      operationId: emailAgentCampaignsCreate
      description: |-
        Base ModelViewSet with smart serializer discovery and user ownership filtering.
        Use this for ViewSets where objects belong to users.
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailCampaignRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailCampaignRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailCampaignRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailCampaign'
          description: ''
  /email-agent/campaigns/{id}/:
    get:
      operationId: emailAgentCampaignsRetrieve
      description: |-
        Base ModelViewSet with smart serializer discovery and user ownership filtering.
        Use this for ViewSets where objects belong to users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this email campaign.
        required: true
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailCampaign'
          description: ''
    put:
      operationId: emailAgentCampaignsUpdate
      description: |-
        Base ModelViewSet with smart serializer discovery and user ownership filtering.
        Use this for ViewSets where objects belong to users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this email campaign.
        required: true
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailCampaignRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailCampaignRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailCampaignRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailCampaign'
          description: ''
    patch:
      operationId: emailAgentCampaignsPartialUpdate
      description: |-
        Base ModelViewSet with smart serializer discovery and user ownership filtering.
        Use this for ViewSets where objects belong to users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this email campaign.
        required: true
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEmailCampaignRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEmailCampaignRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEmailCampaignRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailCampaign'
          description: ''
    delete:
      operationId: emailAgentCampaignsDestroy
      description: |-
        Base ModelViewSet with smart serializer discovery and user ownership filtering.
        Use this for ViewSets where objects belong to users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this email campaign.
        required: true
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /email-agent/campaigns/{id}/refresh/:
    post:
      operationId: emailAgentCampaignsRefreshCreate
      description: Refresh campaign data from external provider
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this email campaign.
        required: true
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailCampaignRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailCampaignRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailCampaignRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailCampaign'
          description: ''
  /email-agent/campaigns/assign-objective/:
    post:
      operationId: emailCampaignAssignObjective
      description: Assign a default objective to a campaign by providing the campaign
        ID and objective ID.
      summary: Assign objective to campaign
      tags:
      - email_agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailCampaignObjectiveAssignRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailCampaignObjectiveAssignRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailCampaignObjectiveAssignRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailCampaign'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Bad Request
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Not Found
          description: ''
  /email-agent/campaigns/remove-objective/:
    post:
      operationId: emailCampaignRemoveObjective
      description: Remove the default objective from a campaign by providing the campaign
        ID.
      tags:
      - email_agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailCampaignObjectiveRemoveRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailCampaignObjectiveRemoveRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailCampaignObjectiveRemoveRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailCampaign'
          description: ''
  /email-agent/campaigns/sync/:
    post:
      operationId: emailAgentCampaignsSyncCreate
      description: Manually trigger background sync of campaigns from external providers
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailCampaignRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailCampaignRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailCampaignRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailCampaign'
          description: ''
  /email-agent/instantly/analytics/campaign_analytics/:
    get:
      operationId: emailAgentInstantlyAnalyticsCampaignAnalyticsRetrieve
      description: Get analytics for a specific campaign or multiple campaigns
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /email-agent/instantly/analytics/multiple_campaigns_analytics/:
    get:
      operationId: emailAgentInstantlyAnalyticsMultipleCampaignsAnalyticsRetrieve
      description: Get analytics for multiple campaigns
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /email-agent/instantly/emails/:
    get:
      operationId: emailAgentInstantlyEmailsRetrieve
      description: List emails with optional filtering
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /email-agent/instantly/emails/{id}/:
    get:
      operationId: emailAgentInstantlyEmailsRetrieve2
      description: Get a specific email by ID
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /email-agent/instantly/emails/all_emails/:
    get:
      operationId: emailAgentInstantlyEmailsAllEmailsRetrieve
      description: Get all emails for a campaign (paginated automatically)
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /email-agent/instantly/emails/reply/:
    post:
      operationId: emailAgentInstantlyEmailsReplyCreate
      description: Reply to an email
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /email-agent/instantly/integrated/campaign_emails_with_analytics/:
    get:
      operationId: emailAgentInstantlyIntegratedCampaignEmailsWithAnalyticsRetrieve
      description: Get campaign emails along with campaign analytics
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /email-agent/instantly/integrated/campaign_with_analytics/:
    get:
      operationId: emailAgentInstantlyIntegratedCampaignWithAnalyticsRetrieve
      description: Get campaign details along with its analytics
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /email-agent/messages/:
    get:
      operationId: emailAgentMessagesList
      description: List messages, triggering background email sync for better performance
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMessageList'
          description: ''
    post:
      operationId: emailAgentMessagesCreate
      description: |-
        Base ModelViewSet with smart serializer discovery.
        Use this as your base class instead of viewsets.ModelViewSet.
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MessageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MessageRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
  /email-agent/messages/{id}/:
    get:
      operationId: emailAgentMessagesRetrieve
      description: |-
        Base ModelViewSet with smart serializer discovery.
        Use this as your base class instead of viewsets.ModelViewSet.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this message.
        required: true
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
    put:
      operationId: emailAgentMessagesUpdate
      description: |-
        Base ModelViewSet with smart serializer discovery.
        Use this as your base class instead of viewsets.ModelViewSet.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this message.
        required: true
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MessageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MessageRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
    patch:
      operationId: emailAgentMessagesPartialUpdate
      description: |-
        Base ModelViewSet with smart serializer discovery.
        Use this as your base class instead of viewsets.ModelViewSet.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this message.
        required: true
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMessageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMessageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMessageRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
    delete:
      operationId: emailAgentMessagesDestroy
      description: |-
        Base ModelViewSet with smart serializer discovery.
        Use this as your base class instead of viewsets.ModelViewSet.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this message.
        required: true
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /email-agent/messages/{id}/send/:
    post:
      operationId: emailAgentMessagesSendCreate
      description: Dispatch an email reply.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this message.
        required: true
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MessageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MessageRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
  /email-agent/messages/sync-emails/:
    post:
      operationId: emailAgentMessagesSyncEmailsCreate
      description: Manually trigger background email sync from Instantly.ai
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MessageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MessageRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
  /email-agent/messages/thread-messages/:
    get:
      operationId: emailMessageThreadList
      description: Get all messages for a specific thread by its ID.
      summary: List thread messages
      parameters:
      - in: query
        name: thread_id
        schema:
          type: integer
        description: ID of the conversation/thread to get messages for
        required: true
      tags:
      - email_agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadMessageList'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Bad Request - Missing or invalid thread_id parameter
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Not Found - Thread does not exist
          description: ''
  /email-agent/objectives/:
    get:
      operationId: emailAgentObjectivesList
      description: ViewSet for managing reply objectives.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReplyObjectiveList'
          description: ''
    post:
      operationId: emailAgentObjectivesCreate
      description: ViewSet for managing reply objectives.
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplyObjectiveRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReplyObjectiveRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReplyObjectiveRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplyObjective'
          description: ''
  /email-agent/objectives/{id}/:
    get:
      operationId: emailAgentObjectivesRetrieve
      description: ViewSet for managing reply objectives.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Reply objective.
        required: true
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplyObjective'
          description: ''
    put:
      operationId: emailAgentObjectivesUpdate
      description: ViewSet for managing reply objectives.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Reply objective.
        required: true
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplyObjectiveRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReplyObjectiveRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReplyObjectiveRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplyObjective'
          description: ''
    patch:
      operationId: emailAgentObjectivesPartialUpdate
      description: ViewSet for managing reply objectives.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Reply objective.
        required: true
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReplyObjectiveRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReplyObjectiveRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReplyObjectiveRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplyObjective'
          description: ''
    delete:
      operationId: emailAgentObjectivesDestroy
      description: ViewSet for managing reply objectives.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Reply objective.
        required: true
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /email-agent/objectives/{id}/assign-to-campaign/:
    post:
      operationId: emailAgentObjectivesAssignToCampaignCreate
      description: Assign this objective to a campaign.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Reply objective.
        required: true
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplyObjectiveRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReplyObjectiveRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReplyObjectiveRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplyObjective'
          description: ''
  /email-agent/objectives/{id}/remove-from-campaign/:
    post:
      operationId: emailAgentObjectivesRemoveFromCampaignCreate
      description: Remove this objective from a campaign.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Reply objective.
        required: true
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplyObjectiveRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReplyObjectiveRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReplyObjectiveRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplyObjective'
          description: ''
  /email-agent/replylogs/:
    get:
      operationId: emailAgentReplylogsList
      description: |-
        Base ModelViewSet with smart serializer discovery.
        Use this as your base class instead of viewsets.ModelViewSet.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReplyLogList'
          description: ''
    post:
      operationId: emailAgentReplylogsCreate
      description: |-
        Base ModelViewSet with smart serializer discovery.
        Use this as your base class instead of viewsets.ModelViewSet.
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplyLogRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReplyLogRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReplyLogRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplyLog'
          description: ''
  /email-agent/replylogs/{id}/:
    get:
      operationId: emailAgentReplylogsRetrieve
      description: |-
        Base ModelViewSet with smart serializer discovery.
        Use this as your base class instead of viewsets.ModelViewSet.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reply log.
        required: true
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplyLog'
          description: ''
    put:
      operationId: emailAgentReplylogsUpdate
      description: |-
        Base ModelViewSet with smart serializer discovery.
        Use this as your base class instead of viewsets.ModelViewSet.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reply log.
        required: true
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplyLogRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReplyLogRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReplyLogRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplyLog'
          description: ''
    patch:
      operationId: emailAgentReplylogsPartialUpdate
      description: |-
        Base ModelViewSet with smart serializer discovery.
        Use this as your base class instead of viewsets.ModelViewSet.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reply log.
        required: true
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReplyLogRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReplyLogRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReplyLogRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplyLog'
          description: ''
    delete:
      operationId: emailAgentReplylogsDestroy
      description: |-
        Base ModelViewSet with smart serializer discovery.
        Use this as your base class instead of viewsets.ModelViewSet.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reply log.
        required: true
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /email-agent/replylogs/stats/:
    get:
      operationId: emailAgentReplylogsStatsRetrieve
      description: Compute engagement metrics.
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplyLog'
          description: ''
  /email-agent/tags/:
    get:
      operationId: emailAgentTagsList
      description: ViewSet for managing user tags.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagList'
          description: ''
    post:
      operationId: emailAgentTagsCreate
      description: ViewSet for managing user tags.
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagCreateRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagCreate'
          description: ''
  /email-agent/tags/{id}/:
    get:
      operationId: emailAgentTagsRetrieve
      description: ViewSet for managing user tags.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Tag.
        required: true
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    put:
      operationId: emailAgentTagsUpdate
      description: ViewSet for managing user tags.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Tag.
        required: true
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    patch:
      operationId: emailAgentTagsPartialUpdate
      description: ViewSet for managing user tags.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Tag.
        required: true
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    delete:
      operationId: emailAgentTagsDestroy
      description: Prevent deletion of system tags.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Tag.
        required: true
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /email-agent/tags/create-system-tags/:
    post:
      operationId: emailAgentTagsCreateSystemTagsCreate
      description: Create default system tags for the user.
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
  /email-agent/tags/stats/:
    get:
      operationId: emailAgentTagsStatsRetrieve
      description: Get tag usage statistics.
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
  /email-agent/threads/:
    get:
      operationId: emailAgentThreadsList
      description: List all email conversations/threads. Response includes metadata
        about background sync status.
      summary: List email conversations
      tags:
      - email_agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConversationListResponse'
          description: ''
    post:
      operationId: emailAgentThreadsCreate
      description: |-
        Base ModelViewSet with smart serializer discovery and user ownership filtering.
        Use this for ViewSets where objects belong to users.
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConversationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConversationRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
          description: ''
  /email-agent/threads/{id}/:
    get:
      operationId: emailAgentThreadsRetrieve
      description: |-
        Base ModelViewSet with smart serializer discovery and user ownership filtering.
        Use this for ViewSets where objects belong to users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this conversation.
        required: true
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
          description: ''
    put:
      operationId: emailAgentThreadsUpdate
      description: |-
        Base ModelViewSet with smart serializer discovery and user ownership filtering.
        Use this for ViewSets where objects belong to users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this conversation.
        required: true
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConversationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConversationRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
          description: ''
    patch:
      operationId: emailAgentThreadsPartialUpdate
      description: |-
        Base ModelViewSet with smart serializer discovery and user ownership filtering.
        Use this for ViewSets where objects belong to users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this conversation.
        required: true
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedConversationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedConversationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedConversationRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
          description: ''
    delete:
      operationId: emailAgentThreadsDestroy
      description: |-
        Base ModelViewSet with smart serializer discovery and user ownership filtering.
        Use this for ViewSets where objects belong to users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this conversation.
        required: true
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /email-agent/threads/{id}/add-tags/:
    post:
      operationId: conversationAddTags
      description: Add tags to a conversation. Creates new tags if they don't exist.
      summary: Add tags to conversation
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this conversation.
        required: true
      tags:
      - email_agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationTagRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConversationTagRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConversationTagRequestRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationTagResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Bad Request
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Not Found
          description: ''
  /email-agent/threads/{id}/archive/:
    post:
      operationId: conversationArchive
      description: Archive or unarchive a conversation based on the archive parameter.
      summary: Archive/unarchive conversation
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this conversation.
        required: true
      tags:
      - email_agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationArchiveRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConversationArchiveRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConversationArchiveRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationArchiveResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Bad Request
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Not Found
          description: ''
  /email-agent/threads/{id}/automated-replies/:
    post:
      operationId: conversationAutomatedReplies
      description: Enable or disable automated replies for a conversation.
      summary: Manage automated replies
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this conversation.
        required: true
      tags:
      - email_agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationAutomatedReplyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConversationAutomatedReplyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConversationAutomatedReplyRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationAutomatedReplyResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Bad Request
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Not Found
          description: ''
  /email-agent/threads/{id}/automated-schedule/:
    get:
      operationId: conversationGetAutomatedSchedule
      description: Get the automated reply schedule for a conversation.
      summary: Get automated reply schedule
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this conversation.
        required: true
      tags:
      - email_agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomatedReplySchedule'
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Schedule not found
          description: ''
    patch:
      operationId: conversationUpdateAutomatedSchedule
      description: Update the automated reply schedule for a conversation.
      summary: Update automated reply schedule
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this conversation.
        required: true
      tags:
      - email_agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAutomatedReplyScheduleUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAutomatedReplyScheduleUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAutomatedReplyScheduleUpdateRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomatedReplySchedule'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Bad Request
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Schedule not found
          description: ''
  /email-agent/threads/{id}/drafts/:
    get:
      operationId: conversationListDrafts
      description: List all draft messages for this conversation thread.
      summary: List draft messages
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this conversation.
        required: true
      tags:
      - email_agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationDraftListResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Not Found
          description: ''
  /email-agent/threads/{id}/drafts/{draftId}/:
    get:
      operationId: conversationGetDraft
      description: Get a specific draft message by ID for this conversation thread.
      summary: Get draft message
      parameters:
      - in: path
        name: draftId
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this conversation.
        required: true
      tags:
      - email_agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationDraftDetailResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Not Found
          description: ''
  /email-agent/threads/{id}/messages/:
    get:
      operationId: conversationMessages
      description: Retrieve all messages for this conversation/thread.
      summary: Get messages in conversation
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this conversation.
        required: true
      tags:
      - email_agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadMessageList'
          description: ''
  /email-agent/threads/{id}/pause-automated-replies/:
    post:
      operationId: conversationPauseAutomatedReplies
      description: Pause automated replies for a conversation.
      summary: Pause automated replies
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this conversation.
        required: true
      tags:
      - email_agent
      requestBody:
        content:
          type:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          properties:
            schema:
              reason:
                type: string
                description: Optional reason for pausing automated replies
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  schedule:
                    $ref: '#/components/schemas/AutomatedReplySchedule'
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Schedule not found
          description: ''
  /email-agent/threads/{id}/remove-tags/:
    post:
      operationId: conversationRemoveTags
      description: Remove tags from a conversation by tag names.
      summary: Remove tags from conversation
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this conversation.
        required: true
      tags:
      - email_agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationTagRemoveRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConversationTagRemoveRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConversationTagRemoveRequestRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationTagRemoveResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Bad Request
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Not Found
          description: ''
  /email-agent/threads/{id}/resume-automated-replies/:
    post:
      operationId: conversationResumeAutomatedReplies
      description: Resume automated replies for a conversation.
      summary: Resume automated replies
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this conversation.
        required: true
      tags:
      - email_agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConversationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConversationRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  schedule:
                    $ref: '#/components/schemas/AutomatedReplySchedule'
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Schedule not found
          description: ''
  /email-agent/threads/{id}/send/:
    post:
      operationId: conversationSendMessage
      description: Send an outgoing message within this conversation.
      summary: Send message in conversation
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this conversation.
        required: true
      tags:
      - email_agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThreadMessageSendRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ThreadMessageSendRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ThreadMessageSendRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message_id:
                    type: integer
                  thread_id:
                    type: integer
                  reply_log_id:
                    type: integer
                    nullable: true
                  message:
                    type: string
          description: ''
  /email-agent/threads/{id}/suggest-ai-reply/:
    get:
      operationId: conversationSuggestAiReply
      description: Generate an AI-suggested reply for this conversation thread based
        on conversation history and optional objective.
      summary: Generate AI-suggested reply
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this conversation.
        required: true
      tags:
      - email_agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationAIReplyResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Bad Request
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Not Found
          description: ''
        '429':
          content:
            application/json:
              schema:
                description: Rate limit exceeded
          description: ''
  /email-agent/threads/{id}/suggest-reply/:
    post:
      operationId: conversationSuggestReply
      description: Generate an AI-suggested reply and save it to the conversation's
        ai_response_draft field.
      summary: Generate AI-suggested reply draft
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this conversation.
        required: true
      tags:
      - email_agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationAISuggestRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConversationAISuggestRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConversationAISuggestRequestRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationAISuggestResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Bad Request
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Not Found
          description: ''
  /email-agent/threads/{id}/toggle-archive/:
    post:
      operationId: conversationToggleArchive
      description: Toggle the archive status of a conversation (archived becomes unarchived
        and vice versa).
      summary: Toggle conversation archive status
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this conversation.
        required: true
      tags:
      - email_agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConversationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConversationRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationToggleArchiveResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Not Found
          description: ''
  /email-agent/threads/deep-sync-emails/:
    post:
      operationId: emailAgentThreadsDeepSyncEmailsCreate
      description: Trigger a deep sync to fetch ALL historical emails from Instantly.ai
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConversationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConversationRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
          description: ''
  /email-agent/threads/sync-emails/:
    post:
      operationId: emailAgentThreadsSyncEmailsCreate
      description: Manually trigger background email sync from Instantly.ai
      tags:
      - email-agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConversationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConversationRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
          description: ''
  /email-agent/threads/sync-status/:
    get:
      operationId: emailAgentThreadsSyncStatusRetrieve
      description: Check the current sync status for the user
      tags:
      - email-agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
          description: ''
  /email-agent/threads/thread-messages/:
    get:
      operationId: emailAgentThreadMessages
      description: Get all messages for a specific thread by its ID.
      summary: List thread messages
      parameters:
      - in: query
        name: thread_id
        schema:
          type: integer
        description: ID of the conversation/thread to get messages for
        required: true
      tags:
      - email_agent
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadMessageList'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Bad Request - Missing thread_id parameter
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Not Found - Thread does not exist
          description: ''
  /email-agent/webhook/:
    post:
      operationId: emailAgentWebhookCreate
      description: Generic webhook endpoint for email provider notifications.
      tags:
      - email-agent
      responses:
        '200':
          description: No response body
  /gmb/audit/{auditId}/:
    get:
      operationId: gmbAuditRetrieve
      parameters:
      - in: path
        name: auditId
        schema:
          type: string
        required: true
      tags:
      - GMB Audit
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditResult'
          description: ''
  /gmb/audit/business/{businessIdentifier}/:
    get:
      operationId: gmbAuditBusinessList
      description: Get all audits for a specific business by UUID or business_id
      parameters:
      - in: path
        name: businessIdentifier
        schema:
          type: string
        required: true
      tags:
      - GMB Audit
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GMBAudit'
          description: ''
  /gmb/audit/list/:
    get:
      operationId: gmbAuditListList
      description: Get all audits, optionally filtered by gmb_url.
      parameters:
      - in: query
        name: gmb_url
        schema:
          type: string
        description: Filter audits by GMB URL
      tags:
      - GMB Audit
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GMBAudit'
          description: ''
  /gmb/audit/run/:
    post:
      operationId: gmbAuditRunCreate
      tags:
      - GMB Audit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunAuditRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RunAuditRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RunAuditRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditResponse'
          description: ''
  /gmb/audit/share/{shareToken}/:
    get:
      operationId: gmbAuditShareRetrieve
      description: Get audit results by public share token (no authentication required)
      parameters:
      - in: path
        name: shareToken
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - GMB Audit
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditResult'
          description: ''
  /gmb/businesses/:
    get:
      operationId: gmbBusinessesRetrieve
      description: |-
        API view for business operations.
        GET: List all businesses for the current user
        POST: Create a new business
      tags:
      - gmb
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: gmbBusinessesCreate
      description: |-
        API view for business operations.
        GET: List all businesses for the current user
        POST: Create a new business
      tags:
      - gmb
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: gmbBusinessesUpdate
      description: |-
        API view for business operations.
        GET: List all businesses for the current user
        POST: Create a new business
      tags:
      - gmb
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /gmb/businesses/{businessId}/:
    get:
      operationId: gmbBusinessesRetrieve2
      description: |-
        API view for business operations.
        GET: List all businesses for the current user
        POST: Create a new business
      parameters:
      - in: path
        name: businessId
        schema:
          type: integer
        required: true
      tags:
      - gmb
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: gmbBusinessesCreate2
      description: |-
        API view for business operations.
        GET: List all businesses for the current user
        POST: Create a new business
      parameters:
      - in: path
        name: businessId
        schema:
          type: integer
        required: true
      tags:
      - gmb
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: gmbBusinessesUpdate2
      description: |-
        API view for business operations.
        GET: List all businesses for the current user
        POST: Create a new business
      parameters:
      - in: path
        name: businessId
        schema:
          type: integer
        required: true
      tags:
      - gmb
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /gmb/credentials/:
    get:
      operationId: gmbCredentialsList
      description: |-
        ViewSet for managing merchant credentials.

        Endpoints:
        - GET /api/gmb/credentials/ - List all credentials
        - POST /api/gmb/credentials/ - Create new credential
        - GET /api/gmb/credentials/{id}/ - Get single credential
        - DELETE /api/gmb/credentials/{id}/ - Delete credential
        - DELETE /api/gmb/credentials/ - Delete all credentials
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - gmb
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMerchantCredentialList'
          description: ''
    post:
      operationId: gmbCredentialsCreate
      description: |-
        ViewSet for managing merchant credentials.

        Endpoints:
        - GET /api/gmb/credentials/ - List all credentials
        - POST /api/gmb/credentials/ - Create new credential
        - GET /api/gmb/credentials/{id}/ - Get single credential
        - DELETE /api/gmb/credentials/{id}/ - Delete credential
        - DELETE /api/gmb/credentials/ - Delete all credentials
      tags:
      - gmb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantCredentialRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MerchantCredentialRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MerchantCredentialRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantCredential'
          description: ''
  /gmb/credentials/{credentialId}/accounts/:
    get:
      operationId: gmbCredentialsAccountsRetrieve
      description: |-
        List GMB accounts for the specified merchant credential.
        Demonstrates usage of the GMBService class.

        Note the rate limits:
        - Read operations: 300 queries per minute (QPM)
        - Write operations: 10 edits per minute per location
      parameters:
      - in: path
        name: credentialId
        schema:
          type: integer
        required: true
      tags:
      - gmb
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /gmb/credentials/{credentialId}/token/:
    get:
      operationId: gmbCredentialsTokenRetrieve
      description: |-
        Get a valid access token for the specified merchant credential.
        Automatically refreshes if the token is about to expire.
      parameters:
      - in: path
        name: credentialId
        schema:
          type: integer
        required: true
      tags:
      - gmb
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /gmb/credentials/{id}/:
    get:
      operationId: gmbCredentialsRetrieve
      description: |-
        ViewSet for managing merchant credentials.

        Endpoints:
        - GET /api/gmb/credentials/ - List all credentials
        - POST /api/gmb/credentials/ - Create new credential
        - GET /api/gmb/credentials/{id}/ - Get single credential
        - DELETE /api/gmb/credentials/{id}/ - Delete credential
        - DELETE /api/gmb/credentials/ - Delete all credentials
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - gmb
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantCredential'
          description: ''
    put:
      operationId: gmbCredentialsUpdate
      description: |-
        ViewSet for managing merchant credentials.

        Endpoints:
        - GET /api/gmb/credentials/ - List all credentials
        - POST /api/gmb/credentials/ - Create new credential
        - GET /api/gmb/credentials/{id}/ - Get single credential
        - DELETE /api/gmb/credentials/{id}/ - Delete credential
        - DELETE /api/gmb/credentials/ - Delete all credentials
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - gmb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantCredentialRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MerchantCredentialRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MerchantCredentialRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantCredential'
          description: ''
    patch:
      operationId: gmbCredentialsPartialUpdate
      description: |-
        ViewSet for managing merchant credentials.

        Endpoints:
        - GET /api/gmb/credentials/ - List all credentials
        - POST /api/gmb/credentials/ - Create new credential
        - GET /api/gmb/credentials/{id}/ - Get single credential
        - DELETE /api/gmb/credentials/{id}/ - Delete credential
        - DELETE /api/gmb/credentials/ - Delete all credentials
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - gmb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMerchantCredentialRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMerchantCredentialRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMerchantCredentialRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantCredential'
          description: ''
    delete:
      operationId: gmbCredentialsDestroy
      description: |-
        ViewSet for managing merchant credentials.

        Endpoints:
        - GET /api/gmb/credentials/ - List all credentials
        - POST /api/gmb/credentials/ - Create new credential
        - GET /api/gmb/credentials/{id}/ - Get single credential
        - DELETE /api/gmb/credentials/{id}/ - Delete credential
        - DELETE /api/gmb/credentials/ - Delete all credentials
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - gmb
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /gmb/google-accounts/:
    get:
      operationId: gmbGoogleAccountsList
      description: ViewSet for managing Google My Business accounts.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - gmb
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMerchantCredentialList'
          description: ''
  /gmb/google-accounts/{id}/:
    get:
      operationId: gmbGoogleAccountsRetrieve
      description: ViewSet for managing Google My Business accounts.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - gmb
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantCredential'
          description: ''
  /gmb/google-accounts/{id}/enable_location/:
    post:
      operationId: gmbGoogleAccountsEnableLocationCreate
      description: |-
        Simple toggle to enable/disable a location.

        POST with:
        {
            "location_id": "123456",
            "enabled": true/false
        }

        Or legacy format:
        {
            "location_resource_name": "accounts/123/locations/456",
            "is_enabled": true/false
        }
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - gmb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantCredentialRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MerchantCredentialRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MerchantCredentialRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantCredential'
          description: ''
  /gmb/google-accounts/{id}/locations/:
    get:
      operationId: gmbGoogleAccountsLocationsRetrieve
      description: List all locations for a specific Google account.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - gmb
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantCredential'
          description: ''
  /gmb/google-accounts/accounts_with_locations/:
    get:
      operationId: gmbGoogleAccountsAccountsWithLocationsRetrieve
      description: |-
        Get all Google accounts with their associated locations in a single call.

        Returns:
            Response with schema:
            {
                "accounts": [
                    {
                        "account_name": "string",
                        "account_id": "string",
                        "credential_id": "integer",
                        "locations": [
                            {
                                "resource_name": "string",
                                "location_id": "string",
                                "title": "string",
                                "address": "string",
                                "phone": "string",
                                "is_enabled": "boolean"
                            }
                        ]
                    }
                ]
            }
      tags:
      - gmb
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GMBAccountsListResponse'
          description: ''
  /gmb/locations/:
    get:
      operationId: gmbLocationsList
      description: List all enabled locations across all credentials.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - gmb
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLocationList'
          description: ''
  /gmb/locations/{id}/toggle-weekly-posts/:
    post:
      operationId: gmbLocationsToggleWeeklyPostsCreate
      description: Toggle weekly post generation for a location
      summary: Toggle weekly posts
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - gmb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToggleWeeklyPostsRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ToggleWeeklyPostsRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ToggleWeeklyPostsRequestRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToggleWeeklyPostsResponse'
          description: ''
  /gmb/locations/{id}/update_details/:
    patch:
      operationId: gmbLocationsUpdateDetailsPartialUpdate
      description: |-
        Update location details like title, business description, and keywords in our local database.
        Only updates fields that are explicitly provided and have non-blank values.

        PATCH /api/gmb/locations/{id}/update_details/

        Request body:
        {
            "title": "New Location Name",
            "business_description": "Updated business description",
            "keywords": "keyword1, keyword2, keyword3"
        }
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - gmb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLocationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLocationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLocationRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: ''
  /gmb/posts/:
    get:
      operationId: gmbPostsList
      description: |-
        ViewSet for managing GMB posts (drafts, queued, and published).

        Endpoints:
        - POST /api/gmb/posts/ - Create a new draft post
        - GET /api/gmb/posts/ - List all posts (filter by ?status=DRAFT)
        - POST /api/gmb/posts/{id}/publish/ - Publish a draft post
        - POST /api/gmb/posts/{id}/queue/ - Queue a draft post for later
        - POST /api/gmb/posts/{id}/autosave/ - Autosave draft post changes
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - gmb
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGMBPostList'
          description: ''
    post:
      operationId: gmbPostsCreate
      description: Enhanced create method with better error logging
      tags:
      - gmb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GMBPost'
          description: ''
  /gmb/posts/{id}/:
    get:
      operationId: gmbPostsRetrieve
      description: |-
        ViewSet for managing GMB posts (drafts, queued, and published).

        Endpoints:
        - POST /api/gmb/posts/ - Create a new draft post
        - GET /api/gmb/posts/ - List all posts (filter by ?status=DRAFT)
        - POST /api/gmb/posts/{id}/publish/ - Publish a draft post
        - POST /api/gmb/posts/{id}/queue/ - Queue a draft post for later
        - POST /api/gmb/posts/{id}/autosave/ - Autosave draft post changes
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - gmb
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GMBPost'
          description: ''
    put:
      operationId: gmbPostsUpdate
      description: |-
        ViewSet for managing GMB posts (drafts, queued, and published).

        Endpoints:
        - POST /api/gmb/posts/ - Create a new draft post
        - GET /api/gmb/posts/ - List all posts (filter by ?status=DRAFT)
        - POST /api/gmb/posts/{id}/publish/ - Publish a draft post
        - POST /api/gmb/posts/{id}/queue/ - Queue a draft post for later
        - POST /api/gmb/posts/{id}/autosave/ - Autosave draft post changes
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - gmb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GMBPost'
          description: ''
    patch:
      operationId: gmbPostsPartialUpdate
      description: |-
        ViewSet for managing GMB posts (drafts, queued, and published).

        Endpoints:
        - POST /api/gmb/posts/ - Create a new draft post
        - GET /api/gmb/posts/ - List all posts (filter by ?status=DRAFT)
        - POST /api/gmb/posts/{id}/publish/ - Publish a draft post
        - POST /api/gmb/posts/{id}/queue/ - Queue a draft post for later
        - POST /api/gmb/posts/{id}/autosave/ - Autosave draft post changes
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - gmb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGMBPostRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGMBPostRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGMBPostRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GMBPost'
          description: ''
    delete:
      operationId: gmbPostsDestroy
      description: |-
        ViewSet for managing GMB posts (drafts, queued, and published).

        Endpoints:
        - POST /api/gmb/posts/ - Create a new draft post
        - GET /api/gmb/posts/ - List all posts (filter by ?status=DRAFT)
        - POST /api/gmb/posts/{id}/publish/ - Publish a draft post
        - POST /api/gmb/posts/{id}/queue/ - Queue a draft post for later
        - POST /api/gmb/posts/{id}/autosave/ - Autosave draft post changes
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - gmb
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /gmb/posts/{id}/autosave/:
    post:
      operationId: gmbPostsAutosaveCreate
      description: |-
        Autosave a draft post. This endpoint is designed to be called frequently
        (e.g., every 5 seconds) to save the user's current progress.

        Only updates the content (summary, image_url, cta fields) without changing status.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - gmb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GMBPost'
          description: ''
  /gmb/posts/{id}/generate_content_for_post/:
    post:
      operationId: gmbPostsGenerateContentForPostCreate
      description: |-
        Generate AI content for a specific Google My Business post.

        This endpoint uses AI to generate engaging content for an existing post.
        The generated content will update the post's summary.

        Request body:
        ```json
        {
            "business_type": "Restaurant",  // Type of business
            "post_type": "UPDATE",          // Type of post (UPDATE, OFFER, EVENT)
            "keywords": "weekend special, brunch", // Optional keywords to include
            "tone": "friendly",              // Optional tone (friendly, professional, casual, formal)
            "location_id": "123456"         // Optional location ID to use its metadata
        }
        ```

        Returns:
        ```json
        {
            "content": "The generated post content text",
            "post": { post data with updated summary },
            "success": true
        }
        ```

        Note: Rate limited to {MAX_AI_DRAFTS_PER_MONTH} requests per month per user.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - gmb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GMBPost'
          description: ''
  /gmb/posts/{id}/publish/:
    post:
      operationId: gmbPostsPublishCreate
      description: Immediately publish a post.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - gmb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GMBPost'
          description: ''
  /gmb/posts/{id}/queue/:
    post:
      operationId: gmbPostsQueueCreate
      description: Queue a draft post for publishing.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - gmb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GMBPostRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GMBPost'
          description: ''
  /gmb/posts/sync/:
    post:
      operationId: gmbPostsSyncCreate
      description: |-
        Trigger asynchronous sync of published posts for the current user.

        Fires the ``sync_posts`` Celery task and returns 202 Accepted immediately.
      tags:
      - gmb
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /gmb/refresh_token/:
    post:
      operationId: gmbRefreshTokenCreate
      description: Refresh access tokens for merchant credentials.
      tags:
      - gmb
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /gmb/reviews/:
    get:
      operationId: gmbReviewsList
      description: Override list to support both paginated and non-paginated responses
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - gmb
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewList'
          description: ''
    post:
      operationId: gmbReviewsCreate
      description: |-
        ViewSet for managing Google My Business reviews.

        Endpoints:
        - GET /api/gmb/reviews/ - List paginated reviews (with ?all=true for non-paginated)
        - GET /api/gmb/reviews/{id}/ - Get a single review
        - POST /api/gmb/reviews/{id}/reply/ - Reply to a review
        - DELETE /api/gmb/reviews/{id}/reply/ - Delete a reply
        - POST /api/gmb/reviews/ai_generate/ - Generate AI responses for single/multiple reviews
        - POST /api/gmb/reviews/{id}/save_draft/ - Save a draft reply
        - POST /api/gmb/reviews/bulk_publish_drafts/ - Publish multiple draft replies
        - GET /api/gmb/reviews/bulk_status/ - Get bulk operation status and usage info
        - POST /api/gmb/reviews/sync/ - Trigger manual sync of reviews
      tags:
      - gmb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
  /gmb/reviews/{id}/:
    get:
      operationId: gmbReviewsRetrieve
      description: Override retrieve to include draft data if it exists
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - gmb
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    put:
      operationId: gmbReviewsUpdate
      description: |-
        ViewSet for managing Google My Business reviews.

        Endpoints:
        - GET /api/gmb/reviews/ - List paginated reviews (with ?all=true for non-paginated)
        - GET /api/gmb/reviews/{id}/ - Get a single review
        - POST /api/gmb/reviews/{id}/reply/ - Reply to a review
        - DELETE /api/gmb/reviews/{id}/reply/ - Delete a reply
        - POST /api/gmb/reviews/ai_generate/ - Generate AI responses for single/multiple reviews
        - POST /api/gmb/reviews/{id}/save_draft/ - Save a draft reply
        - POST /api/gmb/reviews/bulk_publish_drafts/ - Publish multiple draft replies
        - GET /api/gmb/reviews/bulk_status/ - Get bulk operation status and usage info
        - POST /api/gmb/reviews/sync/ - Trigger manual sync of reviews
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - gmb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    patch:
      operationId: gmbReviewsPartialUpdate
      description: |-
        ViewSet for managing Google My Business reviews.

        Endpoints:
        - GET /api/gmb/reviews/ - List paginated reviews (with ?all=true for non-paginated)
        - GET /api/gmb/reviews/{id}/ - Get a single review
        - POST /api/gmb/reviews/{id}/reply/ - Reply to a review
        - DELETE /api/gmb/reviews/{id}/reply/ - Delete a reply
        - POST /api/gmb/reviews/ai_generate/ - Generate AI responses for single/multiple reviews
        - POST /api/gmb/reviews/{id}/save_draft/ - Save a draft reply
        - POST /api/gmb/reviews/bulk_publish_drafts/ - Publish multiple draft replies
        - GET /api/gmb/reviews/bulk_status/ - Get bulk operation status and usage info
        - POST /api/gmb/reviews/sync/ - Trigger manual sync of reviews
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - gmb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReviewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReviewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReviewRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    delete:
      operationId: gmbReviewsDestroy
      description: |-
        ViewSet for managing Google My Business reviews.

        Endpoints:
        - GET /api/gmb/reviews/ - List paginated reviews (with ?all=true for non-paginated)
        - GET /api/gmb/reviews/{id}/ - Get a single review
        - POST /api/gmb/reviews/{id}/reply/ - Reply to a review
        - DELETE /api/gmb/reviews/{id}/reply/ - Delete a reply
        - POST /api/gmb/reviews/ai_generate/ - Generate AI responses for single/multiple reviews
        - POST /api/gmb/reviews/{id}/save_draft/ - Save a draft reply
        - POST /api/gmb/reviews/bulk_publish_drafts/ - Publish multiple draft replies
        - GET /api/gmb/reviews/bulk_status/ - Get bulk operation status and usage info
        - POST /api/gmb/reviews/sync/ - Trigger manual sync of reviews
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - gmb
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /gmb/reviews/{id}/delete_reply/:
    delete:
      operationId: gmbReviewsDeleteReplyDestroy
      description: Queue a reply deletion for a Google My Business review
      summary: Delete a review reply
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - gmb
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteReplyResponse'
          description: ''
  /gmb/reviews/{id}/reply/:
    post:
      operationId: gmbReviewsReplyCreate
      description: Queue a reply to a Google My Business review for publication
      summary: Reply to a review
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - gmb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplyRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReplyRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReplyRequestRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplyResponse'
          description: ''
  /gmb/reviews/{id}/save_draft/:
    post:
      operationId: gmbReviewsSaveDraftCreate
      description: |-
        Save a draft reply for a review without publishing it to Google.

        POST /api/gmb/reviews/{review_id}/save_draft/

        Request body:
        {
            "comment": "Draft reply text"
        }

        Returns:
        {
            "success": true,
            "draft": {
                "comment": "Draft reply text",
                "updated_at": "2024-03-21T10:00:00Z"
            }
        }
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - gmb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
  /gmb/reviews/ai_generate/:
    post:
      operationId: gmbReviewsAiGenerateCreate
      description: Generate AI replies for one or multiple reviews
      summary: Generate AI review replies
      tags:
      - gmb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIGenerationRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AIGenerationRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AIGenerationRequestRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIGenerationResponse'
          description: ''
  /gmb/reviews/bulk_publish_drafts/:
    post:
      operationId: gmbReviewsBulkPublishDraftsCreate
      description: Publish multiple draft replies to Google My Business
      summary: Bulk publish draft replies
      tags:
      - gmb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkPublishRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BulkPublishRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BulkPublishRequestRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkPublishResponse'
          description: ''
  /gmb/reviews/bulk_status/:
    get:
      operationId: gmbReviewsBulkStatusRetrieve
      description: Get bulk operation status and monthly usage information
      summary: Get bulk operation status
      tags:
      - gmb
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkStatusResponse'
          description: ''
  /gmb/reviews/sync/:
    post:
      operationId: gmbReviewsSyncCreate
      description: |-
        Trigger an asynchronous sync of reviews for the current user.

        The task will still iterate over *all* enabled locations, but the caller
        might only be interested in their own. The backend therefore starts the
        global sync task and immediately returns 202 Accepted. Front-end can poll
        ``/reviews`` for fresh data.

        Returns:
            Response with schema:
            {
                "success": true
            }
      tags:
      - gmb
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncResponse'
          description: ''
  /gmb/reviews/task_status/{taskId}/:
    get:
      operationId: gmbReviewsTaskStatusRetrieve
      description: Check the status of a background AI generation task
      summary: Check AI generation task status
      parameters:
      - in: path
        name: taskId
        schema:
          type: string
        required: true
      tags:
      - gmb
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
  /gmb/status/:
    get:
      operationId: gmbStatusRetrieve
      description: Get status of merchant credentials for the current user.
      tags:
      - gmb
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /leads/api/countries/:
    get:
      operationId: listAvailableCountries
      description: Get all countries supported by DataForSEO for lead searches
      summary: List available countries
      tags:
      - leads
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountriesResponse'
          description: ''
  /leads/api/credit-logs/:
    get:
      operationId: listLeadCreditLogs
      description: Get a paginated list of credit usage logs for the authenticated
        user
      summary: List credit usage logs
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - leads
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLeadCreditLogList'
          description: ''
  /leads/api/credit-logs/{id}/:
    get:
      operationId: getLeadCreditLog
      description: Get detailed information about a specific credit usage log
      summary: Get credit log details
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - leads
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadCreditLog'
          description: ''
  /leads/api/credits/:
    get:
      operationId: getLeadCredits
      description: Get the current lead credit information for the authenticated user
      summary: Get user lead credits
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - leads
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLeadCreditList'
          description: ''
  /leads/api/credits/{id}/:
    get:
      operationId: leadsApiCreditsRetrieve
      description: ViewSet for managing lead credits
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - leads
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadCredit'
          description: ''
  /leads/api/credits/add_credits/:
    post:
      operationId: addLeadCredits
      description: Admin endpoint to add lead credits to a user's account
      summary: Add credits to user account
      tags:
      - leads
      requestBody:
        content:
          type:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          properties:
            schema:
              amount:
                type: integer
                minimum: 1
          required:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  balance:
                    type: integer
                  total_earned:
                    type: integer
                  total_spent:
                    type: integer
                  message:
                    type: string
          description: ''
  /leads/api/credits/balance/:
    get:
      operationId: getUserLeadCreditBalance
      description: Returns the current lead credit balance for the authenticated user
      summary: Get user lead credit balance
      tags:
      - leads
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadCredit'
          description: ''
  /leads/api/credits/checkout/:
    post:
      operationId: createLeadCreditCheckoutSession
      description: Create a Stripe Checkout-Session for purchasing lead-credits.
      tags:
      - leads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeadCreditCheckoutRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LeadCreditCheckoutRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LeadCreditCheckoutRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadCreditCheckout'
          description: ''
  /leads/api/credits/packages/:
    get:
      operationId: listCreditPackages
      description: Get all available lead credit packages with pricing
      summary: List available credit packages
      tags:
      - leads
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditPackagesResponse'
          description: ''
  /leads/api/demo/:
    get:
      operationId: getDemoLeads
      description: Returns fake demo lead data for preview purposes
      summary: Get demo lead data
      parameters:
      - in: query
        name: count
        schema:
          type: integer
        description: Number of demo leads to return (max 50)
      - in: query
        name: location
        schema:
          type: string
        description: Location for demo leads
        required: true
      tags:
      - leads
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemoLeadsResponse'
          description: ''
  /leads/api/estimate/:
    get:
      operationId: getBusinessCountEstimate
      description: Get estimated number of businesses for search parameters before
        running a paid search
      summary: Get business count estimate
      parameters:
      - in: query
        name: country_code
        schema:
          type: string
        description: Country code filter (e.g., "US", "CA")
      - in: query
        name: location
        schema:
          type: string
        description: Location to search (e.g., "New York, NY", "Los Angeles, CA")
        required: true
      - in: query
        name: query
        schema:
          type: string
        description: Search query (e.g., "dentist", "lawyer", "restaurant")
        required: true
      - in: query
        name: region
        schema:
          type: string
        description: Region/state filter (e.g., "California", "Texas")
      tags:
      - leads
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessEstimateResponse'
          description: ''
  /leads/api/estimate/free/:
    get:
      operationId: getFreeBusinessEstimate
      description: Get estimated business count using cached location data - no API
        costs
      summary: Get free business count estimate
      parameters:
      - in: query
        name: country_code
        schema:
          type: string
        description: Country code filter (e.g., "US", "CA")
      - in: query
        name: location
        schema:
          type: string
        description: Location to search (e.g., "New York, NY", "Los Angeles, CA")
      - in: query
        name: query
        schema:
          type: string
        description: Search query (e.g., "dentist", "lawyer", "restaurant")
        required: true
      - in: query
        name: region
        schema:
          type: string
        description: Region/state filter (e.g., "California", "Texas")
      tags:
      - leads
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreeEstimateResponse'
          description: ''
  /leads/api/export/:
    post:
      operationId: exportPreviousSearches
      description: Export search history and results to CSV format
      summary: Export previous searches to CSV
      tags:
      - leads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeadSearchExportRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LeadSearchExportRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LeadSearchExportRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /leads/api/filters/:
    get:
      operationId: getAvailableFilters
      description: Returns all available filters that can be used for lead searches
        from a hardcoded JSON file
      summary: Get available DataForSEO filters
      tags:
      - leads
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableFiltersResponse'
          description: ''
  /leads/api/human-to-filters/:
    post:
      operationId: convertHumanToFilters
      description: Uses OpenAI to convert natural language queries into structured
        DataForSEO API filters with extracted location and industry information
      summary: Convert human query to DataForSEO filters
      tags:
      - leads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HumanToFiltersRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HumanToFiltersRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HumanToFiltersRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HumanToFiltersResponse'
          description: ''
  /leads/api/previous-searches/:
    get:
      operationId: getPreviousSearches
      description: Returns all previous lead searches for the authenticated user
      summary: Get previous searches
      tags:
      - leads
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LeadSearch'
          description: ''
  /leads/api/regions/:
    get:
      operationId: listAvailableRegions
      description: Get all regions/states for a specific country supported by DataForSEO
      summary: List available regions
      parameters:
      - in: query
        name: country_code
        schema:
          type: string
        description: Two-letter country code (e.g., US, CA, GB)
        required: true
      tags:
      - leads
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionsResponse'
          description: ''
  /leads/api/results/:
    get:
      operationId: listLeadResults
      description: Get a paginated list of lead results for the authenticated user
      summary: List lead results
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - leads
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLeadResultList'
          description: ''
  /leads/api/results/{id}/:
    get:
      operationId: getLeadResult
      description: Get detailed information about a specific lead result
      summary: Get lead result details
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - leads
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadResultDetail'
          description: ''
  /leads/api/searches/:
    get:
      operationId: listLeadSearches
      description: Get a paginated list of lead searches for the authenticated user
      summary: List lead searches
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - leads
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLeadSearchList'
          description: ''
    post:
      operationId: createLeadSearch
      description: Creates a new lead search request. Will convert human query to
        filters and estimate credit cost.
      summary: Create a new lead search
      tags:
      - leads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeadSearchCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LeadSearchCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LeadSearchCreateRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadSearchCreate'
          description: ''
  /leads/api/searches/{id}/:
    get:
      operationId: getLeadSearch
      description: Get detailed information about a specific lead search
      summary: Get lead search details
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - leads
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadSearch'
          description: ''
    put:
      operationId: leadsApiSearchesUpdate
      description: ViewSet for managing lead searches
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - leads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeadSearchRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LeadSearchRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LeadSearchRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadSearch'
          description: ''
    patch:
      operationId: leadsApiSearchesPartialUpdate
      description: ViewSet for managing lead searches
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - leads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLeadSearchRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLeadSearchRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLeadSearchRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadSearch'
          description: ''
    delete:
      operationId: leadsApiSearchesDestroy
      description: ViewSet for managing lead searches
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - leads
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /leads/api/searches/{id}/email_stats/:
    get:
      operationId: getSearchEmailStats
      description: Get email counts by source for this search using credit log analysis
      summary: Get email discovery statistics
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - leads
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailStatsResponse'
          description: ''
  /leads/api/searches/{id}/export_csv/:
    get:
      operationId: exportSearchCsv
      description: Download search results as CSV file
      summary: Export search results to CSV
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - leads
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadSearch'
          description: ''
  /leads/api/searches/{id}/results/:
    get:
      operationId: getSearchResults
      description: Get the lead results for a completed search
      summary: Get search results
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - leads
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLeadResultList'
          description: ''
  /leads/api/searches/{id}/status/:
    get:
      operationId: getSearchStatus
      description: Get the current status and progress of a lead search
      summary: Get search status
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - leads
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadSearchStatus'
          description: ''
  /pegasus/employees/api/employee-data/:
    get:
      operationId: employeesAggregateData
      tags:
      - pegasus
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregateEmployeeData'
          description: ''
  /pegasus/employees/api/employees/:
    get:
      operationId: employeesList
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - pegasus
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmployeeList'
          description: ''
    post:
      operationId: employeesCreate
      tags:
      - pegasus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmployeeRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
  /pegasus/employees/api/employees/{id}/:
    get:
      operationId: employeesRetrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee.
        required: true
      tags:
      - pegasus
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
    put:
      operationId: employeesUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee.
        required: true
      tags:
      - pegasus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmployeeRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
    patch:
      operationId: employeesPartialUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee.
        required: true
      tags:
      - pegasus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEmployeeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEmployeeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEmployeeRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
    delete:
      operationId: employeesDestroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee.
        required: true
      tags:
      - pegasus
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /review-booster/analytics-events/:
    get:
      operationId: reviewBoosterAnalyticsEventsList
      description: ViewSet for detailed analytics events
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - review-booster
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewBoosterAnalyticsList'
          description: ''
  /review-booster/analytics-events/{id}/:
    get:
      operationId: reviewBoosterAnalyticsEventsRetrieve
      description: ViewSet for detailed analytics events
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - review-booster
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewBoosterAnalytics'
          description: ''
  /review-booster/campaigns/:
    get:
      operationId: reviewBoosterCampaignsList
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - review-booster
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewCampaignList'
          description: ''
    post:
      operationId: reviewBoosterCampaignsCreate
      tags:
      - review-booster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewCampaignRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewCampaignRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewCampaignRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewCampaign'
          description: ''
  /review-booster/campaigns/{campaignId}/analytics/:
    get:
      operationId: reviewBoosterCampaignsAnalyticsRetrieve
      description: Get analytics data for a specific campaign
      parameters:
      - in: path
        name: campaignId
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - review-booster
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /review-booster/campaigns/{id}/:
    get:
      operationId: reviewBoosterCampaignsRetrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - review-booster
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewCampaign'
          description: ''
    put:
      operationId: reviewBoosterCampaignsUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - review-booster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewCampaignRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewCampaignRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewCampaignRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewCampaign'
          description: ''
    patch:
      operationId: reviewBoosterCampaignsPartialUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - review-booster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReviewCampaignRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReviewCampaignRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReviewCampaignRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewCampaign'
          description: ''
    delete:
      operationId: reviewBoosterCampaignsDestroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - review-booster
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /review-booster/campaigns/{id}/activate/:
    post:
      operationId: reviewBoosterCampaignsActivateCreate
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - review-booster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewCampaignRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewCampaignRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewCampaignRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewCampaign'
          description: ''
  /review-booster/campaigns/{id}/pause/:
    post:
      operationId: reviewBoosterCampaignsPauseCreate
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - review-booster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewCampaignRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewCampaignRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewCampaignRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewCampaign'
          description: ''
  /review-booster/campaigns/{id}/stats/:
    get:
      operationId: reviewBoosterCampaignsStatsRetrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - review-booster
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewCampaign'
          description: ''
  /review-booster/collect/{campaignId}/:
    post:
      operationId: reviewBoosterCollectCreate
      description: Collect customer opt-in information
      parameters:
      - in: path
        name: campaignId
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - review-booster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerOptinCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerOptinCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerOptinCreateRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /review-booster/contacts/:
    get:
      operationId: reviewBoosterContactsList
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - review-booster
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomerOptinList'
          description: ''
    post:
      operationId: reviewBoosterContactsCreate
      tags:
      - review-booster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerOptinRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerOptinRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerOptinRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerOptin'
          description: ''
  /review-booster/contacts/{id}/:
    get:
      operationId: reviewBoosterContactsRetrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - review-booster
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerOptin'
          description: ''
    put:
      operationId: reviewBoosterContactsUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - review-booster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerOptinRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerOptinRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerOptinRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerOptin'
          description: ''
    patch:
      operationId: reviewBoosterContactsPartialUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - review-booster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomerOptinRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomerOptinRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomerOptinRequest'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerOptin'
          description: ''
    delete:
      operationId: reviewBoosterContactsDestroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - review-booster
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /review-booster/contacts/{id}/send_reminder/:
    post:
      operationId: reviewBoosterContactsSendReminderCreate
      description: Send email/SMS reminder to a specific contact
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - review-booster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerOptinRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerOptinRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerOptinRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerOptin'
          description: ''
  /review-booster/contacts/bulk_send_reminders/:
    post:
      operationId: reviewBoosterContactsBulkSendRemindersCreate
      description: Send email/SMS reminders to multiple contacts
      tags:
      - review-booster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerOptinRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerOptinRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerOptinRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerOptin'
          description: ''
  /review-booster/daily-analytics/:
    get:
      operationId: reviewBoosterDailyAnalyticsList
      description: ViewSet for daily aggregated analytics
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - review-booster
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDailyAnalyticsSummaryList'
          description: ''
  /review-booster/daily-analytics/{id}/:
    get:
      operationId: reviewBoosterDailyAnalyticsRetrieve
      description: ViewSet for daily aggregated analytics
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - review-booster
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyAnalyticsSummary'
          description: ''
  /review-booster/email-queue/:
    get:
      operationId: reviewBoosterEmailQueueList
      description: ViewSet for monitoring email queue status
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - review-booster
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewEmailQueueList'
          description: ''
  /review-booster/email-queue/{id}/:
    get:
      operationId: reviewBoosterEmailQueueRetrieve
      description: ViewSet for monitoring email queue status
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - review-booster
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewEmailQueue'
          description: ''
  /review-booster/email-queue/{id}/retry/:
    post:
      operationId: reviewBoosterEmailQueueRetryCreate
      description: Retry a failed email
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - review-booster
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /review-booster/r/{uniqueToken}/:
    post:
      operationId: reviewBoosterRCreate
      parameters:
      - in: path
        name: uniqueToken
        schema:
          type: string
        required: true
      tags:
      - review-booster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewSubmissionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewSubmissionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewSubmissionRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /review-booster/requests/:
    get:
      operationId: reviewBoosterRequestsList
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - review-booster
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewRequestList'
          description: ''
  /review-booster/requests/{id}/:
    get:
      operationId: reviewBoosterRequestsRetrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - review-booster
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewRequest'
          description: ''
  /subscriptions/api/active-products/:
    get:
      operationId: activeProductsList
      tags:
      - subscriptions
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /subscriptions/api/biweekly-coupon/:
    get:
      operationId: biweeklyCoupon
      description: Retrieve a 20% off promotion code that is available to the authenticated
        user **every other week starting with the week they signed up**.  If an active
        promotion code already exists in the current window it is returned instead
        of creating a new one.  Optional `product_ids` query-string parameter can
        be provided (comma-separated list of Stripe product IDs) to limit the coupon
        to specific products.
      tags:
      - subscriptions
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /subscriptions/stripe/api/create-checkout-session/:
    post:
      operationId: createCreditCheckoutSession2
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CheckoutRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CheckoutRequest'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Checkout'
          description: ''
  /subscriptions/stripe/api/create-portal-session/:
    post:
      operationId: createPortalSession
      tags:
      - subscriptions
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /swagger.json:
    get:
      operationId: swagger.jsonRetrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - swagger.json
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /users/auth/google/:
    post:
      operationId: usersAuthGoogleCreate
      description: Handle Google authentication
      tags:
      - Authentication
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /users/auth/google/callback/:
    get:
      operationId: usersAuthGoogleCallbackRetrieve
      description: Handle the Google OAuth callback
      tags:
      - users
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /users/auth/login/:
    post:
      operationId: usersAuthLoginCreate
      description: Login user and return tokens
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              example:
                email: user@example.com
                password: securepassword
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /users/auth/logout/:
    post:
      operationId: usersAuthLogoutCreate
      description: Logout user by blacklisting the refresh token
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              example:
                refresh_token: your-refresh-token
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /users/auth/me/:
    get:
      operationId: usersAuthMeRetrieve
      description: Verify if user's token is valid and return user data
      tags:
      - Authentication
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /users/auth/metadata/:
    get:
      operationId: usersAuthMetadataRetrieve
      description: Get user metadata
      tags:
      - Authentication
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /users/auth/register/:
    post:
      operationId: usersAuthRegisterCreate
      description: Register a new user
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              example:
                email: user@example.com
                password: securepassword
                first_name: John
                last_name: Doe
                visitor_id: optional-fingerprint-visitor-id
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
  /users/auth/update_metadata/:
    post:
      operationId: usersAuthUpdateMetadataCreate
      description: Update user metadata
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              example:
                onboarding_status: COMPLETE
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /users/fingerprint/set/:
    post:
      operationId: usersFingerprintSetCreate
      description: Update the fingerprint visitor ID for the authenticated user
      tags:
      - Fingerprint
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /users/fingerprint/visits/:
    get:
      operationId: usersFingerprintVisitsRetrieve
      description: Get the fingerprint data for the authenticated user based on the
        request ID
      tags:
      - Fingerprint
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /users/pricing/config/:
    get:
      operationId: getPricingConfig
      description: Get pricing table configuration
      tags:
      - Pricing
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /users/token/get_tokens/:
    get:
      operationId: usersTokenGetTokensRetrieve
      tags:
      - Token
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /users/token/refresh/:
    post:
      operationId: usersTokenRefreshCreate
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
components:
  schemas:
    AIGenerationRequestRequest:
      type: object
      description: Serializer for AI review reply generation requests.
      properties:
        review_ids:
          type: array
          items:
            type: string
            minLength: 1
          description: List of review IDs to generate replies for (can be single ID
            or multiple IDs)
        save_as_draft:
          type: boolean
          default: true
          description: 'Whether to save generated replies as drafts (default: true)'
        overrides:
          type: object
          additionalProperties: {}
          description: Optional overrides for review data used in generation
      required:
      - review_ids
    AIGenerationResponse:
      type: object
      description: Serializer for AI review reply generation response.
      properties:
        success:
          type: boolean
        results:
          type: array
          items:
            $ref: '#/components/schemas/AIGenerationResult'
        generated_count:
          type: integer
        failed_count:
          type: integer
        monthly_usage:
          type: integer
        monthly_limit:
          type: integer
      required:
      - failed_count
      - generated_count
      - monthly_limit
      - monthly_usage
      - results
      - success
    AIGenerationResult:
      type: object
      description: Serializer for individual AI generation result.
      properties:
        review_id:
          type: string
        success:
          type: boolean
        reply:
          type: string
        saved_as_draft:
          type: boolean
        error:
          type: string
      required:
      - review_id
      - success
    ActivityLog:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        user:
          type: integer
          readOnly: true
        business:
          type:
          - integer
          - 'null'
          readOnly: true
        location:
          type:
          - integer
          - 'null'
          readOnly: true
        citation:
          type:
          - integer
          - 'null'
          readOnly: true
        event_type:
          type: string
          readOnly: true
        message:
          type:
          - string
          - 'null'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - business
      - citation
      - created_at
      - event_type
      - location
      - message
      - user
      - uuid
    AggregateEmployeeData:
      type: object
      properties:
        total_costs: {}
        average_salaries: {}
        headcounts: {}
      required:
      - average_salaries
      - headcounts
      - total_costs
    AiResponseStatusEnum:
      enum:
      - pending
      - generating
      - ready
      - error
      type: string
      description: |-
        * `pending` - Pending
        * `generating` - Generating
        * `ready` - Ready
        * `error` - Error
    AuditResponse:
      type: object
      properties:
        audit_id:
          type: string
        status:
          type: string
        business_name:
          type: string
      required:
      - audit_id
      - business_name
      - status
    AuditResult:
      type: object
      properties:
        audit_id:
          type: string
        status:
          type: string
        business_name:
          type: string
        business_info:
          $ref: '#/components/schemas/BusinessInfo'
        audit_score:
          $ref: '#/components/schemas/AuditScore'
        review_stats:
          $ref: '#/components/schemas/ReviewStats'
        revenue_impact:
          $ref: '#/components/schemas/RevenueImpact'
        ranking_data:
          $ref: '#/components/schemas/RankingData'
        created_at:
          type: string
          format: date-time
        expires_at:
          type: string
          format: date-time
        issues_identified:
          type: array
          items:
            type: string
        reviews_sample:
          type: array
          items: {}
        review_analysis:
          type: object
          additionalProperties: {}
        audit_metadata:
          type: object
          additionalProperties: {}
        reviews_fetched:
          type: integer
        total_reviews:
          type: integer
        citations_analysis:
          type: object
          additionalProperties: {}
        citations_checked_at:
          type: string
          format: date-time
        place_details:
          type: object
          additionalProperties: {}
        serpapi_maps_response:
          type: object
          additionalProperties: {}
      required:
      - audit_id
      - business_name
      - status
    AuditScore:
      type: object
      properties:
        overall_score:
          type: integer
        issues_found:
          type: integer
        passed_checks:
          type: integer
      required:
      - issues_found
      - overall_score
      - passed_checks
    AutoReplyConfig:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        triggers: {}
        action: {}
        is_enabled:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - action
      - created_at
      - id
      - name
      - triggers
      - updated_at
    AutoReplyConfigRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        triggers: {}
        action: {}
        is_enabled:
          type: boolean
      required:
      - action
      - name
      - triggers
    AutomatedReplySchedule:
      type: object
      description: Serializer for automated reply schedules.
      properties:
        id:
          type: integer
          readOnly: true
        status:
          $ref: '#/components/schemas/AutomatedReplyScheduleStatusEnum'
        current_step:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Current step in the sequence
        max_replies:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Maximum number of automated replies
        next_reply_at:
          type:
          - string
          - 'null'
          format: date-time
          description: When the next reply should be sent
        total_replies_sent:
          type: integer
          readOnly: true
        is_paused_by_user:
          type: boolean
        pause_reason:
          type:
          - string
          - 'null'
          maxLength: 255
        base_delay_hours:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Base delay in hours
        exponential_factor:
          type: number
          format: double
          description: Exponential backoff factor
        reply_templates:
          description: List of reply templates with delays
        next_reply_in_hours:
          type: string
          readOnly: true
        progress_percentage:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - next_reply_in_hours
      - progress_percentage
      - total_replies_sent
      - updated_at
    AutomatedReplyScheduleCreate:
      type: object
      description: Serializer for creating automated reply schedules.
      properties:
        max_replies:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Maximum number of automated replies
        base_delay_hours:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Base delay in hours
        exponential_factor:
          type: number
          format: double
          description: Exponential backoff factor
        reply_templates:
          description: List of reply templates with delays
    AutomatedReplyScheduleCreateRequest:
      type: object
      description: Serializer for creating automated reply schedules.
      properties:
        max_replies:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Maximum number of automated replies
        base_delay_hours:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Base delay in hours
        exponential_factor:
          type: number
          format: double
          description: Exponential backoff factor
        reply_templates:
          description: List of reply templates with delays
    AutomatedReplyScheduleRequest:
      type: object
      description: Serializer for automated reply schedules.
      properties:
        status:
          $ref: '#/components/schemas/AutomatedReplyScheduleStatusEnum'
        current_step:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Current step in the sequence
        max_replies:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Maximum number of automated replies
        next_reply_at:
          type:
          - string
          - 'null'
          format: date-time
          description: When the next reply should be sent
        is_paused_by_user:
          type: boolean
        pause_reason:
          type:
          - string
          - 'null'
          maxLength: 255
        base_delay_hours:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Base delay in hours
        exponential_factor:
          type: number
          format: double
          description: Exponential backoff factor
        reply_templates:
          description: List of reply templates with delays
    AutomatedReplyScheduleStatusEnum:
      enum:
      - active
      - paused
      - completed
      - cancelled
      type: string
      description: |-
        * `active` - Active
        * `paused` - Paused
        * `completed` - Completed
        * `cancelled` - Cancelled
    AutomatedReplyScheduleUpdate:
      type: object
      description: Serializer for updating automated reply schedules.
      properties:
        max_replies:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Maximum number of automated replies
        base_delay_hours:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Base delay in hours
        exponential_factor:
          type: number
          format: double
          description: Exponential backoff factor
        reply_templates:
          description: List of reply templates with delays
        is_paused_by_user:
          type: boolean
        pause_reason:
          type:
          - string
          - 'null'
          maxLength: 255
    AutomatedReplyScheduleUpdateRequest:
      type: object
      description: Serializer for updating automated reply schedules.
      properties:
        max_replies:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Maximum number of automated replies
        base_delay_hours:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Base delay in hours
        exponential_factor:
          type: number
          format: double
          description: Exponential backoff factor
        reply_templates:
          description: List of reply templates with delays
        is_paused_by_user:
          type: boolean
        pause_reason:
          type:
          - string
          - 'null'
          maxLength: 255
    AvailableFiltersResponse:
      type: object
      properties:
        categories:
          type: array
          items:
            type: string
        price_levels:
          type: array
          items:
            type: string
        rating_ranges:
          type: object
          additionalProperties: {}
        common_filters:
          type: object
          additionalProperties: {}
        location_filters:
          type: object
          additionalProperties: {}
      required:
      - categories
      - common_filters
      - location_filters
      - price_levels
      - rating_ranges
    BonusCitation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        business:
          type: integer
        url:
          type: string
          format: uri
          maxLength: 1024
        boost_type:
          $ref: '#/components/schemas/BoostTypeEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - business
      - created_at
      - id
      - url
    BonusCitationRequest:
      type: object
      properties:
        business:
          type: integer
        url:
          type: string
          format: uri
          minLength: 1
          maxLength: 1024
        boost_type:
          $ref: '#/components/schemas/BoostTypeEnum'
      required:
      - business
      - url
    BoostTypeEnum:
      enum:
      - LOCALBOOST
      - SUPERBOOST
      type: string
      description: |-
        * `LOCALBOOST` - LocalBoost
        * `SUPERBOOST` - SuperBoost
    BrandKit:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/SimpleUser'
          readOnly: true
        name:
          type: string
          maxLength: 255
        settings:
          $ref: '#/components/schemas/BrandKitSettings'
        instructions:
          type: string
          description: Instructions for the brand kit
          maxLength: 255
        is_public:
          type: boolean
          default: false
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        source_assets:
          type: array
          items:
            type: string
            format: uuid
          description: List of SourceAsset IDs to associate as thumbnails for this
            BrandKit.
      required:
      - created_at
      - id
      - updated_at
      - user
    BrandKitRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        settings:
          $ref: '#/components/schemas/BrandKitSettingsRequest'
        instructions:
          type: string
          description: Instructions for the brand kit
          maxLength: 255
        is_public:
          type: boolean
          default: false
        source_assets:
          type: array
          items:
            type: string
            format: uuid
          description: List of SourceAsset IDs to associate as thumbnails for this
            BrandKit.
    BrandKitSettings:
      type: object
      properties:
        palette:
          $ref: '#/components/schemas/PaletteSettings'
        fonts:
          $ref: '#/components/schemas/FontSettings'
        logoUrl:
          type: string
          format: uri
          description: URL to the brand logo
    BrandKitSettingsRequest:
      type: object
      properties:
        palette:
          $ref: '#/components/schemas/PaletteSettingsRequest'
        fonts:
          $ref: '#/components/schemas/FontSettingsRequest'
        logoUrl:
          type: string
          format: uri
          description: URL to the brand logo
    BulkPublishRequestRequest:
      type: object
      description: Serializer for bulk publish draft replies request.
      properties:
        review_ids:
          type: array
          items:
            type: string
            minLength: 1
          description: List of review IDs to publish draft replies for
      required:
      - review_ids
    BulkPublishResponse:
      type: object
      description: Serializer for bulk publish draft replies response.
      properties:
        success:
          type: boolean
        results:
          type: array
          items:
            $ref: '#/components/schemas/BulkPublishResult'
        queued_count:
          type: integer
        published_count:
          type: integer
        failed_count:
          type: integer
        message:
          type: string
      required:
      - failed_count
      - queued_count
      - results
      - success
    BulkPublishResult:
      type: object
      description: Serializer for individual bulk publish result.
      properties:
        review_id:
          type: string
        success:
          type: boolean
        status:
          type: string
        published_reply:
          type: string
        error:
          type: string
      required:
      - review_id
      - success
    BulkStatusResponse:
      type: object
      description: Serializer for bulk operation status response.
      properties:
        success:
          type: boolean
        monthly_usage:
          type: integer
        monthly_limit:
          type: integer
        remaining:
          type: integer
        draft_count:
          type: integer
        queued_count:
          type: integer
        publishing_count:
          type: integer
        failed_count:
          type: integer
        total_reviews:
          type: integer
        can_generate:
          type: boolean
      required:
      - can_generate
      - draft_count
      - failed_count
      - monthly_limit
      - monthly_usage
      - publishing_count
      - queued_count
      - remaining
      - success
      - total_reviews
    Business:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        url:
          type: string
          format: uri
          maxLength: 2000
        address:
          type:
          - string
          - 'null'
          maxLength: 255
        latitude:
          type:
          - number
          - 'null'
          format: double
        longitude:
          type:
          - number
          - 'null'
          format: double
        cid:
          type:
          - string
          - 'null'
          maxLength: 255
        fid:
          type:
          - string
          - 'null'
          maxLength: 255
        place_id:
          type:
          - string
          - 'null'
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        business_id:
          type:
          - string
          - 'null'
          maxLength: 255
        variations:
          oneOf:
          - {}
          - type: 'null'
        tags:
          type: array
          items:
            type: string
      required:
      - created_at
      - url
      - uuid
    BusinessEstimateResponse:
      type: object
      properties:
        estimated_total:
          type: integer
        sample_results:
          type: integer
        cost_estimate:
          type: number
          format: double
        location:
          type: string
        query:
          type: string
      required:
      - cost_estimate
      - estimated_total
      - location
      - query
      - sample_results
    BusinessInfo:
      type: object
      properties:
        name:
          type: string
        cid:
          type: string
        url:
          type: string
          format: uri
        total_reviews_found:
          type: integer
        address:
          type: string
        phone:
          type: string
        category:
          type: string
      required:
      - name
    BusinessLocation:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type:
          - string
          - 'null'
          maxLength: 255
        location_data: {}
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - updated_at
      - uuid
    BusinessLocationRequest:
      type: object
      properties:
        name:
          type:
          - string
          - 'null'
          maxLength: 255
        location_data: {}
        is_active:
          type: boolean
    BusinessRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        url:
          type: string
          format: uri
          minLength: 1
          maxLength: 2000
        address:
          type:
          - string
          - 'null'
          maxLength: 255
        latitude:
          type:
          - number
          - 'null'
          format: double
        longitude:
          type:
          - number
          - 'null'
          format: double
        cid:
          type:
          - string
          - 'null'
          maxLength: 255
        fid:
          type:
          - string
          - 'null'
          maxLength: 255
        place_id:
          type:
          - string
          - 'null'
          maxLength: 255
        business_id:
          type:
          - string
          - 'null'
          maxLength: 255
        variations:
          oneOf:
          - {}
          - type: 'null'
        tags:
          type: array
          items:
            type: string
            minLength: 1
        test_mode:
          type: boolean
          writeOnly: true
          default: false
          description: If true, mock data is used for latitude, longitude, etc.
      required:
      - url
    BusinessValidation:
      type: object
      description: Serializer for validating and creating a business from a URL
      properties:
        url:
          type: string
          format: uri
        place_id:
          type: string
        validation_only:
          type: boolean
          default: false
          description: If true, only validates and returns business information without
            creating a database record
      required:
      - url
    BusinessValidationRequest:
      type: object
      description: Serializer for validating and creating a business from a URL
      properties:
        url:
          type: string
          format: uri
          minLength: 1
        place_id:
          type: string
          minLength: 1
        business_details:
          type: object
          additionalProperties: {}
          writeOnly: true
          description: 'Optional JSON object containing business details. If provided,
            these values will be used instead of scraping from the URL. Keys can include:
            name, place_id, cid, address, latitude/longitude, variations, business_id'
        validation_only:
          type: boolean
          default: false
          description: If true, only validates and returns business information without
            creating a database record
      required:
      - url
    Checkout:
      type: object
      properties:
        price_id:
          type: string
        url:
          type: string
          format: uri
          readOnly: true
      required:
      - price_id
      - url
    CheckoutRequest:
      type: object
      properties:
        price_id:
          type: string
          minLength: 1
      required:
      - price_id
    CheckoutUrl:
      type: object
      description: Schema for each upgrade/downgrade Checkout link.
      properties:
        price_id:
          type: string
          description: Stripe Price ID that the Checkout session targets
        url:
          type: string
          format: uri
          description: Pre-signed Stripe Checkout URL for this price
        price_nickname:
          type: string
          description: Human-readable price nickname in Stripe
        amount:
          type: integer
          description: Unit amount in the smallest currency unit, e.g. cents
        currency:
          type: string
          description: ISO currency code
        interval:
          type: string
          description: Billing interval – month, year, none, etc.
        product_id:
          type: string
          description: Stripe Product ID this price belongs to
        product_name:
          type: string
          description: Readable product name fetched from Stripe
      required:
      - amount
      - currency
      - interval
      - price_id
      - price_nickname
      - product_id
      - product_name
      - url
    Citation:
      type: object
      description: Detailed serializer for individual citation objects.
      properties:
        id:
          type: integer
          description: Citation ID
        location:
          type:
          - integer
          - 'null'
          description: Location ID associated with this citation
        domain_name:
          type: string
          description: Domain name for the citation
        url_path:
          type: string
          description: URL path for the citation
        pages_url:
          type: string
          format: uri
          description: Cloudflare Pages URL
        domain_url:
          type: string
          format: uri
          description: Actual domain URL
        status:
          allOf:
          - $ref: '#/components/schemas/CitationStatusEnum'
          description: |-
            Current status of the citation

            * `WAITING` - WAITING
            * `DEPLOYED` - DEPLOYED
            * `FAILED` - FAILED
            * `NEW_DOMAIN_PENDING` - NEW_DOMAIN_PENDING
        test_mode:
          type: boolean
          description: Whether this is a test citation
        retry_count:
          type: integer
          description: Number of retry attempts
        meta:
          type: object
          additionalProperties: {}
          description: Additional metadata
        created_at:
          type: string
          format: date-time
          description: When the citation was created
        updated_at:
          type: string
          format: date-time
          description: When the citation was last updated
      required:
      - created_at
      - domain_name
      - domain_url
      - id
      - pages_url
      - retry_count
      - status
      - test_mode
      - updated_at
      - url_path
    CitationData:
      type: object
      description: Serializer for citation data in CID responses.
      properties:
        count:
          type: integer
          description: Number of citations found
        data:
          type: array
          items:
            $ref: '#/components/schemas/Citation'
          description: List of citation objects with full details
        citation_business_uuid:
          type: string
          format: uuid
          description: UUID of the citation business
        message:
          type: string
          description: Informational message
        error:
          type: string
          description: Error message if citations could not be retrieved
      required:
      - count
      - data
    CitationRequest:
      type: object
      properties:
        location:
          type:
          - integer
          - 'null'
        domain_name:
          type: string
          minLength: 1
          maxLength: 255
        url_path:
          type: string
          maxLength: 1024
        status:
          $ref: '#/components/schemas/CitationStatusEnum'
        meta: {}
    CitationStatusEnum:
      enum:
      - WAITING
      - DEPLOYED
      - FAILED
      - NEW_DOMAIN_PENDING
      type: string
      description: |-
        * `WAITING` - WAITING
        * `DEPLOYED` - DEPLOYED
        * `FAILED` - FAILED
        * `NEW_DOMAIN_PENDING` - NEW_DOMAIN_PENDING
    Conversation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        campaign:
          type: integer
          readOnly: true
        contact_email:
          type: string
          format: email
          maxLength: 254
        subject:
          type:
          - string
          - 'null'
          maxLength: 255
        is_read:
          type: boolean
        is_starred:
          type: boolean
        is_archived:
          type: boolean
        ai_response_draft:
          type:
          - string
          - 'null'
        ai_response_status:
          $ref: '#/components/schemas/AiResponseStatusEnum'
        preview:
          type: string
          readOnly: true
        sender_name:
          type: string
          readOnly: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          readOnly: true
        waiting_for_reply:
          type: boolean
          readOnly: true
        latest_message_timestamp:
          type: string
          format: date-time
          readOnly: true
        has_automated_replies:
          type: boolean
          description: Whether this conversation has automated replies enabled
        automated_schedule_info:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - automated_schedule_info
      - campaign
      - contact_email
      - created_at
      - id
      - latest_message_timestamp
      - preview
      - sender_name
      - tags
      - updated_at
      - waiting_for_reply
    ConversationAIReplyResponse:
      type: object
      description: Response serializer for AI-generated replies
      properties:
        success:
          type: boolean
        suggested_text:
          type: string
        objective_name:
          type:
          - string
          - 'null'
        saved_as_draft:
          type: boolean
        draft_id:
          type: integer
      required:
      - draft_id
      - objective_name
      - saved_as_draft
      - success
      - suggested_text
    ConversationAISuggestRequestRequest:
      type: object
      description: Request serializer for AI reply suggestions
      properties:
        objective_id:
          type: integer
          description: Optional objective ID to guide the suggested reply
    ConversationAISuggestResponse:
      type: object
      description: Response serializer for AI reply suggestions
      properties:
        success:
          type: boolean
        message:
          type: string
        thread_id:
          type: integer
        suggested_text:
          type: string
        ai_status:
          type: string
      required:
      - ai_status
      - message
      - success
      - suggested_text
      - thread_id
    ConversationArchiveRequest:
      type: object
      description: Serializer for archiving/unarchiving conversations
      properties:
        archive:
          type: boolean
          description: True to archive, False to unarchive the conversation
      required:
      - archive
    ConversationArchiveResponse:
      type: object
      description: Response serializer for archive operations
      properties:
        message:
          type: string
        conversation:
          $ref: '#/components/schemas/Conversation'
      required:
      - conversation
      - message
    ConversationAutomatedReplyRequest:
      type: object
      description: Serializer for enabling/disabling automated replies on conversations
      properties:
        enable:
          type: boolean
          description: True to enable automated replies, False to disable
        schedule_config:
          allOf:
          - $ref: '#/components/schemas/AutomatedReplyScheduleCreateRequest'
          description: Optional configuration for the automated reply schedule
      required:
      - enable
    ConversationAutomatedReplyResponse:
      type: object
      description: Response serializer for automated reply operations
      properties:
        message:
          type: string
        conversation:
          $ref: '#/components/schemas/Conversation'
        schedule:
          $ref: '#/components/schemas/AutomatedReplySchedule'
      required:
      - conversation
      - message
    ConversationDraftDetailResponse:
      type: object
      description: Response serializer for getting a specific draft
      properties:
        draft:
          type: object
          additionalProperties:
            type: string
        thread_id:
          type: integer
      required:
      - draft
      - thread_id
    ConversationDraftListResponse:
      type: object
      description: Response serializer for listing draft messages
      properties:
        drafts:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
        thread_id:
          type: integer
        count:
          type: integer
      required:
      - count
      - drafts
      - thread_id
    ConversationListResponse:
      type: object
      description: Response serializer for conversation list endpoint
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Conversation'
        count:
          type: integer
        sync_info:
          $ref: '#/components/schemas/EmailAgentSyncMetadata'
      required:
      - count
      - results
      - sync_info
    ConversationRequest:
      type: object
      properties:
        contact_email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        subject:
          type:
          - string
          - 'null'
          maxLength: 255
        is_read:
          type: boolean
        is_starred:
          type: boolean
        is_archived:
          type: boolean
        ai_response_draft:
          type:
          - string
          - 'null'
        ai_response_status:
          $ref: '#/components/schemas/AiResponseStatusEnum'
        has_automated_replies:
          type: boolean
          description: Whether this conversation has automated replies enabled
      required:
      - contact_email
    ConversationSummary:
      type: object
      description: Simplified conversation serializer for use in nested contexts to
        avoid circular references.
      properties:
        id:
          type: integer
          readOnly: true
        campaign:
          type: integer
          readOnly: true
        contact_email:
          type: string
          format: email
          maxLength: 254
        subject:
          type:
          - string
          - 'null'
          maxLength: 255
        is_read:
          type: boolean
        is_starred:
          type: boolean
        is_archived:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - campaign
      - contact_email
      - created_at
      - id
      - updated_at
    ConversationSummaryRequest:
      type: object
      description: Simplified conversation serializer for use in nested contexts to
        avoid circular references.
      properties:
        contact_email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        subject:
          type:
          - string
          - 'null'
          maxLength: 255
        is_read:
          type: boolean
        is_starred:
          type: boolean
        is_archived:
          type: boolean
      required:
      - contact_email
    ConversationTagRemoveRequestRequest:
      type: object
      description: Request serializer for removing tags from a conversation
      properties:
        tag_names:
          type: array
          items:
            type: string
            minLength: 1
          description: List of tag names to remove from the conversation
      required:
      - tag_names
    ConversationTagRemoveResponse:
      type: object
      description: Response serializer for tag removal operations
      properties:
        message:
          type: string
        removed_tags:
          type: array
          items:
            type: string
        conversation:
          $ref: '#/components/schemas/Conversation'
        warning:
          type: string
      required:
      - conversation
      - message
      - removed_tags
    ConversationTagRequestRequest:
      type: object
      description: Request serializer for adding tags to a conversation
      properties:
        tag_names:
          type: array
          items:
            type: string
            minLength: 1
          description: List of tag names to add to the conversation
        colors:
          type: object
          additionalProperties:
            type: string
            minLength: 1
          description: 'Optional mapping of tag names to colors (e.g. {''tag1'': ''#3B82F6''})'
      required:
      - tag_names
    ConversationTagResponse:
      type: object
      description: Response serializer for tag operations on conversations
      properties:
        message:
          type: string
        added_tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        conversation:
          $ref: '#/components/schemas/Conversation'
      required:
      - added_tags
      - conversation
      - message
    ConversationToggleArchiveResponse:
      type: object
      description: Response serializer for toggle archive operations
      properties:
        message:
          type: string
        is_archived:
          type: boolean
        conversation:
          $ref: '#/components/schemas/Conversation'
      required:
      - conversation
      - is_archived
      - message
    CountriesResponse:
      type: object
      properties:
        countries:
          type: array
          items:
            $ref: '#/components/schemas/Country'
      required:
      - countries
    Country:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        business_count:
          type: integer
      required:
      - business_count
      - code
      - name
    CreditLog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/CustomUser'
          readOnly: true
        scan:
          type:
          - integer
          - 'null'
        change:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Positive for credit addition, negative for deduction.
        balance_after:
          type: integer
          readOnly: true
        reason:
          type: string
          description: Reason for the credit change (e.g., Scan execution, Manual
            adjustment).
          maxLength: 255
        timestamp:
          type: string
          format: date-time
          readOnly: true
      required:
      - balance_after
      - change
      - id
      - timestamp
      - user
    CreditPackage:
      type: object
      description: Serializer for credit package information
      properties:
        price_id:
          type: string
          description: Stripe price ID
        amount:
          type: number
          format: double
          description: Price in dollars
        credits:
          type: integer
          description: Number of credits in this package
        leads:
          type: integer
          description: Number of leads (credits / 5)
        display_name:
          type: string
          description: Display name for the package
        currency:
          type: string
          description: Currency code (e.g., USD)
      required:
      - amount
      - credits
      - currency
      - display_name
      - leads
      - price_id
    CreditPackagesResponse:
      type: object
      properties:
        packages:
          type: array
          items:
            $ref: '#/components/schemas/CreditPackage'
      required:
      - packages
    CurrentSubscriptionResponse:
      type: object
      description: Top-level response serializer for /api/v1/subscriptions/current/
      properties:
        ranktracker:
          $ref: '#/components/schemas/SubscriptionPlan'
        citations:
          $ref: '#/components/schemas/SubscriptionPlan'
        localleads:
          $ref: '#/components/schemas/SubscriptionPlan'
        unpaid_invoice_urls:
          type: array
          items:
            type: string
            format: uri
          description: Hosted URLs for any open/unpaid invoices on the customer's
            account.
      required:
      - citations
      - localleads
      - ranktracker
    CustomUser:
      type: object
      description: Enhanced serializer for CustomUser that handles user creation and
        validation.
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
        first_name:
          type: string
        last_name:
          type: string
        is_premium:
          type: boolean
          readOnly: true
        is_trial:
          type: boolean
          readOnly: true
        is_burner_account:
          type: boolean
          readOnly: true
        fingerprint_visitor_id:
          type: string
          readOnly: true
        subscription:
          allOf:
          - $ref: '#/components/schemas/Subscription'
          readOnly: true
        metadata:
          readOnly: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
      required:
      - date_joined
      - email
      - fingerprint_visitor_id
      - id
      - is_burner_account
      - is_premium
      - is_trial
      - metadata
      - subscription
    CustomerOptin:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        campaign:
          type: string
          format: uuid
        customer_name:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          default: ''
          maxLength: 254
        phone_number:
          type:
          - string
          - 'null'
          maxLength: 20
        ip_address:
          type:
          - string
          - 'null'
          readOnly: true
        user_agent:
          type:
          - string
          - 'null'
          readOnly: true
        email_consent:
          type: boolean
        sms_consent:
          type: boolean
        status:
          allOf:
          - $ref: '#/components/schemas/CustomerOptinStatusEnum'
          readOnly: true
        review_submitted:
          type: boolean
        review_reminder_sent_at:
          type:
          - string
          - 'null'
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        scheduled_send_at:
          type: string
          readOnly: true
        sent_at:
          type: string
          readOnly: true
        email_queue_status:
          type: string
          readOnly: true
        email_queue_error:
          type: string
          readOnly: true
      required:
      - campaign
      - created_at
      - email_queue_error
      - email_queue_status
      - id
      - ip_address
      - review_reminder_sent_at
      - scheduled_send_at
      - sent_at
      - status
      - updated_at
      - user_agent
    CustomerOptinCreateRequest:
      type: object
      description: Serializer for creating customer opt-ins from the collection page
      properties:
        campaign:
          type: string
          format: uuid
        customer_name:
          type: string
          writeOnly: true
          minLength: 1
        email:
          type: string
          format: email
        phone_number:
          type:
          - string
          - 'null'
          maxLength: 20
        email_consent:
          type: boolean
        sms_consent:
          type: boolean
        via_csv:
          type: boolean
          default: false
      required:
      - campaign
      - customer_name
    CustomerOptinRequest:
      type: object
      properties:
        campaign:
          type: string
          format: uuid
        customer_name:
          type: string
          minLength: 1
          maxLength: 255
        email:
          type: string
          format: email
          default: ''
          maxLength: 254
        phone_number:
          type:
          - string
          - 'null'
          maxLength: 20
        email_consent:
          type: boolean
        sms_consent:
          type: boolean
        review_submitted:
          type: boolean
      required:
      - campaign
    CustomerOptinStatusEnum:
      enum:
      - pending
      - sent
      - viewed
      - submitted
      - failed
      type: string
      description: |-
        * `pending` - Pending
        * `sent` - Sent
        * `viewed` - Viewed
        * `submitted` - Submitted
        * `failed` - Failed
    DailyAnalyticsSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        campaign:
          type: string
          format: uuid
        date:
          type: string
          format: date
        page_views:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        opt_ins:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        emails_sent:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        emails_opened:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        review_clicks:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        reviews_submitted:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        conversion_rate:
          type: number
          format: double
      required:
      - campaign
      - date
      - id
    DeleteReplyResponse:
      type: object
      description: Serializer for reply deletion response.
      properties:
        success:
          type: boolean
        status:
          type: string
          description: Status of the deletion (e.g., 'queued')
        message:
          type: string
          description: Descriptive message about the operation
      required:
      - message
      - status
      - success
    DemoLead:
      type: object
      description: Serializer for demo lead data
      properties:
        full_name:
          type: string
          description: Contact person's full name
        company:
          type: string
          description: Company/Business name
        job_title:
          type: string
          description: Contact person's job title
        location:
          type: string
          description: Business address/location
        phone:
          type: string
          description: Phone number of the business
        url:
          type: string
          format: uri
          description: Company website URL
        email:
          type: string
          format: email
          description: Email address of the business
        description:
          type: string
          description: Business description
        business_name:
          type: string
          description: Name of the business
        address:
          type: string
          description: Physical address of the business
        website:
          type: string
          format: uri
          description: Website URL of the business
        category:
          type: string
          description: Business category or type
        rating:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
          description: Average rating of the business (1.0-5.0)
        reviews_count:
          type: integer
          description: Number of reviews for the business
      required:
      - address
      - business_name
      - category
      - company
      - location
      - phone
      - reviews_count
    DemoLeadsResponse:
      type: object
      properties:
        leads:
          type: array
          items:
            $ref: '#/components/schemas/DemoLead'
        is_demo:
          type: boolean
        total_count:
          type: integer
        message:
          type: string
      required:
      - is_demo
      - leads
      - message
      - total_count
    DemoVid:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        user:
          type: integer
          readOnly: true
        title:
          type:
          - string
          - 'null'
          maxLength: 255
        file_url:
          type:
          - string
          - 'null'
          format: uri
          readOnly: true
          description: Public R2 URL
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - file_url
      - user
      - uuid
    DemoVidRequest:
      type: object
      properties:
        title:
          type:
          - string
          - 'null'
          maxLength: 255
    DepartmentEnum:
      enum:
      - hr
      - finance
      - engineering
      - marketing
      - sales
      type: string
      description: |-
        * `hr` - Human Resources
        * `finance` - Finance
        * `engineering` - Engineering
        * `marketing` - Marketing
        * `sales` - Sales
    DirectionEnum:
      enum:
      - IN
      - OUT
      type: string
      description: |-
        * `IN` - Incoming
        * `OUT` - Outgoing
    EmailAccount:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        provider:
          $ref: '#/components/schemas/ProviderEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - provider
      - updated_at
    EmailAccountRequest:
      type: object
      properties:
        provider:
          $ref: '#/components/schemas/ProviderEnum'
      required:
      - provider
    EmailAgentSyncMetadata:
      type: object
      description: Serializer for the sync metadata used in email agent responses.
      properties:
        background_sync_enabled:
          type: boolean
          default: true
        sync_interval_minutes:
          type: integer
          default: 5
        last_synced_at:
          type:
          - string
          - 'null'
          format: date-time
        sync_triggered:
          type: boolean
          default: false
        pagination_disabled:
          type: boolean
          default: true
      required:
      - last_synced_at
    EmailCampaign:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        provider_id:
          type: string
          maxLength: 255
        name:
          type: string
          maxLength: 255
        provider:
          $ref: '#/components/schemas/ProviderEnum'
        external_status:
          type:
          - integer
          - 'null'
          maximum: 2147483647
          minimum: -2147483648
          description: Campaign status from external provider
        is_evergreen:
          type: boolean
        daily_limit:
          type:
          - integer
          - 'null'
          maximum: 2147483647
          minimum: -2147483648
        last_synced_at:
          type:
          - string
          - 'null'
          format: date-time
        is_active:
          type: boolean
        default_objective:
          allOf:
          - $ref: '#/components/schemas/ReplyObjective'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - default_objective
      - id
      - name
      - provider_id
      - updated_at
    EmailCampaignObjectiveAssignRequest:
      type: object
      description: Serializer for assigning objectives to campaigns
      properties:
        campaign_id:
          type: integer
          description: ID of the campaign to assign an objective to
        objective_id:
          type: integer
          description: ID of the objective to assign to the campaign
      required:
      - campaign_id
      - objective_id
    EmailCampaignObjectiveRemoveRequest:
      type: object
      description: Serializer for removing objectives from campaigns
      properties:
        campaign_id:
          type: integer
          description: ID of the campaign to remove the objective from
      required:
      - campaign_id
    EmailCampaignRequest:
      type: object
      properties:
        provider_id:
          type: string
          minLength: 1
          maxLength: 255
        name:
          type: string
          minLength: 1
          maxLength: 255
        provider:
          $ref: '#/components/schemas/ProviderEnum'
        external_status:
          type:
          - integer
          - 'null'
          maximum: 2147483647
          minimum: -2147483648
          description: Campaign status from external provider
        is_evergreen:
          type: boolean
        daily_limit:
          type:
          - integer
          - 'null'
          maximum: 2147483647
          minimum: -2147483648
        last_synced_at:
          type:
          - string
          - 'null'
          format: date-time
        is_active:
          type: boolean
      required:
      - name
      - provider_id
    EmailStatsResponse:
      type: object
      properties:
        total_emails:
          type: integer
        dataforseo_emails:
          type: integer
        firecrawl_emails:
          type: integer
      required:
      - dataforseo_emails
      - firecrawl_emails
      - total_emails
    Employee:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        name:
          type: string
          description: Your employee's name.
          maxLength: 100
        department:
          $ref: '#/components/schemas/DepartmentEnum'
        salary:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Your employee's annual salary.
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - department
      - id
      - name
      - salary
      - updated_at
      - user
    EmployeeRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          description: Your employee's name.
          maxLength: 100
        department:
          $ref: '#/components/schemas/DepartmentEnum'
        salary:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Your employee's annual salary.
      required:
      - department
      - name
      - salary
    ErrorResponse:
      type: object
      description: Standard error response serializer.
      properties:
        error:
          type: string
          description: Error message describing what went wrong
      required:
      - error
    EventTypeEnum:
      enum:
      - page_view
      - opt_in
      - email_sent
      - sms_sent
      - email_opened
      - review_clicked
      - review_submitted
      type: string
      description: |-
        * `page_view` - Collection Page Viewed
        * `opt_in` - Customer Opted In
        * `email_sent` - Email Reminder Sent
        * `sms_sent` - SMS Reminder Sent
        * `email_opened` - Email Opened
        * `review_clicked` - Review Link Clicked
        * `review_submitted` - Review Submitted
    FindBusinessDataByCIDResponse:
      type: object
      description: Response serializer for find_business_data_by_cid endpoint.
      properties:
        business:
          allOf:
          - $ref: '#/components/schemas/UnifiedBusiness'
          description: Business information
        cid:
          type: string
          description: Extracted CID from the URL
        scans:
          allOf:
          - $ref: '#/components/schemas/ScanData'
          description: Scan data and metadata
        citations:
          allOf:
          - $ref: '#/components/schemas/CitationData'
          description: Citation data and metadata
      required:
      - business
      - cid
      - citations
      - scans
    FindCitationsByCIDResponse:
      type: object
      description: Response serializer for find_citations_by_cid endpoint.
      properties:
        business:
          allOf:
          - $ref: '#/components/schemas/UnifiedBusiness'
          description: Business information
        cid:
          type: string
          description: Extracted CID from the URL
        citations_count:
          type: integer
          description: Number of citations found
        citations:
          type: array
          items:
            type: object
            additionalProperties: {}
          description: List of citation objects with details
        citation_business_uuid:
          type: string
          format: uuid
          description: UUID of the citation business
        message:
          type: string
          description: Informational message if no citations business found
      required:
      - business
      - cid
      - citations
      - citations_count
    FindScansByCIDResponse:
      type: object
      description: Response serializer for find_scans_by_cid endpoint.
      properties:
        business:
          allOf:
          - $ref: '#/components/schemas/UnifiedBusiness'
          description: Business information
        cid:
          type: string
          description: Extracted CID from the URL
        scans_count:
          type: integer
          description: Number of scans found
        scans:
          type: array
          items:
            type: object
            additionalProperties: {}
          description: List of scan objects with details
      required:
      - business
      - cid
      - scans
      - scans_count
    FontSettings:
      type: object
      properties:
        heading:
          type: string
          description: Heading font name
          maxLength: 100
        body:
          type: string
          description: Body font name
          maxLength: 100
    FontSettingsRequest:
      type: object
      properties:
        heading:
          type: string
          description: Heading font name
          maxLength: 100
        body:
          type: string
          description: Body font name
          maxLength: 100
    FormatEnum:
      enum:
      - csv
      - xlsx
      type: string
      description: |-
        * `csv` - csv
        * `xlsx` - xlsx
    FreeEstimateResponse:
      type: object
      properties:
        estimated_total:
          type: integer
        business_density:
          type: string
        location_info:
          type: object
          additionalProperties: {}
        query:
          type: string
        cost:
          type: number
          format: double
      required:
      - business_density
      - cost
      - estimated_total
      - location_info
      - query
    FrequencyB06Enum:
      enum:
      - daily
      - weekly
      - monthly
      type: string
      description: |-
        * `daily` - DAILY
        * `weekly` - WEEKLY
        * `monthly` - MONTHLY
        * `` - BLANK
    GMBAccountWithLocations:
      type: object
      description: Serializer for account data with its locations.
      properties:
        account_name:
          type: string
        account_id:
          type: string
        credential_id:
          type: integer
        business_name:
          type: string
        locations:
          type: array
          items:
            $ref: '#/components/schemas/GMBLocationWithResource'
      required:
      - account_id
      - account_name
      - credential_id
      - locations
    GMBAccountsListResponse:
      type: object
      description: Top-level response serializer for accounts with locations.
      properties:
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/GMBAccountWithLocations'
      required:
      - accounts
    GMBAudit:
      type: object
      description: Simple ModelSerializer for GMBAudit model.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        gmb_url:
          type: string
          format: uri
          maxLength: 200
        status:
          $ref: '#/components/schemas/Status316Enum'
        result: {}
        created_at:
          type: string
          format: date-time
          readOnly: true
        public_share_token:
          type:
          - string
          - 'null'
          format: uuid
          readOnly: true
          description: Unique token to publicly share this audit without login
        reviews_fetched:
          type: integer
          readOnly: true
          description: Number of reviews fetched so far
        total_reviews:
          type:
          - integer
          - 'null'
          readOnly: true
          description: Total reviews available (if known)
        last_updated:
          type: string
          format: date-time
          readOnly: true
          description: Last time the audit was updated
        serpapi_maps_response:
          oneOf:
          - {}
          - type: 'null'
          description: Complete SerpAPI Maps Place API response for debugging and
            place details
      required:
      - created_at
      - gmb_url
      - id
      - last_updated
      - public_share_token
      - reviews_fetched
      - total_reviews
    GMBLocationWithResource:
      type: object
      description: Serializer for location data including resource name.
      properties:
        resource_name:
          type: string
        location_id:
          type: string
        title:
          type: string
        address:
          type: string
        phone:
          type: string
        business_description:
          type: string
        keywords:
          type: string
        is_enabled:
          type: boolean
        weekly_posts_enabled:
          type: boolean
      required:
      - address
      - is_enabled
      - location_id
      - phone
      - resource_name
      - title
      - weekly_posts_enabled
    GMBPost:
      type: object
      description: Serializer for GMB posts including drafts and queued posts.
      properties:
        id:
          type: integer
          readOnly: true
        summary:
          type: string
          maxLength: 1500
        image_url:
          type: string
          format: uri
          maxLength: 500
        cta_type:
          type: string
          maxLength: 30
        cta_url:
          type: string
          format: uri
          maxLength: 500
        google_post_id:
          type: string
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/GMBPostStatusEnum'
          readOnly: true
        scheduled_for:
          type:
          - string
          - 'null'
          format: date-time
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        published_at:
          type: string
          format: date-time
          readOnly: true
        error_message:
          type: string
          readOnly: true
        location_resource_name:
          type: string
          readOnly: true
      required:
      - created_at
      - error_message
      - google_post_id
      - id
      - location_resource_name
      - published_at
      - status
      - updated_at
    GMBPostRequest:
      type: object
      description: Serializer for GMB posts including drafts and queued posts.
      properties:
        location_id:
          type: string
          writeOnly: true
          minLength: 1
          description: The location ID (e.g., '456' from 'accounts/123/locations/456')
        resource_name:
          type: string
          writeOnly: true
          minLength: 1
          description: The full resource name (e.g., 'accounts/123/locations/456')
        summary:
          type: string
          maxLength: 1500
        image_url:
          type: string
          format: uri
          maxLength: 500
        cta_type:
          type: string
          maxLength: 30
        cta_url:
          type: string
          format: uri
          maxLength: 500
        scheduled_for:
          type:
          - string
          - 'null'
          format: date-time
        event_title:
          type: string
          writeOnly: true
        language_code:
          type: string
          writeOnly: true
          default: en-US
    GMBPostStatusEnum:
      enum:
      - DRAFT
      - QUEUED
      - PUBLISHED
      - FAILED
      - FAILED_POSTING
      type: string
      description: |-
        * `DRAFT` - Draft
        * `QUEUED` - Queued
        * `PUBLISHED` - Published
        * `FAILED` - Failed
        * `FAILED_POSTING` - Failed Posting
    HumanToFiltersRequest:
      type: object
      description: Serializer for converting human query to DataForSEO filters
      properties:
        human_query:
          type: string
          minLength: 1
          description: Natural language description of the businesses you want to
            find (include location in the query)
          maxLength: 1000
        requested_count:
          type: integer
          maximum: 100000
          minimum: 1
          default: 100
          description: Number of business leads to retrieve (1-100,000), used for
            credit estimation
        require_phone:
          type: boolean
          default: false
          description: Filter to only include businesses with phone numbers
        require_email:
          type: boolean
          default: false
          description: Filter to only include businesses with email addresses
        industries_filter:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 100
          description: Optional list of specific industries to filter by
      required:
      - human_query
    HumanToFiltersResponse:
      type: object
      description: Serializer for the response from convertHumanToFilters API
      properties:
        filters:
          description: DataForSEO API filters extracted from the query
        estimated_credits:
          type: integer
          description: Estimated credit cost for the search
        requested_count:
          type: integer
          description: Number of leads requested for estimation
        location:
          type: array
          items:
            type: string
            maxLength: 255
          description: Extracted locations from the query
        industries:
          type: array
          items:
            type: string
            maxLength: 100
          description: Extracted industries/categories from the query
        phone_available:
          type: boolean
          description: Whether phone numbers are available for results
        email_available:
          type: boolean
          description: Whether email addresses are available for results
      required:
      - email_available
      - estimated_credits
      - filters
      - industries
      - location
      - phone_available
      - requested_count
    ImageGeneration:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/SimpleUser'
          readOnly: true
        brand_kit:
          type:
          - string
          - 'null'
          format: uuid
        source_asset:
          type:
          - string
          - 'null'
          format: uuid
        prompt:
          type: string
        output_url:
          type: string
          format: uri
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/ImageGenerationStatusEnum'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        video_url:
          type:
          - string
          - 'null'
          format: uri
          maxLength: 1024
      required:
      - created_at
      - id
      - output_url
      - status
      - user
    ImageGenerationRequest:
      type: object
      properties:
        brand_kit:
          type:
          - string
          - 'null'
          format: uuid
        source_asset:
          type:
          - string
          - 'null'
          format: uuid
        prompt:
          type: string
        video_url:
          type:
          - string
          - 'null'
          format: uri
          maxLength: 1024
    ImageGenerationStatusEnum:
      enum:
      - PENDING
      - RUNNING
      - SUCCESS
      - FAILED
      type: string
      description: |-
        * `PENDING` - Pending
        * `RUNNING` - Running
        * `SUCCESS` - Success
        * `FAILED` - Failed
    KeywordResult:
      type: object
      description: Serializer for keyword search results.
      properties:
        term:
          type: string
          description: Search keyword/term
        avg_rank:
          type: number
          format: double
          description: Average rank for this keyword
        pins:
          type: array
          items:
            $ref: '#/components/schemas/ScanPin'
          description: List of pins/locations searched for this keyword
      required:
      - avg_rank
      - pins
      - term
    LeadCredit:
      type: object
      description: Serializer for lead credits
      properties:
        balance:
          type: integer
          readOnly: true
          description: Current available lead credits
        total_earned:
          type: integer
          readOnly: true
          description: Total credits earned by the user
        total_spent:
          type: integer
          readOnly: true
          description: Total credits spent by the user
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: When the credit account was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: When the credit account was last updated
      required:
      - balance
      - created_at
      - total_earned
      - total_spent
      - updated_at
    LeadCreditCheckout:
      type: object
      description: Serializer for lead credit checkout
      properties:
        price_id:
          type: string
          description: Stripe price ID for the credit package
        url:
          type: string
          format: uri
          readOnly: true
      required:
      - price_id
      - url
    LeadCreditCheckoutRequest:
      type: object
      description: Serializer for lead credit checkout
      properties:
        price_id:
          type: string
          minLength: 1
          description: Stripe price ID for the credit package
      required:
      - price_id
    LeadCreditLog:
      type: object
      description: Serializer for lead credit logs
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          type: string
          readOnly: true
          description: User who used the credits
        search:
          allOf:
          - $ref: '#/components/schemas/LeadSearch'
          readOnly: true
          description: Lead search that consumed the credits
        credits_deducted:
          type: integer
          maximum: 2147483647
          minimum: 0
        balance_before:
          type: integer
          maximum: 2147483647
          minimum: 0
        balance_after:
          type: integer
          maximum: 2147483647
          minimum: 0
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - balance_after
      - balance_before
      - created_at
      - credits_deducted
      - id
      - search
      - user
    LeadResult:
      type: object
      description: Serializer for lead results
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        full_name:
          type:
          - string
          - 'null'
          description: Contact person's full name
          maxLength: 500
        company:
          type: string
          description: Company/Business name
        job_title:
          type:
          - string
          - 'null'
          description: Contact person's job title
          maxLength: 500
        location:
          type: string
          description: Business address/location
        phone:
          type:
          - string
          - 'null'
          maxLength: 500
        url:
          type: string
          format: uri
          description: Company website URL
        email:
          type:
          - string
          - 'null'
          format: email
          maxLength: 500
        description:
          type:
          - string
          - 'null'
          description: Business description
        business_name:
          type: string
          maxLength: 500
        address:
          type:
          - string
          - 'null'
        website:
          type:
          - string
          - 'null'
          format: uri
          maxLength: 500
        latitude:
          type:
          - string
          - 'null'
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,7})?$
        longitude:
          type:
          - string
          - 'null'
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,7})?$
        category:
          type:
          - string
          - 'null'
          maxLength: 500
        rating:
          type:
          - string
          - 'null'
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
        reviews_count:
          type: integer
          maximum: 2147483647
          minimum: 0
        business_hours:
          oneOf:
          - {}
          - type: 'null'
        cid:
          type: string
          maxLength: 500
        feature_id:
          type: string
          maxLength: 500
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - business_name
      - created_at
      - id
    LeadResultDetail:
      type: object
      description: Detailed serializer for lead results including raw data
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        full_name:
          type:
          - string
          - 'null'
          description: Contact person's full name
          maxLength: 500
        company:
          type: string
          description: Company/Business name
        job_title:
          type:
          - string
          - 'null'
          description: Contact person's job title
          maxLength: 500
        location:
          type: string
          description: Business address/location
        phone:
          type:
          - string
          - 'null'
          maxLength: 500
        url:
          type: string
          format: uri
          description: Company website URL
        email:
          type:
          - string
          - 'null'
          format: email
          maxLength: 500
        description:
          type:
          - string
          - 'null'
          description: Business description
        business_name:
          type: string
          maxLength: 500
        address:
          type:
          - string
          - 'null'
        website:
          type:
          - string
          - 'null'
          format: uri
          maxLength: 500
        latitude:
          type:
          - string
          - 'null'
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,7})?$
        longitude:
          type:
          - string
          - 'null'
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,7})?$
        category:
          type:
          - string
          - 'null'
          maxLength: 500
        rating:
          type:
          - string
          - 'null'
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
        reviews_count:
          type: integer
          maximum: 2147483647
          minimum: 0
        business_hours:
          oneOf:
          - {}
          - type: 'null'
        raw_data:
          description: Complete raw response from DataForSEO API
        cid:
          type: string
          maxLength: 500
        feature_id:
          type: string
          maxLength: 500
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - business_name
      - created_at
      - id
    LeadSearch:
      type: object
      description: Serializer for viewing lead searches
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          type: string
          readOnly: true
          description: User who created this search
        human_query:
          type: string
          description: Natural language description of what leads the user wants
        processed_filters:
          readOnly: true
          description: DataForSEO API filters generated from human query
        location:
          type: string
          description: Location for the search (city, state, etc.)
          maxLength: 255
        requested_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Number of leads requested
        credits_cost:
          type: integer
          readOnly: true
          description: Number of credits this search will cost
        is_test_mode:
          type: boolean
          title: Test Mode
          description: If true, no credits are used and relevant test data is returned
        status:
          allOf:
          - $ref: '#/components/schemas/Status316Enum'
          readOnly: true
        progress_percentage:
          type: integer
          readOnly: true
        error_message:
          type:
          - string
          - 'null'
          readOnly: true
        results_count:
          type: string
          readOnly: true
          description: Number of lead results found for this search
        valid_emails_count:
          type: string
          readOnly: true
          description: Number of lead results with valid email addresses
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        completed_at:
          type:
          - string
          - 'null'
          format: date-time
          readOnly: true
      required:
      - completed_at
      - created_at
      - credits_cost
      - error_message
      - human_query
      - id
      - location
      - processed_filters
      - progress_percentage
      - results_count
      - status
      - updated_at
      - user
      - valid_emails_count
    LeadSearchCreate:
      type: object
      description: Serializer for creating lead searches
      properties:
        human_query:
          type: string
          description: Natural language description of the type of businesses you're
            looking for
          maxLength: 1000
        location:
          type: string
          description: Geographic location to search for businesses (e.g., 'New York,
            NY' or 'London, UK')
          maxLength: 255
        country:
          type: string
          description: Optional country code (e.g., 'US', 'CA', 'GB'). If provided,
            will be used to filter results.
          maxLength: 2
        requested_count:
          type: integer
          maximum: 100000
          minimum: 1
          description: Number of business leads to retrieve (1-100,000)
        require_phone:
          type: boolean
          default: false
          description: Filter to only include businesses with phone numbers
        require_email:
          type: boolean
          default: false
          description: Filter to only include businesses with email addresses
        industries_filter:
          type: array
          items:
            type: string
            maxLength: 100
          description: Optional list of specific industries to filter by
        is_test_mode:
          type: boolean
          default: false
          description: Run in test mode - no credits used, returns relevant test data
        country_wide_search:
          type: boolean
          default: false
          description: Search the entire country instead of using location-based search
      required:
      - human_query
      - location
      - requested_count
    LeadSearchCreateRequest:
      type: object
      description: Serializer for creating lead searches
      properties:
        human_query:
          type: string
          minLength: 1
          description: Natural language description of the type of businesses you're
            looking for
          maxLength: 1000
        location:
          type: string
          minLength: 1
          description: Geographic location to search for businesses (e.g., 'New York,
            NY' or 'London, UK')
          maxLength: 255
        country:
          type: string
          description: Optional country code (e.g., 'US', 'CA', 'GB'). If provided,
            will be used to filter results.
          maxLength: 2
        requested_count:
          type: integer
          maximum: 100000
          minimum: 1
          description: Number of business leads to retrieve (1-100,000)
        require_phone:
          type: boolean
          default: false
          description: Filter to only include businesses with phone numbers
        require_email:
          type: boolean
          default: false
          description: Filter to only include businesses with email addresses
        industries_filter:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 100
          description: Optional list of specific industries to filter by
        is_test_mode:
          type: boolean
          default: false
          description: Run in test mode - no credits used, returns relevant test data
        country_wide_search:
          type: boolean
          default: false
          description: Search the entire country instead of using location-based search
      required:
      - human_query
      - location
      - requested_count
    LeadSearchExportRequest:
      type: object
      description: Serializer for exporting lead searches to CSV
      properties:
        search_ids:
          type: array
          items:
            type: string
            format: uuid
          description: List of search IDs to export (maximum 50)
          maxItems: 50
        include_headers:
          type: boolean
          default: true
          description: Whether to include column headers in the export
        format:
          allOf:
          - $ref: '#/components/schemas/FormatEnum'
          default: csv
          description: |-
            Export format (csv or xlsx)

            * `csv` - csv
            * `xlsx` - xlsx
      required:
      - search_ids
    LeadSearchRequest:
      type: object
      description: Serializer for viewing lead searches
      properties:
        human_query:
          type: string
          minLength: 1
          description: Natural language description of what leads the user wants
        location:
          type: string
          minLength: 1
          description: Location for the search (city, state, etc.)
          maxLength: 255
        requested_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Number of leads requested
        is_test_mode:
          type: boolean
          title: Test Mode
          description: If true, no credits are used and relevant test data is returned
      required:
      - human_query
      - location
    LeadSearchStatus:
      type: object
      description: Lightweight serializer for search status updates
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Unique identifier for the search
        status:
          type: string
          readOnly: true
          description: Current status of the search (pending, processing, completed,
            failed)
        progress_percentage:
          type: integer
          readOnly: true
          description: Progress percentage (0-100)
        error_message:
          type:
          - string
          - 'null'
          readOnly: true
          description: Error message if the search failed
        results_count:
          type: integer
          readOnly: true
          description: Number of results found
      required:
      - error_message
      - id
      - progress_percentage
      - results_count
      - status
    Location:
      type: object
      description: Simple serializer for location data.
      properties:
        resource_name:
          type: string
        title:
          type: string
        address:
          type: string
        phone:
          type: string
        business_description:
          type: string
        keywords:
          type: string
        is_enabled:
          type: boolean
          default: false
        credential_id:
          type: integer
        weekly_posts_enabled:
          type: boolean
          default: false
      required:
      - resource_name
      - title
    MerchantCredential:
      type: object
      description: Serializer for the MerchantCredential model.
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        business:
          type:
          - integer
          - 'null'
        business_name:
          type: string
          readOnly: true
        account_resource_name:
          type: string
          readOnly: true
        expires_at:
          type: string
          format: date-time
        project_number:
          type: string
          maxLength: 20
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - account_resource_name
      - business_name
      - created_at
      - expires_at
      - id
      - project_number
      - updated_at
      - user
    MerchantCredentialRequest:
      type: object
      description: Serializer for the MerchantCredential model.
      properties:
        user:
          type: integer
        business:
          type:
          - integer
          - 'null'
        expires_at:
          type: string
          format: date-time
        project_number:
          type: string
          minLength: 1
          maxLength: 20
      required:
      - expires_at
      - project_number
      - user
    Message:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        thread:
          allOf:
          - $ref: '#/components/schemas/ConversationSummary'
          readOnly: true
        direction:
          $ref: '#/components/schemas/DirectionEnum'
        body:
          type: string
        provider_message_id:
          type: string
          maxLength: 255
        timestamp:
          type: string
          format: date-time
        is_read:
          type: boolean
        sender_name:
          type:
          - string
          - 'null'
          maxLength: 255
        is_automated_reply:
          type: boolean
          description: Whether this message was sent as an automated reply
        automated_reply_step:
          type:
          - integer
          - 'null'
          maximum: 2147483647
          minimum: -2147483648
          description: Which step in the automated sequence this reply represents
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - body
      - created_at
      - direction
      - id
      - provider_message_id
      - thread
      - timestamp
      - updated_at
    MessageRequest:
      type: object
      properties:
        direction:
          $ref: '#/components/schemas/DirectionEnum'
        body:
          type: string
          minLength: 1
        provider_message_id:
          type: string
          minLength: 1
          maxLength: 255
        timestamp:
          type: string
          format: date-time
        is_read:
          type: boolean
        sender_name:
          type:
          - string
          - 'null'
          maxLength: 255
        is_automated_reply:
          type: boolean
          description: Whether this message was sent as an automated reply
        automated_reply_step:
          type:
          - integer
          - 'null'
          maximum: 2147483647
          minimum: -2147483648
          description: Which step in the automated sequence this reply represents
      required:
      - body
      - direction
      - provider_message_id
      - timestamp
    PaginatedActivityLogList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ActivityLog'
    PaginatedAutoReplyConfigList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AutoReplyConfig'
    PaginatedAutomatedReplyScheduleList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AutomatedReplySchedule'
    PaginatedBonusCitationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BonusCitation'
    PaginatedBrandKitList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BrandKit'
    PaginatedBusinessList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Business'
    PaginatedBusinessLocationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BusinessLocation'
    PaginatedCitationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Citation'
    PaginatedCreditLogList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CreditLog'
    PaginatedCustomerOptinList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CustomerOptin'
    PaginatedDailyAnalyticsSummaryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DailyAnalyticsSummary'
    PaginatedDemoVidList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DemoVid'
    PaginatedEmailAccountList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/EmailAccount'
    PaginatedEmailCampaignList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/EmailCampaign'
    PaginatedEmployeeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Employee'
    PaginatedGMBPostList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/GMBPost'
    PaginatedImageGenerationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ImageGeneration'
    PaginatedLeadCreditList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LeadCredit'
    PaginatedLeadCreditLogList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LeadCreditLog'
    PaginatedLeadResultList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LeadResult'
    PaginatedLeadSearchList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LeadSearch'
    PaginatedLocationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Location'
    PaginatedMerchantCredentialList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MerchantCredential'
    PaginatedMessageList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Message'
    PaginatedProjectList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Project'
    PaginatedReplyLogList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ReplyLog'
    PaginatedReplyObjectiveList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ReplyObjective'
    PaginatedReviewBoosterAnalyticsList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ReviewBoosterAnalytics'
    PaginatedReviewCampaignList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ReviewCampaign'
    PaginatedReviewEmailQueueList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ReviewEmailQueue'
    PaginatedReviewList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Review'
    PaginatedReviewRequestList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ReviewRequest'
    PaginatedScanListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ScanList'
    PaginatedSearchResultList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
    PaginatedSourceAssetList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SourceAsset'
    PaginatedTabList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Tab'
    PaginatedTagList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    PaginatedUnifiedBusinessList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UnifiedBusiness'
    PaginatedVideoList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Video'
    PaginatedWordPressConnectionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/WordPressConnection'
    PaletteSettings:
      type: object
      properties:
        primary:
          type: string
          description: 'Primary color (e.g., #RRGGBB)'
          maxLength: 7
        secondary:
          type: string
          description: 'Secondary color (e.g., #RRGGBB)'
          maxLength: 7
        accent:
          type: string
          description: 'Accent color (e.g., #RRGGBB)'
          maxLength: 7
        background:
          type: string
          description: 'Background color (e.g., #RRGGBB)'
          maxLength: 7
        text:
          type: string
          description: 'Text color (e.g., #RRGGBB)'
          maxLength: 7
    PaletteSettingsRequest:
      type: object
      properties:
        primary:
          type: string
          description: 'Primary color (e.g., #RRGGBB)'
          maxLength: 7
        secondary:
          type: string
          description: 'Secondary color (e.g., #RRGGBB)'
          maxLength: 7
        accent:
          type: string
          description: 'Accent color (e.g., #RRGGBB)'
          maxLength: 7
        background:
          type: string
          description: 'Background color (e.g., #RRGGBB)'
          maxLength: 7
        text:
          type: string
          description: 'Text color (e.g., #RRGGBB)'
          maxLength: 7
    PatchedAutoReplyConfigRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        triggers: {}
        action: {}
        is_enabled:
          type: boolean
    PatchedAutomatedReplyScheduleUpdateRequest:
      type: object
      description: Serializer for updating automated reply schedules.
      properties:
        max_replies:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Maximum number of automated replies
        base_delay_hours:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Base delay in hours
        exponential_factor:
          type: number
          format: double
          description: Exponential backoff factor
        reply_templates:
          description: List of reply templates with delays
        is_paused_by_user:
          type: boolean
        pause_reason:
          type:
          - string
          - 'null'
          maxLength: 255
    PatchedBonusCitationRequest:
      type: object
      properties:
        business:
          type: integer
        url:
          type: string
          format: uri
          minLength: 1
          maxLength: 1024
        boost_type:
          $ref: '#/components/schemas/BoostTypeEnum'
    PatchedBrandKitRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        settings:
          $ref: '#/components/schemas/BrandKitSettingsRequest'
        instructions:
          type: string
          description: Instructions for the brand kit
          maxLength: 255
        is_public:
          type: boolean
          default: false
        source_assets:
          type: array
          items:
            type: string
            format: uuid
          description: List of SourceAsset IDs to associate as thumbnails for this
            BrandKit.
    PatchedBusinessLocationRequest:
      type: object
      description: Serializer for business location data in scans.
      properties:
        lat:
          type: number
          format: double
          description: Business latitude
        lng:
          type: number
          format: double
          description: Business longitude
        name:
          type: string
          minLength: 1
          description: Business name
    PatchedBusinessRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        url:
          type: string
          format: uri
          minLength: 1
          maxLength: 2000
        address:
          type:
          - string
          - 'null'
          maxLength: 255
        latitude:
          type:
          - number
          - 'null'
          format: double
        longitude:
          type:
          - number
          - 'null'
          format: double
        cid:
          type:
          - string
          - 'null'
          maxLength: 255
        fid:
          type:
          - string
          - 'null'
          maxLength: 255
        place_id:
          type:
          - string
          - 'null'
          maxLength: 255
        business_id:
          type:
          - string
          - 'null'
          maxLength: 255
        variations:
          oneOf:
          - {}
          - type: 'null'
        tags:
          type: array
          items:
            type: string
            minLength: 1
        test_mode:
          type: boolean
          writeOnly: true
          default: false
          description: If true, mock data is used for latitude, longitude, etc.
    PatchedCitationRequest:
      type: object
      properties:
        location:
          type:
          - integer
          - 'null'
        domain_name:
          type: string
          minLength: 1
          maxLength: 255
        url_path:
          type: string
          maxLength: 1024
        status:
          $ref: '#/components/schemas/CitationStatusEnum'
        meta: {}
    PatchedConversationRequest:
      type: object
      properties:
        contact_email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        subject:
          type:
          - string
          - 'null'
          maxLength: 255
        is_read:
          type: boolean
        is_starred:
          type: boolean
        is_archived:
          type: boolean
        ai_response_draft:
          type:
          - string
          - 'null'
        ai_response_status:
          $ref: '#/components/schemas/AiResponseStatusEnum'
        has_automated_replies:
          type: boolean
          description: Whether this conversation has automated replies enabled
    PatchedCustomerOptinRequest:
      type: object
      properties:
        campaign:
          type: string
          format: uuid
        customer_name:
          type: string
          minLength: 1
          maxLength: 255
        email:
          type: string
          format: email
          default: ''
          maxLength: 254
        phone_number:
          type:
          - string
          - 'null'
          maxLength: 20
        email_consent:
          type: boolean
        sms_consent:
          type: boolean
        review_submitted:
          type: boolean
    PatchedDemoVidRequest:
      type: object
      properties:
        title:
          type:
          - string
          - 'null'
          maxLength: 255
    PatchedEmailAccountRequest:
      type: object
      properties:
        provider:
          $ref: '#/components/schemas/ProviderEnum'
    PatchedEmailCampaignRequest:
      type: object
      properties:
        provider_id:
          type: string
          minLength: 1
          maxLength: 255
        name:
          type: string
          minLength: 1
          maxLength: 255
        provider:
          $ref: '#/components/schemas/ProviderEnum'
        external_status:
          type:
          - integer
          - 'null'
          maximum: 2147483647
          minimum: -2147483648
          description: Campaign status from external provider
        is_evergreen:
          type: boolean
        daily_limit:
          type:
          - integer
          - 'null'
          maximum: 2147483647
          minimum: -2147483648
        last_synced_at:
          type:
          - string
          - 'null'
          format: date-time
        is_active:
          type: boolean
    PatchedEmployeeRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          description: Your employee's name.
          maxLength: 100
        department:
          $ref: '#/components/schemas/DepartmentEnum'
        salary:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Your employee's annual salary.
    PatchedGMBPostRequest:
      type: object
      description: Serializer for GMB posts including drafts and queued posts.
      properties:
        location_id:
          type: string
          writeOnly: true
          minLength: 1
          description: The location ID (e.g., '456' from 'accounts/123/locations/456')
        resource_name:
          type: string
          writeOnly: true
          minLength: 1
          description: The full resource name (e.g., 'accounts/123/locations/456')
        summary:
          type: string
          maxLength: 1500
        image_url:
          type: string
          format: uri
          maxLength: 500
        cta_type:
          type: string
          maxLength: 30
        cta_url:
          type: string
          format: uri
          maxLength: 500
        scheduled_for:
          type:
          - string
          - 'null'
          format: date-time
        event_title:
          type: string
          writeOnly: true
        language_code:
          type: string
          writeOnly: true
          default: en-US
    PatchedImageGenerationRequest:
      type: object
      properties:
        brand_kit:
          type:
          - string
          - 'null'
          format: uuid
        source_asset:
          type:
          - string
          - 'null'
          format: uuid
        prompt:
          type: string
        video_url:
          type:
          - string
          - 'null'
          format: uri
          maxLength: 1024
    PatchedLeadSearchRequest:
      type: object
      description: Serializer for viewing lead searches
      properties:
        human_query:
          type: string
          minLength: 1
          description: Natural language description of what leads the user wants
        location:
          type: string
          minLength: 1
          description: Location for the search (city, state, etc.)
          maxLength: 255
        requested_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Number of leads requested
        is_test_mode:
          type: boolean
          title: Test Mode
          description: If true, no credits are used and relevant test data is returned
    PatchedLocationRequest:
      type: object
      description: Simple serializer for location data.
      properties:
        resource_name:
          type: string
          minLength: 1
        title:
          type: string
        address:
          type: string
        phone:
          type: string
        business_description:
          type: string
        keywords:
          type: string
        is_enabled:
          type: boolean
          default: false
        credential_id:
          type: integer
        weekly_posts_enabled:
          type: boolean
          default: false
    PatchedMerchantCredentialRequest:
      type: object
      description: Serializer for the MerchantCredential model.
      properties:
        user:
          type: integer
        business:
          type:
          - integer
          - 'null'
        expires_at:
          type: string
          format: date-time
        project_number:
          type: string
          minLength: 1
          maxLength: 20
    PatchedMessageRequest:
      type: object
      properties:
        direction:
          $ref: '#/components/schemas/DirectionEnum'
        body:
          type: string
          minLength: 1
        provider_message_id:
          type: string
          minLength: 1
          maxLength: 255
        timestamp:
          type: string
          format: date-time
        is_read:
          type: boolean
        sender_name:
          type:
          - string
          - 'null'
          maxLength: 255
        is_automated_reply:
          type: boolean
          description: Whether this message was sent as an automated reply
        automated_reply_step:
          type:
          - integer
          - 'null'
          maximum: 2147483647
          minimum: -2147483648
          description: Which step in the automated sequence this reply represents
    PatchedProjectRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 160
    PatchedReplyLogRequest:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ReplyLogStatusEnum'
        sent_at:
          type: string
          format: date-time
        meta:
          oneOf:
          - {}
          - type: 'null'
    PatchedReplyObjectiveRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
        data:
          oneOf:
          - {}
          - type: 'null'
    PatchedReviewCampaignRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        review_url:
          type: string
          format: uri
          minLength: 1
          description: Google/Facebook/Yelp review link
          maxLength: 200
        status:
          $ref: '#/components/schemas/ReviewCampaignStatusEnum'
        business_name:
          type: string
          minLength: 1
          maxLength: 255
        business_address:
          type: string
          minLength: 1
        place_id:
          type:
          - string
          - 'null'
          maxLength: 255
        business_phone:
          type: string
          maxLength: 50
        business_website:
          type: string
          format: uri
          maxLength: 200
        latitude:
          type:
          - string
          - 'null'
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,7})?$
        longitude:
          type:
          - string
          - 'null'
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,7})?$
        test_mode:
          type: boolean
          description: Whether this campaign is in test mode
    PatchedReviewRequest:
      type: object
      description: Serializer for the GMBReview model.
      properties:
        review_id:
          type: string
          minLength: 1
          maxLength: 255
        star_rating:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        comment:
          type: string
        update_time:
          type: string
          format: date-time
        reviewer_name:
          type: string
          maxLength: 255
        reviewer_photo:
          type: string
          format: uri
          maxLength: 200
        reply_comment:
          type: string
        reply_update_time:
          type:
          - string
          - 'null'
          format: date-time
        draft_reply_comment:
          type: string
        ai_response_status:
          $ref: '#/components/schemas/AiResponseStatusEnum'
        reply_publish_status:
          allOf:
          - $ref: '#/components/schemas/ReplyPublishStatusEnum'
          description: |-
            Status of reply publication to Google

            * `draft` - Draft
            * `queued` - Queued for Publishing
            * `deleting` - Queued for Deletion
            * `publishing` - Publishing
            * `published` - Published
            * `failed` - Failed to Publish
            * `archived` - Archived (Not on Google)
        reply_publish_error:
          type: string
          description: Error message if publishing failed
    PatchedScanArchiveRequest:
      type: object
      description: Serializer for updating archived status of a scan
      properties:
        archived:
          type: boolean
          description: If true, this scan is archived and hidden from active lists
    PatchedScanDetailRequest:
      type: object
      description: Serializer for detailed scan view with results
      properties:
        status:
          $ref: '#/components/schemas/Status60bEnum'
        frequency:
          $ref: '#/components/schemas/FrequencyB06Enum'
        keywords: {}
        tags:
          type: array
          items:
            type: string
            minLength: 1
    PatchedSourceAssetRequest:
      type: object
      properties:
        url:
          type:
          - string
          - 'null'
          format: uri
          maxLength: 1024
        metadata:
          description: Stores original filename, content type, etc.
        brand_kits:
          type: array
          items:
            type: string
            format: uuid
    PatchedTabRequest:
      type: object
      properties:
        project:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 50
        index:
          type: integer
          maximum: 32767
          minimum: 0
        scene: {}
    PatchedTagRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
    PatchedUnifiedBusinessRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        description:
          type:
          - string
          - 'null'
          description: Business description for listings, SEO, and marketing
          maxLength: 10000
        url:
          type:
          - string
          - 'null'
          format: uri
          maxLength: 2000
        address:
          type:
          - string
          - 'null'
          maxLength: 500
        latitude:
          type:
          - number
          - 'null'
          format: double
        longitude:
          type:
          - number
          - 'null'
          format: double
        place_id:
          type:
          - string
          - 'null'
          maxLength: 255
        business_id:
          type:
          - string
          - 'null'
          maxLength: 255
        cid:
          type:
          - string
          - 'null'
          maxLength: 255
        status:
          $ref: '#/components/schemas/UnifiedBusinessStatusEnum'
        variations:
          oneOf:
          - {}
          - type: 'null'
          description: Business name variations
        phoneNumber:
          type:
          - string
          - 'null'
    PatchedVideoRequest:
      type: object
      description: Serializer for videos including status and download information
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type:
          - string
          - 'null'
        prompt:
          type:
          - string
          - 'null'
          description: Detailed prompt for the AI to generate the video
        style:
          type:
          - string
          - 'null'
          description: Style or theme for the video
          maxLength: 100
        duration:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Requested duration in seconds
        resolution:
          type: string
          minLength: 1
          description: Video resolution
          maxLength: 20
        is_default:
          type: boolean
          description: If True, this video can be shown as a default example
    PatchedWordPressConnectionRequest:
      type: object
      description: Serializer for the WordPressConnection model.
      properties:
        username:
          type: string
          minLength: 1
          maxLength: 255
        password:
          type: string
          writeOnly: true
          minLength: 1
        site_url:
          type: string
          format: uri
          minLength: 1
          maxLength: 200
    Project:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/SimpleUser'
          readOnly: true
        title:
          type: string
          maxLength: 160
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - user
    ProjectRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 160
    ProviderEnum:
      enum:
      - instantly
      - gmail
      - outlook
      - other
      type: string
      description: |-
        * `instantly` - Instantly
        * `gmail` - Gmail
        * `outlook` - Outlook
        * `other` - Other
    RankingData:
      type: object
      properties:
        current_ranking:
          type: integer
        competitors_ahead:
          type: integer
        ranking_factors_missing:
          type: array
          items:
            type: string
      required:
      - competitors_ahead
      - current_ranking
      - ranking_factors_missing
    Region:
      type: object
      properties:
        name:
          type: string
        country_code:
          type: string
        business_count:
          type: integer
      required:
      - business_count
      - country_code
      - name
    RegionsResponse:
      type: object
      properties:
        regions:
          type: array
          items:
            $ref: '#/components/schemas/Region'
      required:
      - regions
    ReplyLog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        message:
          allOf:
          - $ref: '#/components/schemas/Message'
          readOnly: true
        objective:
          allOf:
          - $ref: '#/components/schemas/ReplyObjective'
          readOnly: true
        status:
          $ref: '#/components/schemas/ReplyLogStatusEnum'
        sent_at:
          type: string
          format: date-time
        meta:
          oneOf:
          - {}
          - type: 'null'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - message
      - objective
      - sent_at
      - status
      - updated_at
    ReplyLogRequest:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ReplyLogStatusEnum'
        sent_at:
          type: string
          format: date-time
        meta:
          oneOf:
          - {}
          - type: 'null'
      required:
      - sent_at
      - status
    ReplyLogStatusEnum:
      enum:
      - SENT
      - FAILED
      - RESPONDED
      type: string
      description: |-
        * `SENT` - Sent
        * `FAILED` - Failed
        * `RESPONDED` - Responded
    ReplyObjective:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        data:
          oneOf:
          - {}
          - type: 'null'
        campaigns_using:
          type: object
          additionalProperties: {}
          description: Get campaigns that are using this objective as their default
          readOnly: true
      required:
      - campaigns_using
      - id
      - name
    ReplyObjectiveRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
        data:
          oneOf:
          - {}
          - type: 'null'
      required:
      - name
    ReplyPublishStatusEnum:
      enum:
      - draft
      - queued
      - deleting
      - publishing
      - published
      - failed
      - archived
      type: string
      description: |-
        * `draft` - Draft
        * `queued` - Queued for Publishing
        * `deleting` - Queued for Deletion
        * `publishing` - Publishing
        * `published` - Published
        * `failed` - Failed to Publish
        * `archived` - Archived (Not on Google)
    ReplyRequestRequest:
      type: object
      description: Serializer for posting a reply to a review.
      properties:
        comment:
          type: string
          minLength: 1
          description: The reply comment text (max 4096 characters)
          maxLength: 4096
      required:
      - comment
    ReplyResponse:
      type: object
      description: Serializer for reply posting response.
      properties:
        success:
          type: boolean
        status:
          type: string
          description: Status of the reply (e.g., 'queued')
        message:
          type: string
          description: Descriptive message about the operation
        reply:
          type: object
          additionalProperties: {}
          description: Reply details including comment and status
      required:
      - message
      - reply
      - status
      - success
    RevenueImpact:
      type: object
      properties:
        lost_revenue_monthly:
          type: number
          format: double
        lost_leads_monthly:
          type: integer
        potential_revenue_recovery:
          type: number
          format: double
      required:
      - lost_leads_monthly
      - lost_revenue_monthly
      - potential_revenue_recovery
    Review:
      type: object
      description: Serializer for the GMBReview model.
      properties:
        review_id:
          type: string
          maxLength: 255
        location_resource_name:
          type: string
          readOnly: true
        business_id:
          type: string
          readOnly: true
        location_name:
          type: string
          readOnly: true
        location_id:
          type: string
          readOnly: true
        star_rating:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        comment:
          type: string
        update_time:
          type: string
          format: date-time
        reviewer_name:
          type: string
          maxLength: 255
        reviewer_photo:
          type: string
          format: uri
          maxLength: 200
        reply_comment:
          type: string
        reply_update_time:
          type:
          - string
          - 'null'
          format: date-time
        has_reply:
          type: string
          readOnly: true
        draft_reply_comment:
          type: string
        draft_updated_at:
          type: string
          format: date-time
          readOnly: true
        ai_response_status:
          $ref: '#/components/schemas/AiResponseStatusEnum'
        reply_publish_status:
          allOf:
          - $ref: '#/components/schemas/ReplyPublishStatusEnum'
          description: |-
            Status of reply publication to Google

            * `draft` - Draft
            * `queued` - Queued for Publishing
            * `deleting` - Queued for Deletion
            * `publishing` - Publishing
            * `published` - Published
            * `failed` - Failed to Publish
            * `archived` - Archived (Not on Google)
        reply_publish_error:
          type: string
          description: Error message if publishing failed
      required:
      - business_id
      - draft_updated_at
      - has_reply
      - location_id
      - location_name
      - location_resource_name
      - review_id
      - star_rating
      - update_time
    ReviewBoosterAnalytics:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        campaign:
          type: string
          format: uuid
        event_type:
          allOf:
          - $ref: '#/components/schemas/EventTypeEnum'
          readOnly: true
        customer_email:
          type:
          - string
          - 'null'
          format: email
          maxLength: 254
        ip_address:
          type:
          - string
          - 'null'
        user_agent:
          type:
          - string
          - 'null'
        referrer:
          type:
          - string
          - 'null'
          format: uri
          maxLength: 200
        metadata: {}
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - campaign
      - created_at
      - event_type
      - id
    ReviewCampaign:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        review_url:
          type: string
          format: uri
          description: Google/Facebook/Yelp review link
          maxLength: 200
        status:
          $ref: '#/components/schemas/ReviewCampaignStatusEnum'
        business_name:
          type: string
          maxLength: 255
        business_address:
          type: string
        place_id:
          type:
          - string
          - 'null'
          maxLength: 255
        business_phone:
          type: string
          maxLength: 50
        business_website:
          type: string
          format: uri
          maxLength: 200
        latitude:
          type:
          - string
          - 'null'
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,7})?$
        longitude:
          type:
          - string
          - 'null'
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,7})?$
        unique_token:
          type: string
          readOnly: true
        collection_url:
          type: string
          readOnly: true
        qr_code_url:
          type: string
          readOnly: true
        opt_in_count:
          type: integer
          readOnly: true
        review_click_count:
          type: integer
          readOnly: true
        total_requests:
          type: integer
          readOnly: true
        test_mode:
          type: boolean
          description: Whether this campaign is in test mode
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - collection_url
      - created_at
      - id
      - name
      - opt_in_count
      - qr_code_url
      - review_click_count
      - review_url
      - total_requests
      - unique_token
      - updated_at
    ReviewCampaignRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        review_url:
          type: string
          format: uri
          minLength: 1
          description: Google/Facebook/Yelp review link
          maxLength: 200
        status:
          $ref: '#/components/schemas/ReviewCampaignStatusEnum'
        business_name:
          type: string
          minLength: 1
          maxLength: 255
        business_address:
          type: string
          minLength: 1
        place_id:
          type:
          - string
          - 'null'
          maxLength: 255
        business_phone:
          type: string
          maxLength: 50
        business_website:
          type: string
          format: uri
          maxLength: 200
        latitude:
          type:
          - string
          - 'null'
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,7})?$
        longitude:
          type:
          - string
          - 'null'
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,7})?$
        test_mode:
          type: boolean
          description: Whether this campaign is in test mode
      required:
      - name
      - review_url
    ReviewCampaignStatusEnum:
      enum:
      - active
      - paused
      type: string
      description: |-
        * `active` - Active
        * `paused` - Paused
    ReviewEmailQueue:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        campaign:
          type: string
          format: uuid
        customer_optin:
          type: string
          format: uuid
        email:
          type: string
          format: email
          maxLength: 254
        status:
          allOf:
          - $ref: '#/components/schemas/ReviewEmailQueueStatusEnum'
          readOnly: true
        error_message:
          type: string
          readOnly: true
        sent_at:
          type:
          - string
          - 'null'
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - campaign
      - created_at
      - customer_optin
      - email
      - error_message
      - id
      - sent_at
      - status
    ReviewEmailQueueStatusEnum:
      enum:
      - pending
      - scheduled
      - sent
      - failed_invalid_email
      - failed_no_consent
      - failed_plan_limit
      - failed_rate_limited
      - failed_retryable
      type: string
      description: |-
        * `pending` - Pending
        * `scheduled` - Scheduled
        * `sent` - Sent
        * `failed_invalid_email` - Failed - Invalid Email
        * `failed_no_consent` - Failed - No Consent
        * `failed_plan_limit` - Failed - Plan Limit
        * `failed_rate_limited` - Failed - Rate Limited
        * `failed_retryable` - Failed - Retryable
    ReviewRequest:
      type: object
      description: Serializer for the GMBReview model.
      properties:
        review_id:
          type: string
          minLength: 1
          maxLength: 255
        star_rating:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        comment:
          type: string
        update_time:
          type: string
          format: date-time
        reviewer_name:
          type: string
          maxLength: 255
        reviewer_photo:
          type: string
          format: uri
          maxLength: 200
        reply_comment:
          type: string
        reply_update_time:
          type:
          - string
          - 'null'
          format: date-time
        draft_reply_comment:
          type: string
        ai_response_status:
          $ref: '#/components/schemas/AiResponseStatusEnum'
        reply_publish_status:
          allOf:
          - $ref: '#/components/schemas/ReplyPublishStatusEnum'
          description: |-
            Status of reply publication to Google

            * `draft` - Draft
            * `queued` - Queued for Publishing
            * `deleting` - Queued for Deletion
            * `publishing` - Publishing
            * `published` - Published
            * `failed` - Failed to Publish
            * `archived` - Archived (Not on Google)
        reply_publish_error:
          type: string
          description: Error message if publishing failed
      required:
      - review_id
      - star_rating
      - update_time
    ReviewStats:
      type: object
      properties:
        total_reviews:
          type: integer
        average_rating:
          type: number
          format: double
        unanswered_reviews:
          type: integer
        response_rate:
          type: number
          format: double
          description: Percentage of reviews answered
      required:
      - average_rating
      - response_rate
      - total_reviews
      - unanswered_reviews
    ReviewSubmissionRequest:
      type: object
      properties:
        rating:
          type: integer
          maximum: 5
          minimum: 1
      required:
      - rating
    RunAuditRequest:
      type: object
      properties:
        location_id:
          type: string
          minLength: 1
          description: GMB location ID for authenticated locations
        gmb_url:
          type: string
          format: uri
          minLength: 1
          description: Public GMB URL
    Scan:
      type: object
      description: Detailed serializer for individual scan objects.
      properties:
        uuid:
          type: string
          format: uuid
          description: Unique identifier for the scan
        url:
          type: string
          format: uri
          description: Business URL
        status:
          allOf:
          - $ref: '#/components/schemas/ScanStatusEnum'
          description: |-
            Current status of the scan

            * `pending` - pending
            * `scheduled` - scheduled
            * `in_progress` - in_progress
            * `completed` - completed
            * `failed` - failed
            * `paused` - paused
            * `cancelled` - cancelled
        created_at:
          type: string
          format: date-time
          description: When the scan was created
        completed_at:
          type:
          - string
          - 'null'
          format: date-time
          description: When the scan was completed
        scanType:
          allOf:
          - $ref: '#/components/schemas/ScanTypeEnum'
          description: |-
            Type of scan

            * `one-time` - one-time
            * `repeating` - repeating
        frequency:
          allOf:
          - $ref: '#/components/schemas/ScanFrequencyEnum'
          description: "Frequency for repeating scans\n\n* `daily` - daily\n* `weekly`\
            \ - weekly\n* `monthly` - monthly\n* `` - "
        nextScanDate:
          type:
          - string
          - 'null'
          format: date-time
          description: Next scheduled scan date for repeating scans
        radius:
          type: number
          format: double
          description: Search radius in miles
        keyword_results:
          type: array
          items:
            $ref: '#/components/schemas/KeywordResult'
          description: Results for each keyword
        keywords:
          type: array
          items:
            type: string
          description: List of keywords searched
        pinCount:
          type: integer
          description: Number of search pins
        business_location:
          allOf:
          - $ref: '#/components/schemas/BusinessLocation'
          description: Business location coordinates
        business:
          allOf:
          - $ref: '#/components/schemas/ScanBusiness'
          description: Business information
        share_url:
          type:
          - string
          - 'null'
          format: uri
          description: Public share URL if enabled
        public_share_enabled:
          type: boolean
          description: Whether public sharing is enabled
        tags:
          type: array
          items:
            type: string
          description: Tags associated with the scan
        avg_rank:
          type: number
          format: double
          description: Average ranking across all keywords
        archived:
          type: boolean
          description: Whether the scan is archived
        test_mode:
          type: boolean
          description: Whether the scan was run in test mode
      required:
      - archived
      - avg_rank
      - business
      - created_at
      - keyword_results
      - keywords
      - pinCount
      - public_share_enabled
      - radius
      - scanType
      - status
      - tags
      - test_mode
      - url
      - uuid
    ScanArchive:
      type: object
      description: Serializer for updating archived status of a scan
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        archived:
          type: boolean
          description: If true, this scan is archived and hidden from active lists
      required:
      - uuid
    ScanArchiveRequest:
      type: object
      description: Serializer for updating archived status of a scan
      properties:
        archived:
          type: boolean
          description: If true, this scan is archived and hidden from active lists
    ScanBusiness:
      type: object
      description: Serializer for business data within scan responses.
      properties:
        uuid:
          type: string
          format: uuid
          description: Business UUID
        name:
          type: string
          description: Business name
        url:
          type: string
          format: uri
          description: Business website URL
        address:
          type: string
          description: Business address
        latitude:
          type: number
          format: double
          description: Business latitude
        longitude:
          type: number
          format: double
          description: Business longitude
        cid:
          type:
          - string
          - 'null'
          description: Google CID
        place_id:
          type:
          - string
          - 'null'
          description: Google Place ID
        created_at:
          type: string
          format: date-time
          description: When the business was created
        business_id:
          type:
          - string
          - 'null'
          description: Google Business ID
        variations:
          type: array
          items:
            type: string
          description: Business name variations
        tags:
          type: array
          items:
            type: string
          description: Business tags
      required:
      - address
      - created_at
      - latitude
      - longitude
      - name
      - tags
      - url
      - uuid
      - variations
    ScanCreate:
      type: object
      description: Serializer for creating a new scan
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        scanType:
          type: string
        frequency:
          $ref: '#/components/schemas/FrequencyB06Enum'
        keywords: {}
        pinCount:
          type: integer
        radius:
          type: number
          format: double
        tags:
          type: array
          items:
            type: string
      required:
      - scanType
      - uuid
    ScanCreateRequest:
      type: object
      description: Serializer for creating a new scan
      properties:
        url:
          type: string
          format: uri
          writeOnly: true
          minLength: 1
        business_uuid:
          type: string
          format: uuid
          writeOnly: true
        scanType:
          type: string
          minLength: 1
        frequency:
          $ref: '#/components/schemas/FrequencyB06Enum'
        keywords: {}
        pinCount:
          type: integer
        radius:
          type: number
          format: double
        test_mode:
          type: boolean
          writeOnly: true
          default: false
        tags:
          type: array
          items:
            type: string
            minLength: 1
        place_id:
          type:
          - string
          - 'null'
          writeOnly: true
        business_details:
          type: object
          additionalProperties: {}
          writeOnly: true
          description: 'Optional JSON object containing business details. If provided,
            these values will be used instead of scraping from the URL. Keys can include:
            name, place_id, cid, address, latitude/longitude, variations, business_id'
      required:
      - scanType
    ScanData:
      type: object
      description: Serializer for scan data in CID responses.
      properties:
        count:
          type: integer
          description: Number of scans found
        data:
          type: array
          items:
            $ref: '#/components/schemas/Scan'
          description: List of scan objects with full details
        error:
          type: string
          description: Error message if scans could not be retrieved
      required:
      - count
      - data
    ScanDetail:
      type: object
      description: Serializer for detailed scan view with results
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        status:
          $ref: '#/components/schemas/Status60bEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        completed_at:
          type:
          - string
          - 'null'
          format: date-time
          readOnly: true
        scanType:
          type: string
          readOnly: true
        frequency:
          $ref: '#/components/schemas/FrequencyB06Enum'
        nextScanDate:
          type: string
          format: date-time
          readOnly: true
        radius:
          type: number
          format: double
          readOnly: true
        keyword_results:
          type: string
          readOnly: true
        keywords: {}
        pinCount:
          type: integer
          readOnly: true
        business_location:
          type: string
          readOnly: true
        business:
          allOf:
          - $ref: '#/components/schemas/Business'
          readOnly: true
        share_url:
          type: string
          readOnly: true
        public_share_enabled:
          type: boolean
          readOnly: true
        tags:
          type: array
          items:
            type: string
        avg_rank:
          type: string
          readOnly: true
        archived:
          type: boolean
          readOnly: true
        test_mode:
          type: boolean
          readOnly: true
        execution_count:
          type: string
          readOnly: true
        latest_executions:
          type: string
          readOnly: true
      required:
      - archived
      - avg_rank
      - business
      - business_location
      - completed_at
      - created_at
      - execution_count
      - keyword_results
      - latest_executions
      - nextScanDate
      - pinCount
      - public_share_enabled
      - radius
      - scanType
      - share_url
      - test_mode
      - url
      - uuid
    ScanDetailRequest:
      type: object
      description: Serializer for detailed scan view with results
      properties:
        status:
          $ref: '#/components/schemas/Status60bEnum'
        frequency:
          $ref: '#/components/schemas/FrequencyB06Enum'
        keywords: {}
        tags:
          type: array
          items:
            type: string
            minLength: 1
    ScanFrequencyEnum:
      enum:
      - daily
      - weekly
      - monthly
      type: string
      description: "* `daily` - daily\n* `weekly` - weekly\n* `monthly` - monthly\n\
        * `` - "
    ScanList:
      type: object
      description: Serializer for listing scans with minimal info
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        business:
          allOf:
          - $ref: '#/components/schemas/Business'
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/Status60bEnum'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        completed_at:
          type:
          - string
          - 'null'
          format: date-time
          readOnly: true
        scanType:
          type: string
        frequency:
          $ref: '#/components/schemas/FrequencyB06Enum'
        nextScanDate:
          type: string
          format: date-time
          readOnly: true
        keywords: {}
        pinCount:
          type: integer
        radius:
          type: number
          format: double
        share_url:
          type: string
          readOnly: true
        public_share_enabled:
          type: boolean
          readOnly: true
        avg_rank:
          type: string
          readOnly: true
        archived:
          type: boolean
          readOnly: true
        is_paused:
          type: string
          readOnly: true
        test_mode:
          type: boolean
          readOnly: true
      required:
      - archived
      - avg_rank
      - business
      - completed_at
      - created_at
      - is_paused
      - nextScanDate
      - pinCount
      - public_share_enabled
      - scanType
      - share_url
      - status
      - test_mode
      - uuid
    ScanPin:
      type: object
      description: Serializer for ScanPin model.
      properties:
        id:
          type: integer
          readOnly: true
        scan:
          type: integer
          readOnly: true
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        is_center:
          type: boolean
        maps_link:
          type:
          - string
          - 'null'
          format: uri
          maxLength: 2000
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - latitude
      - longitude
      - scan
    ScanStatusEnum:
      enum:
      - pending
      - scheduled
      - in_progress
      - completed
      - failed
      - paused
      - cancelled
      type: string
      description: |-
        * `pending` - pending
        * `scheduled` - scheduled
        * `in_progress` - in_progress
        * `completed` - completed
        * `failed` - failed
        * `paused` - paused
        * `cancelled` - cancelled
    ScanTypeEnum:
      enum:
      - one-time
      - repeating
      type: string
      description: |-
        * `one-time` - one-time
        * `repeating` - repeating
    SearchResult:
      type: object
      description: Serializer for SearchResult model.
      properties:
        id:
          type: integer
          readOnly: true
        scan:
          type: integer
          readOnly: true
        pin:
          allOf:
          - $ref: '#/components/schemas/ScanPin'
          readOnly: true
        keyword:
          type: string
          maxLength: 255
        rank:
          type:
          - integer
          - 'null'
          maximum: 2147483647
          minimum: -2147483648
        found:
          type: boolean
        all_results: {}
        error:
          type:
          - string
          - 'null'
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - keyword
      - pin
      - scan
    SimpleUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
      required:
      - email
      - id
    SourceAsset:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/SimpleUser'
          readOnly: true
        url:
          type:
          - string
          - 'null'
          format: uri
          maxLength: 1024
        metadata:
          description: Stores original filename, content type, etc.
        brand_kits:
          type: array
          items:
            type: string
            format: uuid
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - user
    SourceAssetRequest:
      type: object
      properties:
        url:
          type:
          - string
          - 'null'
          format: uri
          maxLength: 1024
        metadata:
          description: Stores original filename, content type, etc.
        brand_kits:
          type: array
          items:
            type: string
            format: uuid
    Status316Enum:
      enum:
      - pending
      - processing
      - completed
      - failed
      type: string
      description: |-
        * `pending` - Pending
        * `processing` - Processing
        * `completed` - Completed
        * `failed` - Failed
    Status60bEnum:
      enum:
      - pending
      - scheduled
      - in_progress
      - completed
      - failed
      - paused
      - cancelled
      type: string
      description: |-
        * `pending` - PENDING
        * `scheduled` - SCHEDULED
        * `in_progress` - IN_PROGRESS
        * `completed` - COMPLETED
        * `failed` - FAILED
        * `paused` - PAUSED
        * `cancelled` - CANCELLED
    Subscription:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        credit_balance:
          type: integer
          readOnly: true
        plan:
          type: string
          readOnly: true
        subscription_status:
          type: string
          readOnly: true
      required:
      - credit_balance
      - id
      - plan
      - subscription_status
    SubscriptionPlan:
      type: object
      description: Schema for the active or free-tier plan returned by CurrentSubscriptionAPI.
      properties:
        price_id:
          type: string
        price_nickname:
          type: string
        amount:
          type: integer
        currency:
          type: string
        interval:
          type: string
        current_period_end:
          type: integer
        cancel_at_period_end:
          type: boolean
        cancel_at:
          type: integer
        status:
          type: string
        product_name:
          type: string
        current_plan:
          type: string
          description: Current plan name (e.g., STARTER, BALLER, LOCAL, etc.) or FREE
        checkout_urls:
          type: array
          items:
            $ref: '#/components/schemas/CheckoutUrl'
      required:
      - amount
      - cancel_at
      - cancel_at_period_end
      - checkout_urls
      - currency
      - current_period_end
      - current_plan
      - interval
      - price_id
      - price_nickname
      - product_name
      - status
    SyncResponse:
      type: object
      description: Serializer for the sync action response.
      properties:
        success:
          type: boolean
          readOnly: true
      required:
      - success
    Tab:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        project:
          type: string
          format: uuid
        project_details:
          allOf:
          - $ref: '#/components/schemas/Project'
          readOnly: true
        name:
          type: string
          maxLength: 50
        index:
          type: integer
          maximum: 32767
          minimum: 0
        scene: {}
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - id
      - index
      - project
      - project_details
      - scene
      - updated_at
    TabRequest:
      type: object
      properties:
        project:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 50
        index:
          type: integer
          maximum: 32767
          minimum: 0
        scene: {}
      required:
      - index
      - project
      - scene
    Tag:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 50
      required:
      - id
      - name
    TagCreate:
      type: object
      description: Serializer for creating new tags
      properties:
        name:
          type: string
          maxLength: 50
        color:
          type: string
          description: Hex color code for the tag
          maxLength: 7
        description:
          type:
          - string
          - 'null'
          maxLength: 200
      required:
      - name
    TagCreateRequest:
      type: object
      description: Serializer for creating new tags
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
        color:
          type: string
          minLength: 1
          description: Hex color code for the tag
          maxLength: 7
        description:
          type:
          - string
          - 'null'
          maxLength: 200
      required:
      - name
    TagRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
      required:
      - name
    ThreadMessage:
      type: object
      description: Simplified serializer for messages in a thread without thread details
      properties:
        id:
          type: integer
          readOnly: true
        direction:
          $ref: '#/components/schemas/DirectionEnum'
        body:
          type: string
        provider_message_id:
          type: string
          maxLength: 255
        timestamp:
          type: string
          format: date-time
        is_read:
          type: boolean
        sender_name:
          type:
          - string
          - 'null'
          maxLength: 255
        is_automated_reply:
          type: boolean
          description: Whether this message was sent as an automated reply
        automated_reply_step:
          type:
          - integer
          - 'null'
          maximum: 2147483647
          minimum: -2147483648
          description: Which step in the automated sequence this reply represents
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - body
      - created_at
      - direction
      - id
      - provider_message_id
      - timestamp
      - updated_at
    ThreadMessageList:
      type: object
      description: Serializer for listing messages in a thread
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ThreadMessage'
          readOnly: true
        thread_id:
          type: integer
          readOnly: true
        contact_email:
          type: string
          format: email
          readOnly: true
        subject:
          type: string
          readOnly: true
      required:
      - contact_email
      - messages
      - subject
      - thread_id
    ThreadMessageSendRequest:
      type: object
      description: Serializer for sending a message to a thread
      properties:
        body:
          type: string
          minLength: 1
          description: Message body content to send
        objective_id:
          type: integer
          description: Optional objective ID for the reply
      required:
      - body
    ToggleWeeklyPostsRequestRequest:
      type: object
      description: Serializer for toggling weekly posts on/off for a location.
      properties:
        enabled:
          type: boolean
          description: Whether to enable or disable weekly posts for this location
      required:
      - enabled
    ToggleWeeklyPostsResponse:
      type: object
      description: Serializer for weekly posts toggle response.
      properties:
        success:
          type: boolean
        enabled:
          type: boolean
          description: Current state of weekly posts for this location
        message:
          type: string
          description: Descriptive message about the operation
      required:
      - enabled
      - message
      - success
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
      required:
      - access
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - refresh
    UnifiedBusiness:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type:
          - string
          - 'null'
          description: Business description for listings, SEO, and marketing
          maxLength: 10000
        display_name:
          type: string
          readOnly: true
        url:
          type:
          - string
          - 'null'
          format: uri
          maxLength: 2000
        address:
          type:
          - string
          - 'null'
          maxLength: 500
        latitude:
          type:
          - number
          - 'null'
          format: double
        longitude:
          type:
          - number
          - 'null'
          format: double
        place_id:
          type:
          - string
          - 'null'
          maxLength: 255
        business_id:
          type:
          - string
          - 'null'
          maxLength: 255
        cid:
          type:
          - string
          - 'null'
          maxLength: 255
        fid:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/UnifiedBusinessStatusEnum'
        variations:
          oneOf:
          - {}
          - type: 'null'
          description: Business name variations
        phoneNumber:
          type:
          - string
          - 'null'
        tags:
          type: string
          readOnly: true
        locations:
          type: array
          items:
            $ref: '#/components/schemas/BusinessLocation'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - display_name
      - fid
      - locations
      - tags
      - updated_at
      - uuid
    UnifiedBusinessRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        description:
          type:
          - string
          - 'null'
          description: Business description for listings, SEO, and marketing
          maxLength: 10000
        url:
          type:
          - string
          - 'null'
          format: uri
          maxLength: 2000
        address:
          type:
          - string
          - 'null'
          maxLength: 500
        latitude:
          type:
          - number
          - 'null'
          format: double
        longitude:
          type:
          - number
          - 'null'
          format: double
        place_id:
          type:
          - string
          - 'null'
          maxLength: 255
        business_id:
          type:
          - string
          - 'null'
          maxLength: 255
        cid:
          type:
          - string
          - 'null'
          maxLength: 255
        status:
          $ref: '#/components/schemas/UnifiedBusinessStatusEnum'
        variations:
          oneOf:
          - {}
          - type: 'null'
          description: Business name variations
        phoneNumber:
          type:
          - string
          - 'null'
    UnifiedBusinessStatusEnum:
      enum:
      - ACTIVE
      - PAUSED
      - ARCHIVED
      - DELETED
      type: string
      description: |-
        * `ACTIVE` - Active
        * `PAUSED` - Paused
        * `ARCHIVED` - Archived
        * `DELETED` - Deleted
    UserBalance:
      type: object
      properties:
        balance:
          type: integer
          readOnly: true
        usage:
          type: integer
          readOnly: true
      required:
      - balance
      - usage
    Video:
      type: object
      description: Serializer for videos including status and download information
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type:
          - string
          - 'null'
        prompt:
          type:
          - string
          - 'null'
          description: Detailed prompt for the AI to generate the video
        style:
          type:
          - string
          - 'null'
          description: Style or theme for the video
          maxLength: 100
        duration:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Requested duration in seconds
        resolution:
          type: string
          description: Video resolution
          maxLength: 20
        status:
          allOf:
          - $ref: '#/components/schemas/Status316Enum'
          readOnly: true
        is_default:
          type: boolean
          description: If True, this video can be shown as a default example
        file_url:
          type:
          - string
          - 'null'
          format: uri
          readOnly: true
        download_url:
          type: string
          readOnly: true
        download_count:
          type: integer
          readOnly: true
        file_size:
          type:
          - integer
          - 'null'
          readOnly: true
          description: File size in bytes
        external_request_id:
          type:
          - string
          - 'null'
          readOnly: true
          description: ID from the external AI video service
        file_path:
          type:
          - string
          - 'null'
          readOnly: true
        metadata:
          oneOf:
          - {}
          - type: 'null'
          readOnly: true
          description: Additional metadata from the AI service
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        completed_at:
          type:
          - string
          - 'null'
          format: date-time
          readOnly: true
      required:
      - completed_at
      - created_at
      - download_count
      - download_url
      - external_request_id
      - file_path
      - file_size
      - file_url
      - metadata
      - status
      - updated_at
      - uuid
    VideoCreate:
      type: object
      description: Serializer for creating a new video
      properties:
        title:
          type: string
          maxLength: 255
        description:
          type:
          - string
          - 'null'
        prompt:
          type:
          - string
          - 'null'
          description: Detailed prompt for the AI to generate the video
        style:
          type:
          - string
          - 'null'
          description: Style or theme for the video
          maxLength: 100
        duration:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Requested duration in seconds
        resolution:
          type: string
          description: Video resolution
          maxLength: 20
        is_default:
          type: boolean
          description: If True, this video can be shown as a default example
    VideoCreateRequest:
      type: object
      description: Serializer for creating a new video
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type:
          - string
          - 'null'
        prompt:
          type:
          - string
          - 'null'
          description: Detailed prompt for the AI to generate the video
        style:
          type:
          - string
          - 'null'
          description: Style or theme for the video
          maxLength: 100
        duration:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Requested duration in seconds
        resolution:
          type: string
          minLength: 1
          description: Video resolution
          maxLength: 20
        is_default:
          type: boolean
          description: If True, this video can be shown as a default example
    VideoRequest:
      type: object
      description: Serializer for videos including status and download information
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type:
          - string
          - 'null'
        prompt:
          type:
          - string
          - 'null'
          description: Detailed prompt for the AI to generate the video
        style:
          type:
          - string
          - 'null'
          description: Style or theme for the video
          maxLength: 100
        duration:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Requested duration in seconds
        resolution:
          type: string
          minLength: 1
          description: Video resolution
          maxLength: 20
        is_default:
          type: boolean
          description: If True, this video can be shown as a default example
    WordPressConnection:
      type: object
      description: Serializer for the WordPressConnection model.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        is_active:
          type: boolean
          readOnly: true
        username:
          type: string
          maxLength: 255
        site_url:
          type: string
          format: uri
          maxLength: 200
      required:
      - id
      - is_active
      - site_url
      - username
    WordPressConnectionRequest:
      type: object
      description: Serializer for the WordPressConnection model.
      properties:
        username:
          type: string
          minLength: 1
          maxLength: 255
        password:
          type: string
          writeOnly: true
          minLength: 1
        site_url:
          type: string
          format: uri
          minLength: 1
          maxLength: 200
      required:
      - password
      - site_url
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
